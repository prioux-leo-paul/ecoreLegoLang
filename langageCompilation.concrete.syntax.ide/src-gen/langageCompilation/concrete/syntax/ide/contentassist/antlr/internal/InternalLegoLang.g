/*
 * generated by Xtext 2.25.0
 */
grammar InternalLegoLang;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package langageCompilation.concrete.syntax.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package langageCompilation.concrete.syntax.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import langageCompilation.concrete.syntax.services.LegoLangGrammarAccess;

}
@parser::members {
	private LegoLangGrammarAccess grammarAccess;

	public void setGrammarAccess(LegoLangGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getGroup()); }
		(rule__Program__Group__0)
		{ after(grammarAccess.getProgramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinaryOperation
entryRuleBinaryOperation
:
{ before(grammarAccess.getBinaryOperationRule()); }
	 ruleBinaryOperation
{ after(grammarAccess.getBinaryOperationRule()); } 
	 EOF 
;

// Rule BinaryOperation
ruleBinaryOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinaryOperationAccess().getAlternatives()); }
		(rule__BinaryOperation__Alternatives)
		{ after(grammarAccess.getBinaryOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getAlternatives()); }
		(rule__Variable__Alternatives)
		{ after(grammarAccess.getVariableAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparaison
entryRuleComparaison
:
{ before(grammarAccess.getComparaisonRule()); }
	 ruleComparaison
{ after(grammarAccess.getComparaisonRule()); } 
	 EOF 
;

// Rule Comparaison
ruleComparaison 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparaisonAccess().getAlternatives()); }
		(rule__Comparaison__Alternatives)
		{ after(grammarAccess.getComparaisonAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEngine
entryRuleEngine
:
{ before(grammarAccess.getEngineRule()); }
	 ruleEngine
{ after(grammarAccess.getEngineRule()); } 
	 EOF 
;

// Rule Engine
ruleEngine 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEngineAccess().getWheelEngineParserRuleCall()); }
		ruleWheelEngine
		{ after(grammarAccess.getEngineAccess().getWheelEngineParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSensor
entryRuleSensor
:
{ before(grammarAccess.getSensorRule()); }
	 ruleSensor
{ after(grammarAccess.getSensorRule()); } 
	 EOF 
;

// Rule Sensor
ruleSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSensorAccess().getAlternatives()); }
		(rule__Sensor__Alternatives)
		{ after(grammarAccess.getSensorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWheelEngine
entryRuleWheelEngine
:
{ before(grammarAccess.getWheelEngineRule()); }
	 ruleWheelEngine
{ after(grammarAccess.getWheelEngineRule()); } 
	 EOF 
;

// Rule WheelEngine
ruleWheelEngine 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWheelEngineAccess().getGroup()); }
		(rule__WheelEngine__Group__0)
		{ after(grammarAccess.getWheelEngineAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColorSensor
entryRuleColorSensor
:
{ before(grammarAccess.getColorSensorRule()); }
	 ruleColorSensor
{ after(grammarAccess.getColorSensorRule()); } 
	 EOF 
;

// Rule ColorSensor
ruleColorSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColorSensorAccess().getGroup()); }
		(rule__ColorSensor__Group__0)
		{ after(grammarAccess.getColorSensorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLaserSensor
entryRuleLaserSensor
:
{ before(grammarAccess.getLaserSensorRule()); }
	 ruleLaserSensor
{ after(grammarAccess.getLaserSensorRule()); } 
	 EOF 
;

// Rule LaserSensor
ruleLaserSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLaserSensorAccess().getGroup()); }
		(rule__LaserSensor__Group__0)
		{ after(grammarAccess.getLaserSensorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGPSSensor
entryRuleGPSSensor
:
{ before(grammarAccess.getGPSSensorRule()); }
	 ruleGPSSensor
{ after(grammarAccess.getGPSSensorRule()); } 
	 EOF 
;

// Rule GPSSensor
ruleGPSSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGPSSensorAccess().getGroup()); }
		(rule__GPSSensor__Group__0)
		{ after(grammarAccess.getGPSSensorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGyroSensor
entryRuleGyroSensor
:
{ before(grammarAccess.getGyroSensorRule()); }
	 ruleGyroSensor
{ after(grammarAccess.getGyroSensorRule()); } 
	 EOF 
;

// Rule GyroSensor
ruleGyroSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGyroSensorAccess().getGroup()); }
		(rule__GyroSensor__Group__0)
		{ after(grammarAccess.getGyroSensorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUltraSonicSensor
entryRuleUltraSonicSensor
:
{ before(grammarAccess.getUltraSonicSensorRule()); }
	 ruleUltraSonicSensor
{ after(grammarAccess.getUltraSonicSensorRule()); } 
	 EOF 
;

// Rule UltraSonicSensor
ruleUltraSonicSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUltraSonicSensorAccess().getGroup()); }
		(rule__UltraSonicSensor__Group__0)
		{ after(grammarAccess.getUltraSonicSensorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCar
entryRuleCar
:
{ before(grammarAccess.getCarRule()); }
	 ruleCar
{ after(grammarAccess.getCarRule()); } 
	 EOF 
;

// Rule Car
ruleCar 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCarAccess().getGroup()); }
		(rule__Car__Group__0)
		{ after(grammarAccess.getCarAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEngineOperation
entryRuleEngineOperation
:
{ before(grammarAccess.getEngineOperationRule()); }
	 ruleEngineOperation
{ after(grammarAccess.getEngineOperationRule()); } 
	 EOF 
;

// Rule EngineOperation
ruleEngineOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEngineOperationAccess().getVitesseOperationParserRuleCall()); }
		ruleVitesseOperation
		{ after(grammarAccess.getEngineOperationAccess().getVitesseOperationParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSensorOperation
entryRuleSensorOperation
:
{ before(grammarAccess.getSensorOperationRule()); }
	 ruleSensorOperation
{ after(grammarAccess.getSensorOperationRule()); } 
	 EOF 
;

// Rule SensorOperation
ruleSensorOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSensorOperationAccess().getAlternatives()); }
		(rule__SensorOperation__Alternatives)
		{ after(grammarAccess.getSensorOperationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVitesseOperation
entryRuleVitesseOperation
:
{ before(grammarAccess.getVitesseOperationRule()); }
	 ruleVitesseOperation
{ after(grammarAccess.getVitesseOperationRule()); } 
	 EOF 
;

// Rule VitesseOperation
ruleVitesseOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVitesseOperationAccess().getGroup()); }
		(rule__VitesseOperation__Group__0)
		{ after(grammarAccess.getVitesseOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColorOperation
entryRuleColorOperation
:
{ before(grammarAccess.getColorOperationRule()); }
	 ruleColorOperation
{ after(grammarAccess.getColorOperationRule()); } 
	 EOF 
;

// Rule ColorOperation
ruleColorOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColorOperationAccess().getGroup()); }
		(rule__ColorOperation__Group__0)
		{ after(grammarAccess.getColorOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntensityOperation
entryRuleIntensityOperation
:
{ before(grammarAccess.getIntensityOperationRule()); }
	 ruleIntensityOperation
{ after(grammarAccess.getIntensityOperationRule()); } 
	 EOF 
;

// Rule IntensityOperation
ruleIntensityOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntensityOperationAccess().getGroup()); }
		(rule__IntensityOperation__Group__0)
		{ after(grammarAccess.getIntensityOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRangeOperation
entryRuleRangeOperation
:
{ before(grammarAccess.getRangeOperationRule()); }
	 ruleRangeOperation
{ after(grammarAccess.getRangeOperationRule()); } 
	 EOF 
;

// Rule RangeOperation
ruleRangeOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRangeOperationAccess().getGroup()); }
		(rule__RangeOperation__Group__0)
		{ after(grammarAccess.getRangeOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleXGPSOperation
entryRuleXGPSOperation
:
{ before(grammarAccess.getXGPSOperationRule()); }
	 ruleXGPSOperation
{ after(grammarAccess.getXGPSOperationRule()); } 
	 EOF 
;

// Rule XGPSOperation
ruleXGPSOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getXGPSOperationAccess().getGroup()); }
		(rule__XGPSOperation__Group__0)
		{ after(grammarAccess.getXGPSOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleYGPSOperation
entryRuleYGPSOperation
:
{ before(grammarAccess.getYGPSOperationRule()); }
	 ruleYGPSOperation
{ after(grammarAccess.getYGPSOperationRule()); } 
	 EOF 
;

// Rule YGPSOperation
ruleYGPSOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getYGPSOperationAccess().getGroup()); }
		(rule__YGPSOperation__Group__0)
		{ after(grammarAccess.getYGPSOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAngleOperation
entryRuleAngleOperation
:
{ before(grammarAccess.getAngleOperationRule()); }
	 ruleAngleOperation
{ after(grammarAccess.getAngleOperationRule()); } 
	 EOF 
;

// Rule AngleOperation
ruleAngleOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAngleOperationAccess().getGroup()); }
		(rule__AngleOperation__Group__0)
		{ after(grammarAccess.getAngleOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDistanceOperation
entryRuleDistanceOperation
:
{ before(grammarAccess.getDistanceOperationRule()); }
	 ruleDistanceOperation
{ after(grammarAccess.getDistanceOperationRule()); } 
	 EOF 
;

// Rule DistanceOperation
ruleDistanceOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDistanceOperationAccess().getGroup()); }
		(rule__DistanceOperation__Group__0)
		{ after(grammarAccess.getDistanceOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConditionEtat
entryRuleConditionEtat
:
{ before(grammarAccess.getConditionEtatRule()); }
	 ruleConditionEtat
{ after(grammarAccess.getConditionEtatRule()); } 
	 EOF 
;

// Rule ConditionEtat
ruleConditionEtat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionEtatAccess().getGroup()); }
		(rule__ConditionEtat__Group__0)
		{ after(grammarAccess.getConditionEtatAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhileLoop
entryRuleWhileLoop
:
{ before(grammarAccess.getWhileLoopRule()); }
	 ruleWhileLoop
{ after(grammarAccess.getWhileLoopRule()); } 
	 EOF 
;

// Rule WhileLoop
ruleWhileLoop 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileLoopAccess().getGroup()); }
		(rule__WhileLoop__Group__0)
		{ after(grammarAccess.getWhileLoopAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodePrint
entryRuleMethodePrint
:
{ before(grammarAccess.getMethodePrintRule()); }
	 ruleMethodePrint
{ after(grammarAccess.getMethodePrintRule()); } 
	 EOF 
;

// Rule MethodePrint
ruleMethodePrint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodePrintAccess().getGroup()); }
		(rule__MethodePrint__Group__0)
		{ after(grammarAccess.getMethodePrintAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableRef
entryRuleVariableRef
:
{ before(grammarAccess.getVariableRefRule()); }
	 ruleVariableRef
{ after(grammarAccess.getVariableRefRule()); } 
	 EOF 
;

// Rule VariableRef
ruleVariableRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableRefAccess().getVariableAssignment()); }
		(rule__VariableRef__VariableAssignment)
		{ after(grammarAccess.getVariableRefAccess().getVariableAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubstraction
entryRuleSubstraction
:
{ before(grammarAccess.getSubstractionRule()); }
	 ruleSubstraction
{ after(grammarAccess.getSubstractionRule()); } 
	 EOF 
;

// Rule Substraction
ruleSubstraction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubstractionAccess().getGroup()); }
		(rule__Substraction__Group__0)
		{ after(grammarAccess.getSubstractionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAddition
entryRuleAddition
:
{ before(grammarAccess.getAdditionRule()); }
	 ruleAddition
{ after(grammarAccess.getAdditionRule()); } 
	 EOF 
;

// Rule Addition
ruleAddition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAdditionAccess().getGroup()); }
		(rule__Addition__Group__0)
		{ after(grammarAccess.getAdditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMultiplication
entryRuleMultiplication
:
{ before(grammarAccess.getMultiplicationRule()); }
	 ruleMultiplication
{ after(grammarAccess.getMultiplicationRule()); } 
	 EOF 
;

// Rule Multiplication
ruleMultiplication 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMultiplicationAccess().getGroup()); }
		(rule__Multiplication__Group__0)
		{ after(grammarAccess.getMultiplicationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDivision
entryRuleDivision
:
{ before(grammarAccess.getDivisionRule()); }
	 ruleDivision
{ after(grammarAccess.getDivisionRule()); } 
	 EOF 
;

// Rule Division
ruleDivision 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDivisionAccess().getGroup()); }
		(rule__Division__Group__0)
		{ after(grammarAccess.getDivisionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGT
entryRuleGT
:
{ before(grammarAccess.getGTRule()); }
	 ruleGT
{ after(grammarAccess.getGTRule()); } 
	 EOF 
;

// Rule GT
ruleGT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGTAccess().getGroup()); }
		(rule__GT__Group__0)
		{ after(grammarAccess.getGTAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLT
entryRuleLT
:
{ before(grammarAccess.getLTRule()); }
	 ruleLT
{ after(grammarAccess.getLTRule()); } 
	 EOF 
;

// Rule LT
ruleLT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLTAccess().getGroup()); }
		(rule__LT__Group__0)
		{ after(grammarAccess.getLTAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEqual
entryRuleEqual
:
{ before(grammarAccess.getEqualRule()); }
	 ruleEqual
{ after(grammarAccess.getEqualRule()); } 
	 EOF 
;

// Rule Equal
ruleEqual 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEqualAccess().getGroup()); }
		(rule__Equal__Group__0)
		{ after(grammarAccess.getEqualAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDifferent
entryRuleDifferent
:
{ before(grammarAccess.getDifferentRule()); }
	 ruleDifferent
{ after(grammarAccess.getDifferentRule()); } 
	 EOF 
;

// Rule Different
ruleDifferent 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDifferentAccess().getGroup()); }
		(rule__Different__Group__0)
		{ after(grammarAccess.getDifferentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLTorEqual
entryRuleLTorEqual
:
{ before(grammarAccess.getLTorEqualRule()); }
	 ruleLTorEqual
{ after(grammarAccess.getLTorEqualRule()); } 
	 EOF 
;

// Rule LTorEqual
ruleLTorEqual 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLTorEqualAccess().getGroup()); }
		(rule__LTorEqual__Group__0)
		{ after(grammarAccess.getLTorEqualAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGTorEqual
entryRuleGTorEqual
:
{ before(grammarAccess.getGTorEqualRule()); }
	 ruleGTorEqual
{ after(grammarAccess.getGTorEqualRule()); } 
	 EOF 
;

// Rule GTorEqual
ruleGTorEqual 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGTorEqualAccess().getGroup()); }
		(rule__GTorEqual__Group__0)
		{ after(grammarAccess.getGTorEqualAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignement
entryRuleAssignement
:
{ before(grammarAccess.getAssignementRule()); }
	 ruleAssignement
{ after(grammarAccess.getAssignementRule()); } 
	 EOF 
;

// Rule Assignement
ruleAssignement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignementAccess().getGroup()); }
		(rule__Assignement__Group__0)
		{ after(grammarAccess.getAssignementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlusEqual
entryRulePlusEqual
:
{ before(grammarAccess.getPlusEqualRule()); }
	 rulePlusEqual
{ after(grammarAccess.getPlusEqualRule()); } 
	 EOF 
;

// Rule PlusEqual
rulePlusEqual 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlusEqualAccess().getGroup()); }
		(rule__PlusEqual__Group__0)
		{ after(grammarAccess.getPlusEqualAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMinusEqual
entryRuleMinusEqual
:
{ before(grammarAccess.getMinusEqualRule()); }
	 ruleMinusEqual
{ after(grammarAccess.getMinusEqualRule()); } 
	 EOF 
;

// Rule MinusEqual
ruleMinusEqual 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMinusEqualAccess().getGroup()); }
		(rule__MinusEqual__Group__0)
		{ after(grammarAccess.getMinusEqualAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEBoolean
entryRuleEBoolean
:
{ before(grammarAccess.getEBooleanRule()); }
	 ruleEBoolean
{ after(grammarAccess.getEBooleanRule()); } 
	 EOF 
;

// Rule EBoolean
ruleEBoolean 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEBooleanAccess().getAlternatives()); }
		(rule__EBoolean__Alternatives)
		{ after(grammarAccess.getEBooleanAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnInteger
entryRuleUnInteger
:
{ before(grammarAccess.getUnIntegerRule()); }
	 ruleUnInteger
{ after(grammarAccess.getUnIntegerRule()); } 
	 EOF 
;

// Rule UnInteger
ruleUnInteger 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnIntegerAccess().getGroup()); }
		(rule__UnInteger__Group__0)
		{ after(grammarAccess.getUnIntegerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnDouble
entryRuleUnDouble
:
{ before(grammarAccess.getUnDoubleRule()); }
	 ruleUnDouble
{ after(grammarAccess.getUnDoubleRule()); } 
	 EOF 
;

// Rule UnDouble
ruleUnDouble 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnDoubleAccess().getGroup()); }
		(rule__UnDouble__Group__0)
		{ after(grammarAccess.getUnDoubleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnBoolean
entryRuleUnBoolean
:
{ before(grammarAccess.getUnBooleanRule()); }
	 ruleUnBoolean
{ after(grammarAccess.getUnBooleanRule()); } 
	 EOF 
;

// Rule UnBoolean
ruleUnBoolean 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnBooleanAccess().getGroup()); }
		(rule__UnBoolean__Group__0)
		{ after(grammarAccess.getUnBooleanAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnString
entryRuleUnString
:
{ before(grammarAccess.getUnStringRule()); }
	 ruleUnString
{ after(grammarAccess.getUnStringRule()); } 
	 EOF 
;

// Rule UnString
ruleUnString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnStringAccess().getGroup()); }
		(rule__UnString__Group__0)
		{ after(grammarAccess.getUnStringAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTheDouble
entryRuleTheDouble
:
{ before(grammarAccess.getTheDoubleRule()); }
	 ruleTheDouble
{ after(grammarAccess.getTheDoubleRule()); } 
	 EOF 
;

// Rule TheDouble
ruleTheDouble 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTheDoubleAccess().getGroup()); }
		(rule__TheDouble__Group__0)
		{ after(grammarAccess.getTheDoubleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTheInt
entryRuleTheInt
:
{ before(grammarAccess.getTheIntRule()); }
	 ruleTheInt
{ after(grammarAccess.getTheIntRule()); } 
	 EOF 
;

// Rule TheInt
ruleTheInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTheIntAccess().getGroup()); }
		(rule__TheInt__Group__0)
		{ after(grammarAccess.getTheIntAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTheBoolean
entryRuleTheBoolean
:
{ before(grammarAccess.getTheBooleanRule()); }
	 ruleTheBoolean
{ after(grammarAccess.getTheBooleanRule()); } 
	 EOF 
;

// Rule TheBoolean
ruleTheBoolean 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTheBooleanAccess().getGroup()); }
		(rule__TheBoolean__Group__0)
		{ after(grammarAccess.getTheBooleanAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTheString
entryRuleTheString
:
{ before(grammarAccess.getTheStringRule()); }
	 ruleTheString
{ after(grammarAccess.getTheStringRule()); } 
	 EOF 
;

// Rule TheString
ruleTheString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTheStringAccess().getGroup()); }
		(rule__TheString__Group__0)
		{ after(grammarAccess.getTheStringAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFQN
entryRuleFQN
:
{ before(grammarAccess.getFQNRule()); }
	 ruleFQN
{ after(grammarAccess.getFQNRule()); } 
	 EOF 
;

// Rule FQN
ruleFQN 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFQNAccess().getGroup()); }
		(rule__FQN__Group__0)
		{ after(grammarAccess.getFQNAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEInt
entryRuleEInt
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEIntAccess().getGroup()); }
		(rule__EInt__Group__0)
		{ after(grammarAccess.getEIntAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getWhileLoopParserRuleCall_0()); }
		ruleWhileLoop
		{ after(grammarAccess.getStatementAccess().getWhileLoopParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getVariableParserRuleCall_1()); }
		ruleVariable
		{ after(grammarAccess.getStatementAccess().getVariableParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getExpressionParserRuleCall_2()); }
		ruleExpression
		{ after(grammarAccess.getStatementAccess().getExpressionParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getConditionEtatParserRuleCall_3()); }
		ruleConditionEtat
		{ after(grammarAccess.getStatementAccess().getConditionEtatParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getMethodePrintParserRuleCall_4()); }
		ruleMethodePrint
		{ after(grammarAccess.getStatementAccess().getMethodePrintParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getCarParserRuleCall_5()); }
		ruleCar
		{ after(grammarAccess.getStatementAccess().getCarParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getSensorParserRuleCall_6()); }
		ruleSensor
		{ after(grammarAccess.getStatementAccess().getSensorParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getEngineParserRuleCall_7()); }
		ruleEngine
		{ after(grammarAccess.getStatementAccess().getEngineParserRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getVariableRefParserRuleCall_0()); }
		ruleVariableRef
		{ after(grammarAccess.getExpressionAccess().getVariableRefParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getBinaryOperationParserRuleCall_1()); }
		ruleBinaryOperation
		{ after(grammarAccess.getExpressionAccess().getBinaryOperationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getTheStringParserRuleCall_2()); }
		ruleTheString
		{ after(grammarAccess.getExpressionAccess().getTheStringParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getTheDoubleParserRuleCall_3()); }
		ruleTheDouble
		{ after(grammarAccess.getExpressionAccess().getTheDoubleParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getTheIntParserRuleCall_4()); }
		ruleTheInt
		{ after(grammarAccess.getExpressionAccess().getTheIntParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getTheBooleanParserRuleCall_5()); }
		ruleTheBoolean
		{ after(grammarAccess.getExpressionAccess().getTheBooleanParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getEngineOperationParserRuleCall_6()); }
		ruleEngineOperation
		{ after(grammarAccess.getExpressionAccess().getEngineOperationParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getSensorOperationParserRuleCall_7()); }
		ruleSensorOperation
		{ after(grammarAccess.getExpressionAccess().getSensorOperationParserRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryOperation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryOperationAccess().getSubstractionParserRuleCall_0()); }
		ruleSubstraction
		{ after(grammarAccess.getBinaryOperationAccess().getSubstractionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperationAccess().getComparaisonParserRuleCall_1()); }
		ruleComparaison
		{ after(grammarAccess.getBinaryOperationAccess().getComparaisonParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperationAccess().getAssignementParserRuleCall_2()); }
		ruleAssignement
		{ after(grammarAccess.getBinaryOperationAccess().getAssignementParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperationAccess().getDivisionParserRuleCall_3()); }
		ruleDivision
		{ after(grammarAccess.getBinaryOperationAccess().getDivisionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperationAccess().getMultiplicationParserRuleCall_4()); }
		ruleMultiplication
		{ after(grammarAccess.getBinaryOperationAccess().getMultiplicationParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperationAccess().getAdditionParserRuleCall_5()); }
		ruleAddition
		{ after(grammarAccess.getBinaryOperationAccess().getAdditionParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperationAccess().getMinusEqualParserRuleCall_6()); }
		ruleMinusEqual
		{ after(grammarAccess.getBinaryOperationAccess().getMinusEqualParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryOperationAccess().getPlusEqualParserRuleCall_7()); }
		rulePlusEqual
		{ after(grammarAccess.getBinaryOperationAccess().getPlusEqualParserRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getUnIntegerParserRuleCall_0()); }
		ruleUnInteger
		{ after(grammarAccess.getVariableAccess().getUnIntegerParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableAccess().getUnStringParserRuleCall_1()); }
		ruleUnString
		{ after(grammarAccess.getVariableAccess().getUnStringParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getVariableAccess().getUnBooleanParserRuleCall_2()); }
		ruleUnBoolean
		{ after(grammarAccess.getVariableAccess().getUnBooleanParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getVariableAccess().getUnDoubleParserRuleCall_3()); }
		ruleUnDouble
		{ after(grammarAccess.getVariableAccess().getUnDoubleParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Comparaison__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparaisonAccess().getGTParserRuleCall_0()); }
		ruleGT
		{ after(grammarAccess.getComparaisonAccess().getGTParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparaisonAccess().getEqualParserRuleCall_1()); }
		ruleEqual
		{ after(grammarAccess.getComparaisonAccess().getEqualParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparaisonAccess().getLTParserRuleCall_2()); }
		ruleLT
		{ after(grammarAccess.getComparaisonAccess().getLTParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparaisonAccess().getDifferentParserRuleCall_3()); }
		ruleDifferent
		{ after(grammarAccess.getComparaisonAccess().getDifferentParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getComparaisonAccess().getGTorEqualParserRuleCall_4()); }
		ruleGTorEqual
		{ after(grammarAccess.getComparaisonAccess().getGTorEqualParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getComparaisonAccess().getLTorEqualParserRuleCall_5()); }
		ruleLTorEqual
		{ after(grammarAccess.getComparaisonAccess().getLTorEqualParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getLaserSensorParserRuleCall_0()); }
		ruleLaserSensor
		{ after(grammarAccess.getSensorAccess().getLaserSensorParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSensorAccess().getColorSensorParserRuleCall_1()); }
		ruleColorSensor
		{ after(grammarAccess.getSensorAccess().getColorSensorParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getSensorAccess().getUltraSonicSensorParserRuleCall_2()); }
		ruleUltraSonicSensor
		{ after(grammarAccess.getSensorAccess().getUltraSonicSensorParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getSensorAccess().getGyroSensorParserRuleCall_3()); }
		ruleGyroSensor
		{ after(grammarAccess.getSensorAccess().getGyroSensorParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getSensorAccess().getGPSSensorParserRuleCall_4()); }
		ruleGPSSensor
		{ after(grammarAccess.getSensorAccess().getGPSSensorParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorOperation__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorOperationAccess().getRangeOperationParserRuleCall_0()); }
		ruleRangeOperation
		{ after(grammarAccess.getSensorOperationAccess().getRangeOperationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSensorOperationAccess().getColorOperationParserRuleCall_1()); }
		ruleColorOperation
		{ after(grammarAccess.getSensorOperationAccess().getColorOperationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getSensorOperationAccess().getIntensityOperationParserRuleCall_2()); }
		ruleIntensityOperation
		{ after(grammarAccess.getSensorOperationAccess().getIntensityOperationParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getSensorOperationAccess().getXGPSOperationParserRuleCall_3()); }
		ruleXGPSOperation
		{ after(grammarAccess.getSensorOperationAccess().getXGPSOperationParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getSensorOperationAccess().getYGPSOperationParserRuleCall_4()); }
		ruleYGPSOperation
		{ after(grammarAccess.getSensorOperationAccess().getYGPSOperationParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getSensorOperationAccess().getAngleOperationParserRuleCall_5()); }
		ruleAngleOperation
		{ after(grammarAccess.getSensorOperationAccess().getAngleOperationParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getSensorOperationAccess().getDistanceOperationParserRuleCall_6()); }
		ruleDistanceOperation
		{ after(grammarAccess.getSensorOperationAccess().getDistanceOperationParserRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBoolean__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); }
		'true'
		{ after(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); }
		'false'
		{ after(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getProgramAction_0()); }
	()
	{ after(grammarAccess.getProgramAccess().getProgramAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getProgramKeyword_1()); }
	'Program'
	{ after(grammarAccess.getProgramAccess().getProgramKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__2__Impl
	rule__Program__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getNameAssignment_2()); }
	(rule__Program__NameAssignment_2)
	{ after(grammarAccess.getProgramAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__3__Impl
	rule__Program__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__4__Impl
	rule__Program__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getStatementAssignment_4()); }
	(rule__Program__StatementAssignment_4)*
	{ after(grammarAccess.getProgramAccess().getStatementAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WheelEngine__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WheelEngine__Group__0__Impl
	rule__WheelEngine__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WheelEngine__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWheelEngineAccess().getWheelEngineKeyword_0()); }
	'WheelEngine'
	{ after(grammarAccess.getWheelEngineAccess().getWheelEngineKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WheelEngine__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WheelEngine__Group__1__Impl
	rule__WheelEngine__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WheelEngine__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWheelEngineAccess().getNameAssignment_1()); }
	(rule__WheelEngine__NameAssignment_1)
	{ after(grammarAccess.getWheelEngineAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WheelEngine__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WheelEngine__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WheelEngine__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWheelEngineAccess().getPositionAssignment_2()); }
	(rule__WheelEngine__PositionAssignment_2)
	{ after(grammarAccess.getWheelEngineAccess().getPositionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColorSensor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorSensor__Group__0__Impl
	rule__ColorSensor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorSensor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorSensorAccess().getColorSensorKeyword_0()); }
	'ColorSensor'
	{ after(grammarAccess.getColorSensorAccess().getColorSensorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorSensor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorSensor__Group__1__Impl
	rule__ColorSensor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorSensor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorSensorAccess().getNameAssignment_1()); }
	(rule__ColorSensor__NameAssignment_1)
	{ after(grammarAccess.getColorSensorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorSensor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorSensor__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorSensor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorSensorAccess().getPositionAssignment_2()); }
	(rule__ColorSensor__PositionAssignment_2)
	{ after(grammarAccess.getColorSensorAccess().getPositionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LaserSensor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LaserSensor__Group__0__Impl
	rule__LaserSensor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LaserSensor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLaserSensorAccess().getLaserSensorKeyword_0()); }
	'LaserSensor'
	{ after(grammarAccess.getLaserSensorAccess().getLaserSensorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LaserSensor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LaserSensor__Group__1__Impl
	rule__LaserSensor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LaserSensor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLaserSensorAccess().getNameAssignment_1()); }
	(rule__LaserSensor__NameAssignment_1)
	{ after(grammarAccess.getLaserSensorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LaserSensor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LaserSensor__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LaserSensor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLaserSensorAccess().getPositionAssignment_2()); }
	(rule__LaserSensor__PositionAssignment_2)
	{ after(grammarAccess.getLaserSensorAccess().getPositionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GPSSensor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GPSSensor__Group__0__Impl
	rule__GPSSensor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GPSSensor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGPSSensorAccess().getGPSSensorKeyword_0()); }
	'GPSSensor'
	{ after(grammarAccess.getGPSSensorAccess().getGPSSensorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GPSSensor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GPSSensor__Group__1__Impl
	rule__GPSSensor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GPSSensor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGPSSensorAccess().getNameAssignment_1()); }
	(rule__GPSSensor__NameAssignment_1)
	{ after(grammarAccess.getGPSSensorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GPSSensor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GPSSensor__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GPSSensor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGPSSensorAccess().getPositionAssignment_2()); }
	(rule__GPSSensor__PositionAssignment_2)
	{ after(grammarAccess.getGPSSensorAccess().getPositionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GyroSensor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GyroSensor__Group__0__Impl
	rule__GyroSensor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GyroSensor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGyroSensorAccess().getGyroSensorKeyword_0()); }
	'GyroSensor'
	{ after(grammarAccess.getGyroSensorAccess().getGyroSensorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GyroSensor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GyroSensor__Group__1__Impl
	rule__GyroSensor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GyroSensor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGyroSensorAccess().getNameAssignment_1()); }
	(rule__GyroSensor__NameAssignment_1)
	{ after(grammarAccess.getGyroSensorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GyroSensor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GyroSensor__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GyroSensor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGyroSensorAccess().getPositionAssignment_2()); }
	(rule__GyroSensor__PositionAssignment_2)
	{ after(grammarAccess.getGyroSensorAccess().getPositionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UltraSonicSensor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UltraSonicSensor__Group__0__Impl
	rule__UltraSonicSensor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UltraSonicSensor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUltraSonicSensorAccess().getUltraSonicSensorKeyword_0()); }
	'UltraSonicSensor'
	{ after(grammarAccess.getUltraSonicSensorAccess().getUltraSonicSensorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UltraSonicSensor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UltraSonicSensor__Group__1__Impl
	rule__UltraSonicSensor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UltraSonicSensor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUltraSonicSensorAccess().getNameAssignment_1()); }
	(rule__UltraSonicSensor__NameAssignment_1)
	{ after(grammarAccess.getUltraSonicSensorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UltraSonicSensor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UltraSonicSensor__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UltraSonicSensor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUltraSonicSensorAccess().getPositionAssignment_2()); }
	(rule__UltraSonicSensor__PositionAssignment_2)
	{ after(grammarAccess.getUltraSonicSensorAccess().getPositionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Car__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Car__Group__0__Impl
	rule__Car__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Car__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCarAccess().getCarKeyword_0()); }
	'Car'
	{ after(grammarAccess.getCarAccess().getCarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Car__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Car__Group__1__Impl
	rule__Car__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Car__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCarAccess().getNameAssignment_1()); }
	(rule__Car__NameAssignment_1)
	{ after(grammarAccess.getCarAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Car__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Car__Group__2__Impl
	rule__Car__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Car__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCarAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getCarAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Car__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Car__Group__3__Impl
	rule__Car__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Car__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCarAccess().getSensorAssignment_3()); }
	(rule__Car__SensorAssignment_3)*
	{ after(grammarAccess.getCarAccess().getSensorAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Car__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Car__Group__4__Impl
	rule__Car__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Car__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCarAccess().getEngineAssignment_4()); }
	(rule__Car__EngineAssignment_4)*
	{ after(grammarAccess.getCarAccess().getEngineAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Car__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Car__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Car__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCarAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getCarAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VitesseOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VitesseOperation__Group__0__Impl
	rule__VitesseOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VitesseOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVitesseOperationAccess().getWheelengineAssignment_0()); }
	(rule__VitesseOperation__WheelengineAssignment_0)
	{ after(grammarAccess.getVitesseOperationAccess().getWheelengineAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VitesseOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VitesseOperation__Group__1__Impl
	rule__VitesseOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VitesseOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVitesseOperationAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getVitesseOperationAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VitesseOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VitesseOperation__Group__2__Impl
	rule__VitesseOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VitesseOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVitesseOperationAccess().getVitesseKeyword_2()); }
	'vitesse'
	{ after(grammarAccess.getVitesseOperationAccess().getVitesseKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VitesseOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VitesseOperation__Group__3__Impl
	rule__VitesseOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VitesseOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVitesseOperationAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getVitesseOperationAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VitesseOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VitesseOperation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VitesseOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVitesseOperationAccess().getRightAssignment_4()); }
	(rule__VitesseOperation__RightAssignment_4)
	{ after(grammarAccess.getVitesseOperationAccess().getRightAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColorOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorOperation__Group__0__Impl
	rule__ColorOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorOperationAccess().getGetKeyword_0()); }
	'get'
	{ after(grammarAccess.getColorOperationAccess().getGetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorOperation__Group__1__Impl
	rule__ColorOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorOperationAccess().getColorKeyword_1()); }
	'color'
	{ after(grammarAccess.getColorOperationAccess().getColorKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorOperation__Group__2__Impl
	rule__ColorOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorOperationAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getColorOperationAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorOperation__Group__3__Impl
	rule__ColorOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorOperationAccess().getColorsensorAssignment_3()); }
	(rule__ColorOperation__ColorsensorAssignment_3)
	{ after(grammarAccess.getColorOperationAccess().getColorsensorAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColorOperation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColorOperationAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getColorOperationAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntensityOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntensityOperation__Group__0__Impl
	rule__IntensityOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntensityOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntensityOperationAccess().getGetKeyword_0()); }
	'get'
	{ after(grammarAccess.getIntensityOperationAccess().getGetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntensityOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntensityOperation__Group__1__Impl
	rule__IntensityOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntensityOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntensityOperationAccess().getIntensityKeyword_1()); }
	'intensity'
	{ after(grammarAccess.getIntensityOperationAccess().getIntensityKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntensityOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntensityOperation__Group__2__Impl
	rule__IntensityOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IntensityOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntensityOperationAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getIntensityOperationAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntensityOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntensityOperation__Group__3__Impl
	rule__IntensityOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IntensityOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntensityOperationAccess().getColorsensorAssignment_3()); }
	(rule__IntensityOperation__ColorsensorAssignment_3)
	{ after(grammarAccess.getIntensityOperationAccess().getColorsensorAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntensityOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntensityOperation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntensityOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntensityOperationAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getIntensityOperationAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RangeOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeOperation__Group__0__Impl
	rule__RangeOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeOperationAccess().getGetKeyword_0()); }
	'get'
	{ after(grammarAccess.getRangeOperationAccess().getGetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeOperation__Group__1__Impl
	rule__RangeOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeOperationAccess().getRangeKeyword_1()); }
	'range'
	{ after(grammarAccess.getRangeOperationAccess().getRangeKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeOperation__Group__2__Impl
	rule__RangeOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeOperationAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getRangeOperationAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeOperation__Group__3__Impl
	rule__RangeOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeOperationAccess().getLasersensorAssignment_3()); }
	(rule__RangeOperation__LasersensorAssignment_3)
	{ after(grammarAccess.getRangeOperationAccess().getLasersensorAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RangeOperation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRangeOperationAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getRangeOperationAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__XGPSOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XGPSOperation__Group__0__Impl
	rule__XGPSOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__XGPSOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXGPSOperationAccess().getGetKeyword_0()); }
	'get'
	{ after(grammarAccess.getXGPSOperationAccess().getGetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XGPSOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XGPSOperation__Group__1__Impl
	rule__XGPSOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__XGPSOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXGPSOperationAccess().getXKeyword_1()); }
	'x'
	{ after(grammarAccess.getXGPSOperationAccess().getXKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XGPSOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XGPSOperation__Group__2__Impl
	rule__XGPSOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__XGPSOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXGPSOperationAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getXGPSOperationAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XGPSOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XGPSOperation__Group__3__Impl
	rule__XGPSOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__XGPSOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXGPSOperationAccess().getGpssensorAssignment_3()); }
	(rule__XGPSOperation__GpssensorAssignment_3)
	{ after(grammarAccess.getXGPSOperationAccess().getGpssensorAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__XGPSOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__XGPSOperation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__XGPSOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getXGPSOperationAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getXGPSOperationAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__YGPSOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__YGPSOperation__Group__0__Impl
	rule__YGPSOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__YGPSOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getYGPSOperationAccess().getGetKeyword_0()); }
	'get'
	{ after(grammarAccess.getYGPSOperationAccess().getGetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__YGPSOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__YGPSOperation__Group__1__Impl
	rule__YGPSOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__YGPSOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getYGPSOperationAccess().getYKeyword_1()); }
	'y'
	{ after(grammarAccess.getYGPSOperationAccess().getYKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__YGPSOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__YGPSOperation__Group__2__Impl
	rule__YGPSOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__YGPSOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getYGPSOperationAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getYGPSOperationAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__YGPSOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__YGPSOperation__Group__3__Impl
	rule__YGPSOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__YGPSOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getYGPSOperationAccess().getGpssensorAssignment_3()); }
	(rule__YGPSOperation__GpssensorAssignment_3)
	{ after(grammarAccess.getYGPSOperationAccess().getGpssensorAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__YGPSOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__YGPSOperation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__YGPSOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getYGPSOperationAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getYGPSOperationAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AngleOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AngleOperation__Group__0__Impl
	rule__AngleOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AngleOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAngleOperationAccess().getGetKeyword_0()); }
	'get'
	{ after(grammarAccess.getAngleOperationAccess().getGetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AngleOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AngleOperation__Group__1__Impl
	rule__AngleOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AngleOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAngleOperationAccess().getAngleKeyword_1()); }
	'angle'
	{ after(grammarAccess.getAngleOperationAccess().getAngleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AngleOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AngleOperation__Group__2__Impl
	rule__AngleOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AngleOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAngleOperationAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getAngleOperationAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AngleOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AngleOperation__Group__3__Impl
	rule__AngleOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AngleOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAngleOperationAccess().getGyrosensorAssignment_3()); }
	(rule__AngleOperation__GyrosensorAssignment_3)
	{ after(grammarAccess.getAngleOperationAccess().getGyrosensorAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AngleOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AngleOperation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AngleOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAngleOperationAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getAngleOperationAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DistanceOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DistanceOperation__Group__0__Impl
	rule__DistanceOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DistanceOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDistanceOperationAccess().getGetKeyword_0()); }
	'get'
	{ after(grammarAccess.getDistanceOperationAccess().getGetKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DistanceOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DistanceOperation__Group__1__Impl
	rule__DistanceOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DistanceOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDistanceOperationAccess().getDistanceKeyword_1()); }
	'distance'
	{ after(grammarAccess.getDistanceOperationAccess().getDistanceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DistanceOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DistanceOperation__Group__2__Impl
	rule__DistanceOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DistanceOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDistanceOperationAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getDistanceOperationAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DistanceOperation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DistanceOperation__Group__3__Impl
	rule__DistanceOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DistanceOperation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDistanceOperationAccess().getUltrasonicsensorAssignment_3()); }
	(rule__DistanceOperation__UltrasonicsensorAssignment_3)
	{ after(grammarAccess.getDistanceOperationAccess().getUltrasonicsensorAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DistanceOperation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DistanceOperation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DistanceOperation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDistanceOperationAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getDistanceOperationAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionEtat__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionEtat__Group__0__Impl
	rule__ConditionEtat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionEtatAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getConditionEtatAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionEtat__Group__1__Impl
	rule__ConditionEtat__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionEtatAccess().getConditionAssignment_1()); }
	(rule__ConditionEtat__ConditionAssignment_1)
	{ after(grammarAccess.getConditionEtatAccess().getConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionEtat__Group__2__Impl
	rule__ConditionEtat__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionEtatAccess().getGroup_2()); }
	(rule__ConditionEtat__Group_2__0)*
	{ after(grammarAccess.getConditionEtatAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionEtat__Group__3__Impl
	rule__ConditionEtat__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionEtatAccess().getGroup_3()); }
	(rule__ConditionEtat__Group_3__0)*
	{ after(grammarAccess.getConditionEtatAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionEtat__Group__4__Impl
	rule__ConditionEtat__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionEtatAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getConditionEtatAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionEtat__Group__5__Impl
	rule__ConditionEtat__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionEtatAccess().getThenAssignment_5()); }
	(rule__ConditionEtat__ThenAssignment_5)*
	{ after(grammarAccess.getConditionEtatAccess().getThenAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionEtat__Group__6__Impl
	rule__ConditionEtat__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionEtatAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getConditionEtatAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionEtat__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionEtatAccess().getGroup_7()); }
	(rule__ConditionEtat__Group_7__0)?
	{ after(grammarAccess.getConditionEtatAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionEtat__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionEtat__Group_2__0__Impl
	rule__ConditionEtat__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionEtatAccess().getAndKeyword_2_0()); }
	'and'
	{ after(grammarAccess.getConditionEtatAccess().getAndKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionEtat__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionEtatAccess().getConditionAssignment_2_1()); }
	(rule__ConditionEtat__ConditionAssignment_2_1)
	{ after(grammarAccess.getConditionEtatAccess().getConditionAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionEtat__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionEtat__Group_3__0__Impl
	rule__ConditionEtat__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionEtatAccess().getOrKeyword_3_0()); }
	'or'
	{ after(grammarAccess.getConditionEtatAccess().getOrKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionEtat__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionEtatAccess().getConditionAssignment_3_1()); }
	(rule__ConditionEtat__ConditionAssignment_3_1)
	{ after(grammarAccess.getConditionEtatAccess().getConditionAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ConditionEtat__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionEtat__Group_7__0__Impl
	rule__ConditionEtat__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionEtatAccess().getElseKeyword_7_0()); }
	'else{'
	{ after(grammarAccess.getConditionEtatAccess().getElseKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionEtat__Group_7__1__Impl
	rule__ConditionEtat__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionEtatAccess().getElseAssignment_7_1()); }
	(rule__ConditionEtat__ElseAssignment_7_1)
	{ after(grammarAccess.getConditionEtatAccess().getElseAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ConditionEtat__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionEtatAccess().getRightCurlyBracketKeyword_7_2()); }
	'}'
	{ after(grammarAccess.getConditionEtatAccess().getRightCurlyBracketKeyword_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileLoop__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__0__Impl
	rule__WhileLoop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getWhileKeyword_0()); }
	'while'
	{ after(grammarAccess.getWhileLoopAccess().getWhileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__1__Impl
	rule__WhileLoop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getLoopConditionAssignment_1()); }
	(rule__WhileLoop__LoopConditionAssignment_1)
	{ after(grammarAccess.getWhileLoopAccess().getLoopConditionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__2__Impl
	rule__WhileLoop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getWhileLoopAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__3__Impl
	rule__WhileLoop__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getStatementAssignment_3()); }
	(rule__WhileLoop__StatementAssignment_3)*
	{ after(grammarAccess.getWhileLoopAccess().getStatementAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileLoop__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileLoopAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getWhileLoopAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodePrint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodePrint__Group__0__Impl
	rule__MethodePrint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodePrint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodePrintAccess().getMethodePrintAction_0()); }
	()
	{ after(grammarAccess.getMethodePrintAccess().getMethodePrintAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodePrint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodePrint__Group__1__Impl
	rule__MethodePrint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodePrint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodePrintAccess().getPrintKeyword_1()); }
	'print('
	{ after(grammarAccess.getMethodePrintAccess().getPrintKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodePrint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodePrint__Group__2__Impl
	rule__MethodePrint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodePrint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getMethodePrintAccess().getGroup_2()); }
		(rule__MethodePrint__Group_2__0)
		{ after(grammarAccess.getMethodePrintAccess().getGroup_2()); }
	)
	(
		{ before(grammarAccess.getMethodePrintAccess().getGroup_2()); }
		(rule__MethodePrint__Group_2__0)*
		{ after(grammarAccess.getMethodePrintAccess().getGroup_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodePrint__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodePrint__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodePrint__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodePrintAccess().getRightParenthesisSemicolonKeyword_3()); }
	');'
	{ after(grammarAccess.getMethodePrintAccess().getRightParenthesisSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodePrint__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodePrint__Group_2__0__Impl
	rule__MethodePrint__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodePrint__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodePrintAccess().getExpressionAssignment_2_0()); }
	(rule__MethodePrint__ExpressionAssignment_2_0)
	{ after(grammarAccess.getMethodePrintAccess().getExpressionAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodePrint__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodePrint__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodePrint__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodePrintAccess().getCommaKeyword_2_1()); }
	','
	{ after(grammarAccess.getMethodePrintAccess().getCommaKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Substraction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Substraction__Group__0__Impl
	rule__Substraction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstractionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getSubstractionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Substraction__Group__1__Impl
	rule__Substraction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstractionAccess().getLeftAssignment_1()); }
	(rule__Substraction__LeftAssignment_1)
	{ after(grammarAccess.getSubstractionAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Substraction__Group__2__Impl
	rule__Substraction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstractionAccess().getHyphenMinusKeyword_2()); }
	'-'
	{ after(grammarAccess.getSubstractionAccess().getHyphenMinusKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Substraction__Group__3__Impl
	rule__Substraction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstractionAccess().getRightAssignment_3()); }
	(rule__Substraction__RightAssignment_3)
	{ after(grammarAccess.getSubstractionAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Substraction__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubstractionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getSubstractionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Addition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__0__Impl
	rule__Addition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getAdditionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__1__Impl
	rule__Addition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getLeftAssignment_1()); }
	(rule__Addition__LeftAssignment_1)
	{ after(grammarAccess.getAdditionAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__2__Impl
	rule__Addition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getPlusSignKeyword_2()); }
	'+'
	{ after(grammarAccess.getAdditionAccess().getPlusSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__3__Impl
	rule__Addition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getRightAssignment_3()); }
	(rule__Addition__RightAssignment_3)
	{ after(grammarAccess.getAdditionAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Addition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAdditionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getAdditionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Multiplication__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group__0__Impl
	rule__Multiplication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getMultiplicationAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group__1__Impl
	rule__Multiplication__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getLeftAssignment_1()); }
	(rule__Multiplication__LeftAssignment_1)
	{ after(grammarAccess.getMultiplicationAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group__2__Impl
	rule__Multiplication__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getAsteriskKeyword_2()); }
	'*'
	{ after(grammarAccess.getMultiplicationAccess().getAsteriskKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group__3__Impl
	rule__Multiplication__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getRightAssignment_3()); }
	(rule__Multiplication__RightAssignment_3)
	{ after(grammarAccess.getMultiplicationAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Multiplication__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMultiplicationAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getMultiplicationAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Division__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Division__Group__0__Impl
	rule__Division__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivisionAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getDivisionAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Division__Group__1__Impl
	rule__Division__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivisionAccess().getLeftAssignment_1()); }
	(rule__Division__LeftAssignment_1)
	{ after(grammarAccess.getDivisionAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Division__Group__2__Impl
	rule__Division__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivisionAccess().getSolidusKeyword_2()); }
	'/'
	{ after(grammarAccess.getDivisionAccess().getSolidusKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Division__Group__3__Impl
	rule__Division__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivisionAccess().getRightAssignment_3()); }
	(rule__Division__RightAssignment_3)
	{ after(grammarAccess.getDivisionAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Division__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDivisionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getDivisionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GT__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GT__Group__0__Impl
	rule__GT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GT__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGTAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getGTAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GT__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GT__Group__1__Impl
	rule__GT__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GT__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGTAccess().getLeftAssignment_1()); }
	(rule__GT__LeftAssignment_1)
	{ after(grammarAccess.getGTAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GT__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GT__Group__2__Impl
	rule__GT__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GT__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGTAccess().getGreaterThanSignKeyword_2()); }
	'>'
	{ after(grammarAccess.getGTAccess().getGreaterThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GT__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GT__Group__3__Impl
	rule__GT__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GT__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGTAccess().getRightAssignment_3()); }
	(rule__GT__RightAssignment_3)
	{ after(grammarAccess.getGTAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GT__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GT__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GT__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGTAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getGTAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LT__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LT__Group__0__Impl
	rule__LT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LT__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getLTAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LT__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LT__Group__1__Impl
	rule__LT__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LT__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTAccess().getLeftAssignment_1()); }
	(rule__LT__LeftAssignment_1)
	{ after(grammarAccess.getLTAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LT__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LT__Group__2__Impl
	rule__LT__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LT__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTAccess().getLessThanSignKeyword_2()); }
	'<'
	{ after(grammarAccess.getLTAccess().getLessThanSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LT__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LT__Group__3__Impl
	rule__LT__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LT__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTAccess().getRightAssignment_3()); }
	(rule__LT__RightAssignment_3)
	{ after(grammarAccess.getLTAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LT__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LT__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LT__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getLTAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Equal__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equal__Group__0__Impl
	rule__Equal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getEqualAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equal__Group__1__Impl
	rule__Equal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualAccess().getLeftAssignment_1()); }
	(rule__Equal__LeftAssignment_1)
	{ after(grammarAccess.getEqualAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equal__Group__2__Impl
	rule__Equal__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualAccess().getEqualsSignEqualsSignKeyword_2()); }
	'=='
	{ after(grammarAccess.getEqualAccess().getEqualsSignEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equal__Group__3__Impl
	rule__Equal__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualAccess().getRightAssignment_3()); }
	(rule__Equal__RightAssignment_3)
	{ after(grammarAccess.getEqualAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Equal__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEqualAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getEqualAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Different__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Different__Group__0__Impl
	rule__Different__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Different__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDifferentAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getDifferentAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Different__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Different__Group__1__Impl
	rule__Different__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Different__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDifferentAccess().getLeftAssignment_1()); }
	(rule__Different__LeftAssignment_1)
	{ after(grammarAccess.getDifferentAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Different__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Different__Group__2__Impl
	rule__Different__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Different__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDifferentAccess().getExclamationMarkEqualsSignKeyword_2()); }
	'!='
	{ after(grammarAccess.getDifferentAccess().getExclamationMarkEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Different__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Different__Group__3__Impl
	rule__Different__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Different__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDifferentAccess().getRightAssignment_3()); }
	(rule__Different__RightAssignment_3)
	{ after(grammarAccess.getDifferentAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Different__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Different__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Different__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDifferentAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getDifferentAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LTorEqual__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTorEqual__Group__0__Impl
	rule__LTorEqual__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LTorEqual__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTorEqualAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getLTorEqualAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTorEqual__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTorEqual__Group__1__Impl
	rule__LTorEqual__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LTorEqual__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTorEqualAccess().getLeftAssignment_1()); }
	(rule__LTorEqual__LeftAssignment_1)
	{ after(grammarAccess.getLTorEqualAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTorEqual__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTorEqual__Group__2__Impl
	rule__LTorEqual__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LTorEqual__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTorEqualAccess().getLessThanSignEqualsSignKeyword_2()); }
	'<='
	{ after(grammarAccess.getLTorEqualAccess().getLessThanSignEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTorEqual__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTorEqual__Group__3__Impl
	rule__LTorEqual__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LTorEqual__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTorEqualAccess().getRightAssignment_3()); }
	(rule__LTorEqual__RightAssignment_3)
	{ after(grammarAccess.getLTorEqualAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTorEqual__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LTorEqual__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LTorEqual__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLTorEqualAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getLTorEqualAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GTorEqual__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GTorEqual__Group__0__Impl
	rule__GTorEqual__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GTorEqual__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGTorEqualAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getGTorEqualAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GTorEqual__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GTorEqual__Group__1__Impl
	rule__GTorEqual__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GTorEqual__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGTorEqualAccess().getLeftAssignment_1()); }
	(rule__GTorEqual__LeftAssignment_1)
	{ after(grammarAccess.getGTorEqualAccess().getLeftAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GTorEqual__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GTorEqual__Group__2__Impl
	rule__GTorEqual__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GTorEqual__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGTorEqualAccess().getGreaterThanSignEqualsSignKeyword_2()); }
	'>='
	{ after(grammarAccess.getGTorEqualAccess().getGreaterThanSignEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GTorEqual__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GTorEqual__Group__3__Impl
	rule__GTorEqual__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GTorEqual__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGTorEqualAccess().getRightAssignment_3()); }
	(rule__GTorEqual__RightAssignment_3)
	{ after(grammarAccess.getGTorEqualAccess().getRightAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GTorEqual__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GTorEqual__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GTorEqual__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGTorEqualAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getGTorEqualAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignement__Group__0__Impl
	rule__Assignement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignementAccess().getAssignementAction_0()); }
	()
	{ after(grammarAccess.getAssignementAccess().getAssignementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignement__Group__1__Impl
	rule__Assignement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignementAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getAssignementAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignement__Group__2__Impl
	rule__Assignement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignementAccess().getLeftAssignment_2()); }
	(rule__Assignement__LeftAssignment_2)
	{ after(grammarAccess.getAssignementAccess().getLeftAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignement__Group__3__Impl
	rule__Assignement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignementAccess().getEqualsSignKeyword_3()); }
	'='
	{ after(grammarAccess.getAssignementAccess().getEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignement__Group__4__Impl
	rule__Assignement__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignementAccess().getRightAssignment_4()); }
	(rule__Assignement__RightAssignment_4)
	{ after(grammarAccess.getAssignementAccess().getRightAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignement__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignement__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignement__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignementAccess().getRightParenthesisSemicolonKeyword_5()); }
	');'
	{ after(grammarAccess.getAssignementAccess().getRightParenthesisSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlusEqual__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusEqual__Group__0__Impl
	rule__PlusEqual__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusEqual__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusEqualAccess().getPlusEqualAction_0()); }
	()
	{ after(grammarAccess.getPlusEqualAccess().getPlusEqualAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusEqual__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusEqual__Group__1__Impl
	rule__PlusEqual__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusEqual__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusEqualAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getPlusEqualAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusEqual__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusEqual__Group__2__Impl
	rule__PlusEqual__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusEqual__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusEqualAccess().getLeftAssignment_2()); }
	(rule__PlusEqual__LeftAssignment_2)
	{ after(grammarAccess.getPlusEqualAccess().getLeftAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusEqual__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusEqual__Group__3__Impl
	rule__PlusEqual__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusEqual__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusEqualAccess().getPlusSignEqualsSignKeyword_3()); }
	'+='
	{ after(grammarAccess.getPlusEqualAccess().getPlusSignEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusEqual__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusEqual__Group__4__Impl
	rule__PlusEqual__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusEqual__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusEqualAccess().getRightAssignment_4()); }
	(rule__PlusEqual__RightAssignment_4)
	{ after(grammarAccess.getPlusEqualAccess().getRightAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusEqual__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlusEqual__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusEqual__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlusEqualAccess().getRightParenthesisSemicolonKeyword_5()); }
	');'
	{ after(grammarAccess.getPlusEqualAccess().getRightParenthesisSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MinusEqual__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinusEqual__Group__0__Impl
	rule__MinusEqual__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MinusEqual__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinusEqualAccess().getMinusEqualAction_0()); }
	()
	{ after(grammarAccess.getMinusEqualAccess().getMinusEqualAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinusEqual__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinusEqual__Group__1__Impl
	rule__MinusEqual__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MinusEqual__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinusEqualAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getMinusEqualAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinusEqual__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinusEqual__Group__2__Impl
	rule__MinusEqual__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MinusEqual__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinusEqualAccess().getLeftAssignment_2()); }
	(rule__MinusEqual__LeftAssignment_2)
	{ after(grammarAccess.getMinusEqualAccess().getLeftAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinusEqual__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinusEqual__Group__3__Impl
	rule__MinusEqual__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MinusEqual__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinusEqualAccess().getHyphenMinusEqualsSignKeyword_3()); }
	'-='
	{ after(grammarAccess.getMinusEqualAccess().getHyphenMinusEqualsSignKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinusEqual__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinusEqual__Group__4__Impl
	rule__MinusEqual__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MinusEqual__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinusEqualAccess().getRightAssignment_4()); }
	(rule__MinusEqual__RightAssignment_4)
	{ after(grammarAccess.getMinusEqualAccess().getRightAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinusEqual__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinusEqual__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MinusEqual__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinusEqualAccess().getRightParenthesisSemicolonKeyword_5()); }
	');'
	{ after(grammarAccess.getMinusEqualAccess().getRightParenthesisSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnInteger__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnInteger__Group__0__Impl
	rule__UnInteger__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnInteger__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnIntegerAccess().getUnIntegerAction_0()); }
	()
	{ after(grammarAccess.getUnIntegerAccess().getUnIntegerAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnInteger__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnInteger__Group__1__Impl
	rule__UnInteger__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnInteger__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnIntegerAccess().getIsConstAssignment_1()); }
	(rule__UnInteger__IsConstAssignment_1)?
	{ after(grammarAccess.getUnIntegerAccess().getIsConstAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnInteger__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnInteger__Group__2__Impl
	rule__UnInteger__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnInteger__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnIntegerAccess().getIntKeyword_2()); }
	'int'
	{ after(grammarAccess.getUnIntegerAccess().getIntKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnInteger__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnInteger__Group__3__Impl
	rule__UnInteger__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnInteger__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnIntegerAccess().getNameAssignment_3()); }
	(rule__UnInteger__NameAssignment_3)
	{ after(grammarAccess.getUnIntegerAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnInteger__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnInteger__Group__4__Impl
	rule__UnInteger__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UnInteger__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnIntegerAccess().getGroup_4()); }
	(rule__UnInteger__Group_4__0)?
	{ after(grammarAccess.getUnIntegerAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnInteger__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnInteger__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnInteger__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnIntegerAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getUnIntegerAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnInteger__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnInteger__Group_4__0__Impl
	rule__UnInteger__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnInteger__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnIntegerAccess().getEqualsSignKeyword_4_0()); }
	'='
	{ after(grammarAccess.getUnIntegerAccess().getEqualsSignKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnInteger__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnInteger__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnInteger__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnIntegerAccess().getInitialeValueAssignment_4_1()); }
	(rule__UnInteger__InitialeValueAssignment_4_1)
	{ after(grammarAccess.getUnIntegerAccess().getInitialeValueAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnDouble__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnDouble__Group__0__Impl
	rule__UnDouble__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnDouble__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnDoubleAccess().getUnDoubleAction_0()); }
	()
	{ after(grammarAccess.getUnDoubleAccess().getUnDoubleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnDouble__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnDouble__Group__1__Impl
	rule__UnDouble__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnDouble__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnDoubleAccess().getIsConstAssignment_1()); }
	(rule__UnDouble__IsConstAssignment_1)?
	{ after(grammarAccess.getUnDoubleAccess().getIsConstAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnDouble__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnDouble__Group__2__Impl
	rule__UnDouble__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnDouble__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnDoubleAccess().getDoubleKeyword_2()); }
	'double'
	{ after(grammarAccess.getUnDoubleAccess().getDoubleKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnDouble__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnDouble__Group__3__Impl
	rule__UnDouble__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnDouble__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnDoubleAccess().getNameAssignment_3()); }
	(rule__UnDouble__NameAssignment_3)
	{ after(grammarAccess.getUnDoubleAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnDouble__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnDouble__Group__4__Impl
	rule__UnDouble__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UnDouble__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnDoubleAccess().getGroup_4()); }
	(rule__UnDouble__Group_4__0)?
	{ after(grammarAccess.getUnDoubleAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnDouble__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnDouble__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnDouble__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnDoubleAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getUnDoubleAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnDouble__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnDouble__Group_4__0__Impl
	rule__UnDouble__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnDouble__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnDoubleAccess().getEqualsSignKeyword_4_0()); }
	'='
	{ after(grammarAccess.getUnDoubleAccess().getEqualsSignKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnDouble__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnDouble__Group_4__1__Impl
	rule__UnDouble__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnDouble__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnDoubleAccess().getInitialeValue1Assignment_4_1()); }
	(rule__UnDouble__InitialeValue1Assignment_4_1)
	{ after(grammarAccess.getUnDoubleAccess().getInitialeValue1Assignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnDouble__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnDouble__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnDouble__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnDoubleAccess().getGroup_4_2()); }
	(rule__UnDouble__Group_4_2__0)?
	{ after(grammarAccess.getUnDoubleAccess().getGroup_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnDouble__Group_4_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnDouble__Group_4_2__0__Impl
	rule__UnDouble__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnDouble__Group_4_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnDoubleAccess().getFullStopKeyword_4_2_0()); }
	'.'
	{ after(grammarAccess.getUnDoubleAccess().getFullStopKeyword_4_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnDouble__Group_4_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnDouble__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnDouble__Group_4_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnDoubleAccess().getInitialeValue2Assignment_4_2_1()); }
	(rule__UnDouble__InitialeValue2Assignment_4_2_1)
	{ after(grammarAccess.getUnDoubleAccess().getInitialeValue2Assignment_4_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnBoolean__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnBoolean__Group__0__Impl
	rule__UnBoolean__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnBoolean__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnBooleanAccess().getUnBooleanAction_0()); }
	()
	{ after(grammarAccess.getUnBooleanAccess().getUnBooleanAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnBoolean__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnBoolean__Group__1__Impl
	rule__UnBoolean__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnBoolean__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnBooleanAccess().getIsConstAssignment_1()); }
	(rule__UnBoolean__IsConstAssignment_1)?
	{ after(grammarAccess.getUnBooleanAccess().getIsConstAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnBoolean__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnBoolean__Group__2__Impl
	rule__UnBoolean__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnBoolean__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnBooleanAccess().getBoolKeyword_2()); }
	'bool'
	{ after(grammarAccess.getUnBooleanAccess().getBoolKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnBoolean__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnBoolean__Group__3__Impl
	rule__UnBoolean__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnBoolean__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnBooleanAccess().getNameAssignment_3()); }
	(rule__UnBoolean__NameAssignment_3)
	{ after(grammarAccess.getUnBooleanAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnBoolean__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnBoolean__Group__4__Impl
	rule__UnBoolean__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UnBoolean__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnBooleanAccess().getGroup_4()); }
	(rule__UnBoolean__Group_4__0)?
	{ after(grammarAccess.getUnBooleanAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnBoolean__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnBoolean__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnBoolean__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnBooleanAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getUnBooleanAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnBoolean__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnBoolean__Group_4__0__Impl
	rule__UnBoolean__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnBoolean__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnBooleanAccess().getEqualsSignKeyword_4_0()); }
	'='
	{ after(grammarAccess.getUnBooleanAccess().getEqualsSignKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnBoolean__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnBoolean__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnBoolean__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnBooleanAccess().getInitialeValueAssignment_4_1()); }
	(rule__UnBoolean__InitialeValueAssignment_4_1)
	{ after(grammarAccess.getUnBooleanAccess().getInitialeValueAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnString__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnString__Group__0__Impl
	rule__UnString__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnString__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnStringAccess().getUnStringAction_0()); }
	()
	{ after(grammarAccess.getUnStringAccess().getUnStringAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnString__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnString__Group__1__Impl
	rule__UnString__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnString__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnStringAccess().getIsConstAssignment_1()); }
	(rule__UnString__IsConstAssignment_1)?
	{ after(grammarAccess.getUnStringAccess().getIsConstAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnString__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnString__Group__2__Impl
	rule__UnString__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnString__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnStringAccess().getStringKeyword_2()); }
	'string'
	{ after(grammarAccess.getUnStringAccess().getStringKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnString__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnString__Group__3__Impl
	rule__UnString__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnString__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnStringAccess().getNameAssignment_3()); }
	(rule__UnString__NameAssignment_3)
	{ after(grammarAccess.getUnStringAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnString__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnString__Group__4__Impl
	rule__UnString__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UnString__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnStringAccess().getGroup_4()); }
	(rule__UnString__Group_4__0)?
	{ after(grammarAccess.getUnStringAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnString__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnString__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnString__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnStringAccess().getSemicolonKeyword_5()); }
	';'
	{ after(grammarAccess.getUnStringAccess().getSemicolonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnString__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnString__Group_4__0__Impl
	rule__UnString__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnString__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnStringAccess().getEqualsSignKeyword_4_0()); }
	'='
	{ after(grammarAccess.getUnStringAccess().getEqualsSignKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnString__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnString__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnString__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnStringAccess().getInitialeValueAssignment_4_1()); }
	(rule__UnString__InitialeValueAssignment_4_1)
	{ after(grammarAccess.getUnStringAccess().getInitialeValueAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TheDouble__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TheDouble__Group__0__Impl
	rule__TheDouble__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TheDouble__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheDoubleAccess().getTheDoubleAction_0()); }
	()
	{ after(grammarAccess.getTheDoubleAccess().getTheDoubleAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TheDouble__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TheDouble__Group__1__Impl
	rule__TheDouble__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TheDouble__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheDoubleAccess().getValue1Assignment_1()); }
	(rule__TheDouble__Value1Assignment_1)
	{ after(grammarAccess.getTheDoubleAccess().getValue1Assignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TheDouble__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TheDouble__Group__2__Impl
	rule__TheDouble__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TheDouble__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheDoubleAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getTheDoubleAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TheDouble__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TheDouble__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TheDouble__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheDoubleAccess().getValue2Assignment_3()); }
	(rule__TheDouble__Value2Assignment_3)
	{ after(grammarAccess.getTheDoubleAccess().getValue2Assignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TheInt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TheInt__Group__0__Impl
	rule__TheInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TheInt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheIntAccess().getTheIntAction_0()); }
	()
	{ after(grammarAccess.getTheIntAccess().getTheIntAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TheInt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TheInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TheInt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheIntAccess().getValueAssignment_1()); }
	(rule__TheInt__ValueAssignment_1)
	{ after(grammarAccess.getTheIntAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TheBoolean__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TheBoolean__Group__0__Impl
	rule__TheBoolean__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TheBoolean__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheBooleanAccess().getTheBooleanAction_0()); }
	()
	{ after(grammarAccess.getTheBooleanAccess().getTheBooleanAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TheBoolean__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TheBoolean__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TheBoolean__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheBooleanAccess().getValueAssignment_1()); }
	(rule__TheBoolean__ValueAssignment_1)
	{ after(grammarAccess.getTheBooleanAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TheString__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TheString__Group__0__Impl
	rule__TheString__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TheString__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheStringAccess().getTheStringAction_0()); }
	()
	{ after(grammarAccess.getTheStringAccess().getTheStringAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TheString__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TheString__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TheString__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTheStringAccess().getValueAssignment_1()); }
	(rule__TheString__ValueAssignment_1)
	{ after(grammarAccess.getTheStringAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group__0__Impl
	rule__FQN__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getGroup_1()); }
	(rule__FQN__Group_1__0)*
	{ after(grammarAccess.getFQNAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FQN__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group_1__0__Impl
	rule__FQN__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FQN__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FQN__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getNameEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getProgramAccess().getNameEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__StatementAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getStatementStatementParserRuleCall_4_0()); }
		ruleStatement
		{ after(grammarAccess.getProgramAccess().getStatementStatementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WheelEngine__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWheelEngineAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getWheelEngineAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WheelEngine__PositionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWheelEngineAccess().getPositionEStringParserRuleCall_2_0()); }
		ruleEString
		{ after(grammarAccess.getWheelEngineAccess().getPositionEStringParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorSensor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorSensorAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getColorSensorAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorSensor__PositionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorSensorAccess().getPositionEIntParserRuleCall_2_0()); }
		ruleEInt
		{ after(grammarAccess.getColorSensorAccess().getPositionEIntParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LaserSensor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLaserSensorAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getLaserSensorAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LaserSensor__PositionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLaserSensorAccess().getPositionEIntParserRuleCall_2_0()); }
		ruleEInt
		{ after(grammarAccess.getLaserSensorAccess().getPositionEIntParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GPSSensor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGPSSensorAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getGPSSensorAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GPSSensor__PositionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGPSSensorAccess().getPositionEIntParserRuleCall_2_0()); }
		ruleEInt
		{ after(grammarAccess.getGPSSensorAccess().getPositionEIntParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GyroSensor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGyroSensorAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getGyroSensorAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GyroSensor__PositionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGyroSensorAccess().getPositionEIntParserRuleCall_2_0()); }
		ruleEInt
		{ after(grammarAccess.getGyroSensorAccess().getPositionEIntParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UltraSonicSensor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUltraSonicSensorAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getUltraSonicSensorAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UltraSonicSensor__PositionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUltraSonicSensorAccess().getPositionEIntParserRuleCall_2_0()); }
		ruleEInt
		{ after(grammarAccess.getUltraSonicSensorAccess().getPositionEIntParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Car__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCarAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getCarAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Car__SensorAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCarAccess().getSensorSensorParserRuleCall_3_0()); }
		ruleSensor
		{ after(grammarAccess.getCarAccess().getSensorSensorParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Car__EngineAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCarAccess().getEngineEngineParserRuleCall_4_0()); }
		ruleEngine
		{ after(grammarAccess.getCarAccess().getEngineEngineParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VitesseOperation__WheelengineAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVitesseOperationAccess().getWheelengineWheelEngineCrossReference_0_0()); }
		(
			{ before(grammarAccess.getVitesseOperationAccess().getWheelengineWheelEngineFQNParserRuleCall_0_0_1()); }
			ruleFQN
			{ after(grammarAccess.getVitesseOperationAccess().getWheelengineWheelEngineFQNParserRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getVitesseOperationAccess().getWheelengineWheelEngineCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VitesseOperation__RightAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVitesseOperationAccess().getRightExpressionParserRuleCall_4_0()); }
		ruleExpression
		{ after(grammarAccess.getVitesseOperationAccess().getRightExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColorOperation__ColorsensorAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColorOperationAccess().getColorsensorColorSensorCrossReference_3_0()); }
		(
			{ before(grammarAccess.getColorOperationAccess().getColorsensorColorSensorFQNParserRuleCall_3_0_1()); }
			ruleFQN
			{ after(grammarAccess.getColorOperationAccess().getColorsensorColorSensorFQNParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getColorOperationAccess().getColorsensorColorSensorCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntensityOperation__ColorsensorAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntensityOperationAccess().getColorsensorColorSensorCrossReference_3_0()); }
		(
			{ before(grammarAccess.getIntensityOperationAccess().getColorsensorColorSensorFQNParserRuleCall_3_0_1()); }
			ruleFQN
			{ after(grammarAccess.getIntensityOperationAccess().getColorsensorColorSensorFQNParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getIntensityOperationAccess().getColorsensorColorSensorCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RangeOperation__LasersensorAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRangeOperationAccess().getLasersensorLaserSensorCrossReference_3_0()); }
		(
			{ before(grammarAccess.getRangeOperationAccess().getLasersensorLaserSensorFQNParserRuleCall_3_0_1()); }
			ruleFQN
			{ after(grammarAccess.getRangeOperationAccess().getLasersensorLaserSensorFQNParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getRangeOperationAccess().getLasersensorLaserSensorCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__XGPSOperation__GpssensorAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getXGPSOperationAccess().getGpssensorGPSSensorCrossReference_3_0()); }
		(
			{ before(grammarAccess.getXGPSOperationAccess().getGpssensorGPSSensorFQNParserRuleCall_3_0_1()); }
			ruleFQN
			{ after(grammarAccess.getXGPSOperationAccess().getGpssensorGPSSensorFQNParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getXGPSOperationAccess().getGpssensorGPSSensorCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__YGPSOperation__GpssensorAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getYGPSOperationAccess().getGpssensorGPSSensorCrossReference_3_0()); }
		(
			{ before(grammarAccess.getYGPSOperationAccess().getGpssensorGPSSensorFQNParserRuleCall_3_0_1()); }
			ruleFQN
			{ after(grammarAccess.getYGPSOperationAccess().getGpssensorGPSSensorFQNParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getYGPSOperationAccess().getGpssensorGPSSensorCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AngleOperation__GyrosensorAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAngleOperationAccess().getGyrosensorGyroSensorCrossReference_3_0()); }
		(
			{ before(grammarAccess.getAngleOperationAccess().getGyrosensorGyroSensorFQNParserRuleCall_3_0_1()); }
			ruleFQN
			{ after(grammarAccess.getAngleOperationAccess().getGyrosensorGyroSensorFQNParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getAngleOperationAccess().getGyrosensorGyroSensorCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DistanceOperation__UltrasonicsensorAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDistanceOperationAccess().getUltrasonicsensorUltraSonicSensorCrossReference_3_0()); }
		(
			{ before(grammarAccess.getDistanceOperationAccess().getUltrasonicsensorUltraSonicSensorFQNParserRuleCall_3_0_1()); }
			ruleFQN
			{ after(grammarAccess.getDistanceOperationAccess().getUltrasonicsensorUltraSonicSensorFQNParserRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getDistanceOperationAccess().getUltrasonicsensorUltraSonicSensorCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__ConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionEtatAccess().getConditionComparaisonParserRuleCall_1_0()); }
		ruleComparaison
		{ after(grammarAccess.getConditionEtatAccess().getConditionComparaisonParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__ConditionAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionEtatAccess().getConditionComparaisonParserRuleCall_2_1_0()); }
		ruleComparaison
		{ after(grammarAccess.getConditionEtatAccess().getConditionComparaisonParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__ConditionAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionEtatAccess().getConditionComparaisonParserRuleCall_3_1_0()); }
		ruleComparaison
		{ after(grammarAccess.getConditionEtatAccess().getConditionComparaisonParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__ThenAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionEtatAccess().getThenStatementParserRuleCall_5_0()); }
		ruleStatement
		{ after(grammarAccess.getConditionEtatAccess().getThenStatementParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConditionEtat__ElseAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionEtatAccess().getElseStatementParserRuleCall_7_1_0()); }
		ruleStatement
		{ after(grammarAccess.getConditionEtatAccess().getElseStatementParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__LoopConditionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileLoopAccess().getLoopConditionComparaisonParserRuleCall_1_0()); }
		ruleComparaison
		{ after(grammarAccess.getWhileLoopAccess().getLoopConditionComparaisonParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileLoop__StatementAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileLoopAccess().getStatementStatementParserRuleCall_3_0()); }
		ruleStatement
		{ after(grammarAccess.getWhileLoopAccess().getStatementStatementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodePrint__ExpressionAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodePrintAccess().getExpressionExpressionParserRuleCall_2_0_0()); }
		ruleExpression
		{ after(grammarAccess.getMethodePrintAccess().getExpressionExpressionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableRef__VariableAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableRefAccess().getVariableVariableCrossReference_0()); }
		(
			{ before(grammarAccess.getVariableRefAccess().getVariableVariableEStringParserRuleCall_0_1()); }
			ruleEString
			{ after(grammarAccess.getVariableRefAccess().getVariableVariableEStringParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getVariableRefAccess().getVariableVariableCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubstractionAccess().getLeftExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getSubstractionAccess().getLeftExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Substraction__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubstractionAccess().getRightExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getSubstractionAccess().getRightExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionAccess().getLeftExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getAdditionAccess().getLeftExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Addition__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAdditionAccess().getRightExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getAdditionAccess().getRightExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationAccess().getLeftExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getMultiplicationAccess().getLeftExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Multiplication__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMultiplicationAccess().getRightExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getMultiplicationAccess().getRightExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDivisionAccess().getLeftExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getDivisionAccess().getLeftExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Division__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDivisionAccess().getRightExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getDivisionAccess().getRightExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GT__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGTAccess().getLeftExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getGTAccess().getLeftExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GT__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGTAccess().getRightExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getGTAccess().getRightExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LT__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTAccess().getLeftExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getLTAccess().getLeftExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LT__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTAccess().getRightExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getLTAccess().getRightExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualAccess().getLeftExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getEqualAccess().getLeftExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Equal__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEqualAccess().getRightExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getEqualAccess().getRightExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Different__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDifferentAccess().getLeftExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getDifferentAccess().getLeftExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Different__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDifferentAccess().getRightExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getDifferentAccess().getRightExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTorEqual__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTorEqualAccess().getLeftExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getLTorEqualAccess().getLeftExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LTorEqual__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLTorEqualAccess().getRightExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getLTorEqualAccess().getRightExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GTorEqual__LeftAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGTorEqualAccess().getLeftExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getGTorEqualAccess().getLeftExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GTorEqual__RightAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGTorEqualAccess().getRightExpressionParserRuleCall_3_0()); }
		ruleExpression
		{ after(grammarAccess.getGTorEqualAccess().getRightExpressionParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignement__LeftAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignementAccess().getLeftExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getAssignementAccess().getLeftExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignement__RightAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignementAccess().getRightExpressionParserRuleCall_4_0()); }
		ruleExpression
		{ after(grammarAccess.getAssignementAccess().getRightExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusEqual__LeftAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusEqualAccess().getLeftExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getPlusEqualAccess().getLeftExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusEqual__RightAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlusEqualAccess().getRightExpressionParserRuleCall_4_0()); }
		ruleExpression
		{ after(grammarAccess.getPlusEqualAccess().getRightExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinusEqual__LeftAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMinusEqualAccess().getLeftExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getMinusEqualAccess().getLeftExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinusEqual__RightAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMinusEqualAccess().getRightExpressionParserRuleCall_4_0()); }
		ruleExpression
		{ after(grammarAccess.getMinusEqualAccess().getRightExpressionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnInteger__IsConstAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnIntegerAccess().getIsConstConstKeyword_1_0()); }
		(
			{ before(grammarAccess.getUnIntegerAccess().getIsConstConstKeyword_1_0()); }
			'const'
			{ after(grammarAccess.getUnIntegerAccess().getIsConstConstKeyword_1_0()); }
		)
		{ after(grammarAccess.getUnIntegerAccess().getIsConstConstKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnInteger__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnIntegerAccess().getNameEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getUnIntegerAccess().getNameEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnInteger__InitialeValueAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnIntegerAccess().getInitialeValueEIntParserRuleCall_4_1_0()); }
		ruleEInt
		{ after(grammarAccess.getUnIntegerAccess().getInitialeValueEIntParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnDouble__IsConstAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnDoubleAccess().getIsConstConstKeyword_1_0()); }
		(
			{ before(grammarAccess.getUnDoubleAccess().getIsConstConstKeyword_1_0()); }
			'const'
			{ after(grammarAccess.getUnDoubleAccess().getIsConstConstKeyword_1_0()); }
		)
		{ after(grammarAccess.getUnDoubleAccess().getIsConstConstKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnDouble__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnDoubleAccess().getNameEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getUnDoubleAccess().getNameEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnDouble__InitialeValue1Assignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnDoubleAccess().getInitialeValue1EIntParserRuleCall_4_1_0()); }
		ruleEInt
		{ after(grammarAccess.getUnDoubleAccess().getInitialeValue1EIntParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnDouble__InitialeValue2Assignment_4_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnDoubleAccess().getInitialeValue2EIntParserRuleCall_4_2_1_0()); }
		ruleEInt
		{ after(grammarAccess.getUnDoubleAccess().getInitialeValue2EIntParserRuleCall_4_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnBoolean__IsConstAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnBooleanAccess().getIsConstConstKeyword_1_0()); }
		(
			{ before(grammarAccess.getUnBooleanAccess().getIsConstConstKeyword_1_0()); }
			'const'
			{ after(grammarAccess.getUnBooleanAccess().getIsConstConstKeyword_1_0()); }
		)
		{ after(grammarAccess.getUnBooleanAccess().getIsConstConstKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnBoolean__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnBooleanAccess().getNameEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getUnBooleanAccess().getNameEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnBoolean__InitialeValueAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnBooleanAccess().getInitialeValueEBooleanParserRuleCall_4_1_0()); }
		ruleEBoolean
		{ after(grammarAccess.getUnBooleanAccess().getInitialeValueEBooleanParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnString__IsConstAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnStringAccess().getIsConstConstKeyword_1_0()); }
		(
			{ before(grammarAccess.getUnStringAccess().getIsConstConstKeyword_1_0()); }
			'const'
			{ after(grammarAccess.getUnStringAccess().getIsConstConstKeyword_1_0()); }
		)
		{ after(grammarAccess.getUnStringAccess().getIsConstConstKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnString__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnStringAccess().getNameEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getUnStringAccess().getNameEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnString__InitialeValueAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnStringAccess().getInitialeValueEStringParserRuleCall_4_1_0()); }
		ruleEString
		{ after(grammarAccess.getUnStringAccess().getInitialeValueEStringParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TheDouble__Value1Assignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTheDoubleAccess().getValue1EIntParserRuleCall_1_0()); }
		ruleEInt
		{ after(grammarAccess.getTheDoubleAccess().getValue1EIntParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TheDouble__Value2Assignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTheDoubleAccess().getValue2EIntParserRuleCall_3_0()); }
		ruleEInt
		{ after(grammarAccess.getTheDoubleAccess().getValue2EIntParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TheInt__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTheIntAccess().getValueEIntParserRuleCall_1_0()); }
		ruleEInt
		{ after(grammarAccess.getTheIntAccess().getValueEIntParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TheBoolean__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTheBooleanAccess().getValueEBooleanParserRuleCall_1_0()); }
		ruleEBoolean
		{ after(grammarAccess.getTheBooleanAccess().getValueEBooleanParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TheString__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTheStringAccess().getValueEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getTheStringAccess().getValueEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
