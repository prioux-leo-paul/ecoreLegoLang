package langageCompilation.concrete.syntax.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import langageCompilation.concrete.syntax.services.LegoLangGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalLegoLangParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_INT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'true'", "'false'", "'black'", "'white'", "'Program'", "'{'", "';'", "'}'", "'stop'", "'for'", "'WheelEngine'", "'on'", "'MotorizedArmEngine'", "'PaintballLauncherEngine'", "'ColorSensor'", "'LaserSensor'", "'GPSSensor'", "'GyroSensor'", "'UltraSonicSensor'", "'Car'", "'set'", "'vitesse'", "'('", "')'", "'='", "'break'", "'motor'", "'degres'", "'strength'", "'get'", "'color'", "'intensity'", "'range'", "'x'", "'y'", "'angle'", "'distance'", "'and'", "'or'", "'if'", "'else{'", "'while'", "'print('", "','", "'-'", "'+'", "'*'", "'/'", "'>'", "'<'", "'=='", "'!='", "'<='", "'>='", "'+='", "'-='", "'int'", "'double'", "'.'", "'bool'", "'string'", "'const'"
    };
    public static final int T__50=50;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__59=59;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__11=11;
    public static final int T__55=55;
    public static final int T__12=12;
    public static final int T__56=56;
    public static final int T__13=13;
    public static final int T__57=57;
    public static final int T__14=14;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=4;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int RULE_INT=5;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=7;
    public static final int T__23=23;
    public static final int T__67=67;
    public static final int T__24=24;
    public static final int T__68=68;
    public static final int T__25=25;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__20=20;
    public static final int T__64=64;
    public static final int T__21=21;
    public static final int T__65=65;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=6;
    public static final int RULE_SL_COMMENT=8;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int EOF=-1;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int RULE_WS=9;
    public static final int RULE_ANY_OTHER=10;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;

    // delegates
    // delegators


        public InternalLegoLangParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalLegoLangParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalLegoLangParser.tokenNames; }
    public String getGrammarFileName() { return "InternalLegoLang.g"; }


    	private LegoLangGrammarAccess grammarAccess;

    	public void setGrammarAccess(LegoLangGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		return tokenName;
    	}



    // $ANTLR start "entryRuleProgram"
    // InternalLegoLang.g:54:1: entryRuleProgram : ruleProgram EOF ;
    public final void entryRuleProgram() throws RecognitionException {
        try {
            // InternalLegoLang.g:55:1: ( ruleProgram EOF )
            // InternalLegoLang.g:56:1: ruleProgram EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleProgram();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleProgram"


    // $ANTLR start "ruleProgram"
    // InternalLegoLang.g:63:1: ruleProgram : ( ( rule__Program__Group__0 ) ) ;
    public final void ruleProgram() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:67:2: ( ( ( rule__Program__Group__0 ) ) )
            // InternalLegoLang.g:68:2: ( ( rule__Program__Group__0 ) )
            {
            // InternalLegoLang.g:68:2: ( ( rule__Program__Group__0 ) )
            // InternalLegoLang.g:69:3: ( rule__Program__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getGroup()); 
            }
            // InternalLegoLang.g:70:3: ( rule__Program__Group__0 )
            // InternalLegoLang.g:70:4: rule__Program__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Program__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleProgram"


    // $ANTLR start "entryRuleStatement"
    // InternalLegoLang.g:79:1: entryRuleStatement : ruleStatement EOF ;
    public final void entryRuleStatement() throws RecognitionException {
        try {
            // InternalLegoLang.g:80:1: ( ruleStatement EOF )
            // InternalLegoLang.g:81:1: ruleStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStatement"


    // $ANTLR start "ruleStatement"
    // InternalLegoLang.g:88:1: ruleStatement : ( ( rule__Statement__Alternatives ) ) ;
    public final void ruleStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:92:2: ( ( ( rule__Statement__Alternatives ) ) )
            // InternalLegoLang.g:93:2: ( ( rule__Statement__Alternatives ) )
            {
            // InternalLegoLang.g:93:2: ( ( rule__Statement__Alternatives ) )
            // InternalLegoLang.g:94:3: ( rule__Statement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getAlternatives()); 
            }
            // InternalLegoLang.g:95:3: ( rule__Statement__Alternatives )
            // InternalLegoLang.g:95:4: rule__Statement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Statement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStatement"


    // $ANTLR start "entryRuleExpression"
    // InternalLegoLang.g:104:1: entryRuleExpression : ruleExpression EOF ;
    public final void entryRuleExpression() throws RecognitionException {
        try {
            // InternalLegoLang.g:105:1: ( ruleExpression EOF )
            // InternalLegoLang.g:106:1: ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalLegoLang.g:113:1: ruleExpression : ( ( rule__Expression__Alternatives ) ) ;
    public final void ruleExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:117:2: ( ( ( rule__Expression__Alternatives ) ) )
            // InternalLegoLang.g:118:2: ( ( rule__Expression__Alternatives ) )
            {
            // InternalLegoLang.g:118:2: ( ( rule__Expression__Alternatives ) )
            // InternalLegoLang.g:119:3: ( rule__Expression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getAlternatives()); 
            }
            // InternalLegoLang.g:120:3: ( rule__Expression__Alternatives )
            // InternalLegoLang.g:120:4: rule__Expression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleBinaryOperation"
    // InternalLegoLang.g:129:1: entryRuleBinaryOperation : ruleBinaryOperation EOF ;
    public final void entryRuleBinaryOperation() throws RecognitionException {
        try {
            // InternalLegoLang.g:130:1: ( ruleBinaryOperation EOF )
            // InternalLegoLang.g:131:1: ruleBinaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBinaryOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBinaryOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBinaryOperationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBinaryOperation"


    // $ANTLR start "ruleBinaryOperation"
    // InternalLegoLang.g:138:1: ruleBinaryOperation : ( ( rule__BinaryOperation__Alternatives ) ) ;
    public final void ruleBinaryOperation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:142:2: ( ( ( rule__BinaryOperation__Alternatives ) ) )
            // InternalLegoLang.g:143:2: ( ( rule__BinaryOperation__Alternatives ) )
            {
            // InternalLegoLang.g:143:2: ( ( rule__BinaryOperation__Alternatives ) )
            // InternalLegoLang.g:144:3: ( rule__BinaryOperation__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBinaryOperationAccess().getAlternatives()); 
            }
            // InternalLegoLang.g:145:3: ( rule__BinaryOperation__Alternatives )
            // InternalLegoLang.g:145:4: rule__BinaryOperation__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__BinaryOperation__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBinaryOperationAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBinaryOperation"


    // $ANTLR start "entryRuleVariable"
    // InternalLegoLang.g:154:1: entryRuleVariable : ruleVariable EOF ;
    public final void entryRuleVariable() throws RecognitionException {
        try {
            // InternalLegoLang.g:155:1: ( ruleVariable EOF )
            // InternalLegoLang.g:156:1: ruleVariable EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVariable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariableRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVariable"


    // $ANTLR start "ruleVariable"
    // InternalLegoLang.g:163:1: ruleVariable : ( ( rule__Variable__Alternatives ) ) ;
    public final void ruleVariable() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:167:2: ( ( ( rule__Variable__Alternatives ) ) )
            // InternalLegoLang.g:168:2: ( ( rule__Variable__Alternatives ) )
            {
            // InternalLegoLang.g:168:2: ( ( rule__Variable__Alternatives ) )
            // InternalLegoLang.g:169:3: ( rule__Variable__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariableAccess().getAlternatives()); 
            }
            // InternalLegoLang.g:170:3: ( rule__Variable__Alternatives )
            // InternalLegoLang.g:170:4: rule__Variable__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Variable__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariableAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVariable"


    // $ANTLR start "entryRuleComparaison"
    // InternalLegoLang.g:179:1: entryRuleComparaison : ruleComparaison EOF ;
    public final void entryRuleComparaison() throws RecognitionException {
        try {
            // InternalLegoLang.g:180:1: ( ruleComparaison EOF )
            // InternalLegoLang.g:181:1: ruleComparaison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparaisonRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleComparaison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparaisonRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComparaison"


    // $ANTLR start "ruleComparaison"
    // InternalLegoLang.g:188:1: ruleComparaison : ( ( rule__Comparaison__Alternatives ) ) ;
    public final void ruleComparaison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:192:2: ( ( ( rule__Comparaison__Alternatives ) ) )
            // InternalLegoLang.g:193:2: ( ( rule__Comparaison__Alternatives ) )
            {
            // InternalLegoLang.g:193:2: ( ( rule__Comparaison__Alternatives ) )
            // InternalLegoLang.g:194:3: ( rule__Comparaison__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparaisonAccess().getAlternatives()); 
            }
            // InternalLegoLang.g:195:3: ( rule__Comparaison__Alternatives )
            // InternalLegoLang.g:195:4: rule__Comparaison__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Comparaison__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparaisonAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComparaison"


    // $ANTLR start "entryRuleEngine"
    // InternalLegoLang.g:204:1: entryRuleEngine : ruleEngine EOF ;
    public final void entryRuleEngine() throws RecognitionException {
        try {
            // InternalLegoLang.g:205:1: ( ruleEngine EOF )
            // InternalLegoLang.g:206:1: ruleEngine EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEngineRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleEngine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEngineRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEngine"


    // $ANTLR start "ruleEngine"
    // InternalLegoLang.g:213:1: ruleEngine : ( ( rule__Engine__Alternatives ) ) ;
    public final void ruleEngine() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:217:2: ( ( ( rule__Engine__Alternatives ) ) )
            // InternalLegoLang.g:218:2: ( ( rule__Engine__Alternatives ) )
            {
            // InternalLegoLang.g:218:2: ( ( rule__Engine__Alternatives ) )
            // InternalLegoLang.g:219:3: ( rule__Engine__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEngineAccess().getAlternatives()); 
            }
            // InternalLegoLang.g:220:3: ( rule__Engine__Alternatives )
            // InternalLegoLang.g:220:4: rule__Engine__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Engine__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEngineAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEngine"


    // $ANTLR start "entryRuleSensor"
    // InternalLegoLang.g:229:1: entryRuleSensor : ruleSensor EOF ;
    public final void entryRuleSensor() throws RecognitionException {
        try {
            // InternalLegoLang.g:230:1: ( ruleSensor EOF )
            // InternalLegoLang.g:231:1: ruleSensor EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSensorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSensor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSensorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSensor"


    // $ANTLR start "ruleSensor"
    // InternalLegoLang.g:238:1: ruleSensor : ( ( rule__Sensor__Alternatives ) ) ;
    public final void ruleSensor() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:242:2: ( ( ( rule__Sensor__Alternatives ) ) )
            // InternalLegoLang.g:243:2: ( ( rule__Sensor__Alternatives ) )
            {
            // InternalLegoLang.g:243:2: ( ( rule__Sensor__Alternatives ) )
            // InternalLegoLang.g:244:3: ( rule__Sensor__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSensorAccess().getAlternatives()); 
            }
            // InternalLegoLang.g:245:3: ( rule__Sensor__Alternatives )
            // InternalLegoLang.g:245:4: rule__Sensor__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Sensor__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSensorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSensor"


    // $ANTLR start "entryRulePause"
    // InternalLegoLang.g:254:1: entryRulePause : rulePause EOF ;
    public final void entryRulePause() throws RecognitionException {
        try {
            // InternalLegoLang.g:255:1: ( rulePause EOF )
            // InternalLegoLang.g:256:1: rulePause EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPauseRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePause();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPauseRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePause"


    // $ANTLR start "rulePause"
    // InternalLegoLang.g:263:1: rulePause : ( ( rule__Pause__Group__0 ) ) ;
    public final void rulePause() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:267:2: ( ( ( rule__Pause__Group__0 ) ) )
            // InternalLegoLang.g:268:2: ( ( rule__Pause__Group__0 ) )
            {
            // InternalLegoLang.g:268:2: ( ( rule__Pause__Group__0 ) )
            // InternalLegoLang.g:269:3: ( rule__Pause__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPauseAccess().getGroup()); 
            }
            // InternalLegoLang.g:270:3: ( rule__Pause__Group__0 )
            // InternalLegoLang.g:270:4: rule__Pause__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Pause__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPauseAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePause"


    // $ANTLR start "entryRuleWheelEngine"
    // InternalLegoLang.g:279:1: entryRuleWheelEngine : ruleWheelEngine EOF ;
    public final void entryRuleWheelEngine() throws RecognitionException {
        try {
            // InternalLegoLang.g:280:1: ( ruleWheelEngine EOF )
            // InternalLegoLang.g:281:1: ruleWheelEngine EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWheelEngineRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWheelEngine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWheelEngineRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWheelEngine"


    // $ANTLR start "ruleWheelEngine"
    // InternalLegoLang.g:288:1: ruleWheelEngine : ( ( rule__WheelEngine__Group__0 ) ) ;
    public final void ruleWheelEngine() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:292:2: ( ( ( rule__WheelEngine__Group__0 ) ) )
            // InternalLegoLang.g:293:2: ( ( rule__WheelEngine__Group__0 ) )
            {
            // InternalLegoLang.g:293:2: ( ( rule__WheelEngine__Group__0 ) )
            // InternalLegoLang.g:294:3: ( rule__WheelEngine__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWheelEngineAccess().getGroup()); 
            }
            // InternalLegoLang.g:295:3: ( rule__WheelEngine__Group__0 )
            // InternalLegoLang.g:295:4: rule__WheelEngine__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WheelEngine__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWheelEngineAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWheelEngine"


    // $ANTLR start "entryRuleMotorizedArmEngine"
    // InternalLegoLang.g:304:1: entryRuleMotorizedArmEngine : ruleMotorizedArmEngine EOF ;
    public final void entryRuleMotorizedArmEngine() throws RecognitionException {
        try {
            // InternalLegoLang.g:305:1: ( ruleMotorizedArmEngine EOF )
            // InternalLegoLang.g:306:1: ruleMotorizedArmEngine EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMotorizedArmEngineRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleMotorizedArmEngine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMotorizedArmEngineRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMotorizedArmEngine"


    // $ANTLR start "ruleMotorizedArmEngine"
    // InternalLegoLang.g:313:1: ruleMotorizedArmEngine : ( ( rule__MotorizedArmEngine__Group__0 ) ) ;
    public final void ruleMotorizedArmEngine() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:317:2: ( ( ( rule__MotorizedArmEngine__Group__0 ) ) )
            // InternalLegoLang.g:318:2: ( ( rule__MotorizedArmEngine__Group__0 ) )
            {
            // InternalLegoLang.g:318:2: ( ( rule__MotorizedArmEngine__Group__0 ) )
            // InternalLegoLang.g:319:3: ( rule__MotorizedArmEngine__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMotorizedArmEngineAccess().getGroup()); 
            }
            // InternalLegoLang.g:320:3: ( rule__MotorizedArmEngine__Group__0 )
            // InternalLegoLang.g:320:4: rule__MotorizedArmEngine__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MotorizedArmEngine__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMotorizedArmEngineAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMotorizedArmEngine"


    // $ANTLR start "entryRulePaintballLauncherEngine"
    // InternalLegoLang.g:329:1: entryRulePaintballLauncherEngine : rulePaintballLauncherEngine EOF ;
    public final void entryRulePaintballLauncherEngine() throws RecognitionException {
        try {
            // InternalLegoLang.g:330:1: ( rulePaintballLauncherEngine EOF )
            // InternalLegoLang.g:331:1: rulePaintballLauncherEngine EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPaintballLauncherEngineRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePaintballLauncherEngine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPaintballLauncherEngineRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePaintballLauncherEngine"


    // $ANTLR start "rulePaintballLauncherEngine"
    // InternalLegoLang.g:338:1: rulePaintballLauncherEngine : ( ( rule__PaintballLauncherEngine__Group__0 ) ) ;
    public final void rulePaintballLauncherEngine() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:342:2: ( ( ( rule__PaintballLauncherEngine__Group__0 ) ) )
            // InternalLegoLang.g:343:2: ( ( rule__PaintballLauncherEngine__Group__0 ) )
            {
            // InternalLegoLang.g:343:2: ( ( rule__PaintballLauncherEngine__Group__0 ) )
            // InternalLegoLang.g:344:3: ( rule__PaintballLauncherEngine__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPaintballLauncherEngineAccess().getGroup()); 
            }
            // InternalLegoLang.g:345:3: ( rule__PaintballLauncherEngine__Group__0 )
            // InternalLegoLang.g:345:4: rule__PaintballLauncherEngine__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PaintballLauncherEngine__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPaintballLauncherEngineAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePaintballLauncherEngine"


    // $ANTLR start "entryRuleColorSensor"
    // InternalLegoLang.g:354:1: entryRuleColorSensor : ruleColorSensor EOF ;
    public final void entryRuleColorSensor() throws RecognitionException {
        try {
            // InternalLegoLang.g:355:1: ( ruleColorSensor EOF )
            // InternalLegoLang.g:356:1: ruleColorSensor EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorSensorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColorSensor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorSensorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColorSensor"


    // $ANTLR start "ruleColorSensor"
    // InternalLegoLang.g:363:1: ruleColorSensor : ( ( rule__ColorSensor__Group__0 ) ) ;
    public final void ruleColorSensor() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:367:2: ( ( ( rule__ColorSensor__Group__0 ) ) )
            // InternalLegoLang.g:368:2: ( ( rule__ColorSensor__Group__0 ) )
            {
            // InternalLegoLang.g:368:2: ( ( rule__ColorSensor__Group__0 ) )
            // InternalLegoLang.g:369:3: ( rule__ColorSensor__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorSensorAccess().getGroup()); 
            }
            // InternalLegoLang.g:370:3: ( rule__ColorSensor__Group__0 )
            // InternalLegoLang.g:370:4: rule__ColorSensor__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ColorSensor__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorSensorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColorSensor"


    // $ANTLR start "entryRuleLaserSensor"
    // InternalLegoLang.g:379:1: entryRuleLaserSensor : ruleLaserSensor EOF ;
    public final void entryRuleLaserSensor() throws RecognitionException {
        try {
            // InternalLegoLang.g:380:1: ( ruleLaserSensor EOF )
            // InternalLegoLang.g:381:1: ruleLaserSensor EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLaserSensorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLaserSensor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLaserSensorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLaserSensor"


    // $ANTLR start "ruleLaserSensor"
    // InternalLegoLang.g:388:1: ruleLaserSensor : ( ( rule__LaserSensor__Group__0 ) ) ;
    public final void ruleLaserSensor() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:392:2: ( ( ( rule__LaserSensor__Group__0 ) ) )
            // InternalLegoLang.g:393:2: ( ( rule__LaserSensor__Group__0 ) )
            {
            // InternalLegoLang.g:393:2: ( ( rule__LaserSensor__Group__0 ) )
            // InternalLegoLang.g:394:3: ( rule__LaserSensor__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLaserSensorAccess().getGroup()); 
            }
            // InternalLegoLang.g:395:3: ( rule__LaserSensor__Group__0 )
            // InternalLegoLang.g:395:4: rule__LaserSensor__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LaserSensor__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLaserSensorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLaserSensor"


    // $ANTLR start "entryRuleGPSSensor"
    // InternalLegoLang.g:404:1: entryRuleGPSSensor : ruleGPSSensor EOF ;
    public final void entryRuleGPSSensor() throws RecognitionException {
        try {
            // InternalLegoLang.g:405:1: ( ruleGPSSensor EOF )
            // InternalLegoLang.g:406:1: ruleGPSSensor EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGPSSensorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleGPSSensor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGPSSensorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGPSSensor"


    // $ANTLR start "ruleGPSSensor"
    // InternalLegoLang.g:413:1: ruleGPSSensor : ( ( rule__GPSSensor__Group__0 ) ) ;
    public final void ruleGPSSensor() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:417:2: ( ( ( rule__GPSSensor__Group__0 ) ) )
            // InternalLegoLang.g:418:2: ( ( rule__GPSSensor__Group__0 ) )
            {
            // InternalLegoLang.g:418:2: ( ( rule__GPSSensor__Group__0 ) )
            // InternalLegoLang.g:419:3: ( rule__GPSSensor__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGPSSensorAccess().getGroup()); 
            }
            // InternalLegoLang.g:420:3: ( rule__GPSSensor__Group__0 )
            // InternalLegoLang.g:420:4: rule__GPSSensor__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__GPSSensor__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGPSSensorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGPSSensor"


    // $ANTLR start "entryRuleGyroSensor"
    // InternalLegoLang.g:429:1: entryRuleGyroSensor : ruleGyroSensor EOF ;
    public final void entryRuleGyroSensor() throws RecognitionException {
        try {
            // InternalLegoLang.g:430:1: ( ruleGyroSensor EOF )
            // InternalLegoLang.g:431:1: ruleGyroSensor EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGyroSensorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleGyroSensor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGyroSensorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGyroSensor"


    // $ANTLR start "ruleGyroSensor"
    // InternalLegoLang.g:438:1: ruleGyroSensor : ( ( rule__GyroSensor__Group__0 ) ) ;
    public final void ruleGyroSensor() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:442:2: ( ( ( rule__GyroSensor__Group__0 ) ) )
            // InternalLegoLang.g:443:2: ( ( rule__GyroSensor__Group__0 ) )
            {
            // InternalLegoLang.g:443:2: ( ( rule__GyroSensor__Group__0 ) )
            // InternalLegoLang.g:444:3: ( rule__GyroSensor__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGyroSensorAccess().getGroup()); 
            }
            // InternalLegoLang.g:445:3: ( rule__GyroSensor__Group__0 )
            // InternalLegoLang.g:445:4: rule__GyroSensor__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__GyroSensor__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGyroSensorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGyroSensor"


    // $ANTLR start "entryRuleUltraSonicSensor"
    // InternalLegoLang.g:454:1: entryRuleUltraSonicSensor : ruleUltraSonicSensor EOF ;
    public final void entryRuleUltraSonicSensor() throws RecognitionException {
        try {
            // InternalLegoLang.g:455:1: ( ruleUltraSonicSensor EOF )
            // InternalLegoLang.g:456:1: ruleUltraSonicSensor EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUltraSonicSensorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUltraSonicSensor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUltraSonicSensorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUltraSonicSensor"


    // $ANTLR start "ruleUltraSonicSensor"
    // InternalLegoLang.g:463:1: ruleUltraSonicSensor : ( ( rule__UltraSonicSensor__Group__0 ) ) ;
    public final void ruleUltraSonicSensor() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:467:2: ( ( ( rule__UltraSonicSensor__Group__0 ) ) )
            // InternalLegoLang.g:468:2: ( ( rule__UltraSonicSensor__Group__0 ) )
            {
            // InternalLegoLang.g:468:2: ( ( rule__UltraSonicSensor__Group__0 ) )
            // InternalLegoLang.g:469:3: ( rule__UltraSonicSensor__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUltraSonicSensorAccess().getGroup()); 
            }
            // InternalLegoLang.g:470:3: ( rule__UltraSonicSensor__Group__0 )
            // InternalLegoLang.g:470:4: rule__UltraSonicSensor__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UltraSonicSensor__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUltraSonicSensorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUltraSonicSensor"


    // $ANTLR start "entryRuleCar"
    // InternalLegoLang.g:479:1: entryRuleCar : ruleCar EOF ;
    public final void entryRuleCar() throws RecognitionException {
        try {
            // InternalLegoLang.g:480:1: ( ruleCar EOF )
            // InternalLegoLang.g:481:1: ruleCar EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCarRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCar();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCarRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCar"


    // $ANTLR start "ruleCar"
    // InternalLegoLang.g:488:1: ruleCar : ( ( rule__Car__Group__0 ) ) ;
    public final void ruleCar() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:492:2: ( ( ( rule__Car__Group__0 ) ) )
            // InternalLegoLang.g:493:2: ( ( rule__Car__Group__0 ) )
            {
            // InternalLegoLang.g:493:2: ( ( rule__Car__Group__0 ) )
            // InternalLegoLang.g:494:3: ( rule__Car__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCarAccess().getGroup()); 
            }
            // InternalLegoLang.g:495:3: ( rule__Car__Group__0 )
            // InternalLegoLang.g:495:4: rule__Car__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Car__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCarAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCar"


    // $ANTLR start "entryRuleEngineOperation"
    // InternalLegoLang.g:504:1: entryRuleEngineOperation : ruleEngineOperation EOF ;
    public final void entryRuleEngineOperation() throws RecognitionException {
        try {
            // InternalLegoLang.g:505:1: ( ruleEngineOperation EOF )
            // InternalLegoLang.g:506:1: ruleEngineOperation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEngineOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleEngineOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEngineOperationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEngineOperation"


    // $ANTLR start "ruleEngineOperation"
    // InternalLegoLang.g:513:1: ruleEngineOperation : ( ( rule__EngineOperation__Alternatives ) ) ;
    public final void ruleEngineOperation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:517:2: ( ( ( rule__EngineOperation__Alternatives ) ) )
            // InternalLegoLang.g:518:2: ( ( rule__EngineOperation__Alternatives ) )
            {
            // InternalLegoLang.g:518:2: ( ( rule__EngineOperation__Alternatives ) )
            // InternalLegoLang.g:519:3: ( rule__EngineOperation__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEngineOperationAccess().getAlternatives()); 
            }
            // InternalLegoLang.g:520:3: ( rule__EngineOperation__Alternatives )
            // InternalLegoLang.g:520:4: rule__EngineOperation__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EngineOperation__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEngineOperationAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEngineOperation"


    // $ANTLR start "entryRuleSensorOperation"
    // InternalLegoLang.g:529:1: entryRuleSensorOperation : ruleSensorOperation EOF ;
    public final void entryRuleSensorOperation() throws RecognitionException {
        try {
            // InternalLegoLang.g:530:1: ( ruleSensorOperation EOF )
            // InternalLegoLang.g:531:1: ruleSensorOperation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSensorOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSensorOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSensorOperationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSensorOperation"


    // $ANTLR start "ruleSensorOperation"
    // InternalLegoLang.g:538:1: ruleSensorOperation : ( ( rule__SensorOperation__Alternatives ) ) ;
    public final void ruleSensorOperation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:542:2: ( ( ( rule__SensorOperation__Alternatives ) ) )
            // InternalLegoLang.g:543:2: ( ( rule__SensorOperation__Alternatives ) )
            {
            // InternalLegoLang.g:543:2: ( ( rule__SensorOperation__Alternatives ) )
            // InternalLegoLang.g:544:3: ( rule__SensorOperation__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSensorOperationAccess().getAlternatives()); 
            }
            // InternalLegoLang.g:545:3: ( rule__SensorOperation__Alternatives )
            // InternalLegoLang.g:545:4: rule__SensorOperation__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__SensorOperation__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSensorOperationAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSensorOperation"


    // $ANTLR start "entryRuleVitesseOperation"
    // InternalLegoLang.g:554:1: entryRuleVitesseOperation : ruleVitesseOperation EOF ;
    public final void entryRuleVitesseOperation() throws RecognitionException {
        try {
            // InternalLegoLang.g:555:1: ( ruleVitesseOperation EOF )
            // InternalLegoLang.g:556:1: ruleVitesseOperation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVitesseOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVitesseOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVitesseOperationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVitesseOperation"


    // $ANTLR start "ruleVitesseOperation"
    // InternalLegoLang.g:563:1: ruleVitesseOperation : ( ( rule__VitesseOperation__Group__0 ) ) ;
    public final void ruleVitesseOperation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:567:2: ( ( ( rule__VitesseOperation__Group__0 ) ) )
            // InternalLegoLang.g:568:2: ( ( rule__VitesseOperation__Group__0 ) )
            {
            // InternalLegoLang.g:568:2: ( ( rule__VitesseOperation__Group__0 ) )
            // InternalLegoLang.g:569:3: ( rule__VitesseOperation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVitesseOperationAccess().getGroup()); 
            }
            // InternalLegoLang.g:570:3: ( rule__VitesseOperation__Group__0 )
            // InternalLegoLang.g:570:4: rule__VitesseOperation__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VitesseOperation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVitesseOperationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVitesseOperation"


    // $ANTLR start "entryRuleBreakMotor"
    // InternalLegoLang.g:579:1: entryRuleBreakMotor : ruleBreakMotor EOF ;
    public final void entryRuleBreakMotor() throws RecognitionException {
        try {
            // InternalLegoLang.g:580:1: ( ruleBreakMotor EOF )
            // InternalLegoLang.g:581:1: ruleBreakMotor EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakMotorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBreakMotor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakMotorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBreakMotor"


    // $ANTLR start "ruleBreakMotor"
    // InternalLegoLang.g:588:1: ruleBreakMotor : ( ( rule__BreakMotor__Group__0 ) ) ;
    public final void ruleBreakMotor() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:592:2: ( ( ( rule__BreakMotor__Group__0 ) ) )
            // InternalLegoLang.g:593:2: ( ( rule__BreakMotor__Group__0 ) )
            {
            // InternalLegoLang.g:593:2: ( ( rule__BreakMotor__Group__0 ) )
            // InternalLegoLang.g:594:3: ( rule__BreakMotor__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakMotorAccess().getGroup()); 
            }
            // InternalLegoLang.g:595:3: ( rule__BreakMotor__Group__0 )
            // InternalLegoLang.g:595:4: rule__BreakMotor__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BreakMotor__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakMotorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBreakMotor"


    // $ANTLR start "entryRulePositionOperation"
    // InternalLegoLang.g:604:1: entryRulePositionOperation : rulePositionOperation EOF ;
    public final void entryRulePositionOperation() throws RecognitionException {
        try {
            // InternalLegoLang.g:605:1: ( rulePositionOperation EOF )
            // InternalLegoLang.g:606:1: rulePositionOperation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPositionOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePositionOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPositionOperationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePositionOperation"


    // $ANTLR start "rulePositionOperation"
    // InternalLegoLang.g:613:1: rulePositionOperation : ( ( rule__PositionOperation__Group__0 ) ) ;
    public final void rulePositionOperation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:617:2: ( ( ( rule__PositionOperation__Group__0 ) ) )
            // InternalLegoLang.g:618:2: ( ( rule__PositionOperation__Group__0 ) )
            {
            // InternalLegoLang.g:618:2: ( ( rule__PositionOperation__Group__0 ) )
            // InternalLegoLang.g:619:3: ( rule__PositionOperation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPositionOperationAccess().getGroup()); 
            }
            // InternalLegoLang.g:620:3: ( rule__PositionOperation__Group__0 )
            // InternalLegoLang.g:620:4: rule__PositionOperation__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PositionOperation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPositionOperationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePositionOperation"


    // $ANTLR start "entryRuleForceOperation"
    // InternalLegoLang.g:629:1: entryRuleForceOperation : ruleForceOperation EOF ;
    public final void entryRuleForceOperation() throws RecognitionException {
        try {
            // InternalLegoLang.g:630:1: ( ruleForceOperation EOF )
            // InternalLegoLang.g:631:1: ruleForceOperation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForceOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleForceOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForceOperationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleForceOperation"


    // $ANTLR start "ruleForceOperation"
    // InternalLegoLang.g:638:1: ruleForceOperation : ( ( rule__ForceOperation__Group__0 ) ) ;
    public final void ruleForceOperation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:642:2: ( ( ( rule__ForceOperation__Group__0 ) ) )
            // InternalLegoLang.g:643:2: ( ( rule__ForceOperation__Group__0 ) )
            {
            // InternalLegoLang.g:643:2: ( ( rule__ForceOperation__Group__0 ) )
            // InternalLegoLang.g:644:3: ( rule__ForceOperation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForceOperationAccess().getGroup()); 
            }
            // InternalLegoLang.g:645:3: ( rule__ForceOperation__Group__0 )
            // InternalLegoLang.g:645:4: rule__ForceOperation__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ForceOperation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForceOperationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleForceOperation"


    // $ANTLR start "entryRuleColorOperation"
    // InternalLegoLang.g:654:1: entryRuleColorOperation : ruleColorOperation EOF ;
    public final void entryRuleColorOperation() throws RecognitionException {
        try {
            // InternalLegoLang.g:655:1: ( ruleColorOperation EOF )
            // InternalLegoLang.g:656:1: ruleColorOperation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColorOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorOperationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColorOperation"


    // $ANTLR start "ruleColorOperation"
    // InternalLegoLang.g:663:1: ruleColorOperation : ( ( rule__ColorOperation__Group__0 ) ) ;
    public final void ruleColorOperation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:667:2: ( ( ( rule__ColorOperation__Group__0 ) ) )
            // InternalLegoLang.g:668:2: ( ( rule__ColorOperation__Group__0 ) )
            {
            // InternalLegoLang.g:668:2: ( ( rule__ColorOperation__Group__0 ) )
            // InternalLegoLang.g:669:3: ( rule__ColorOperation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorOperationAccess().getGroup()); 
            }
            // InternalLegoLang.g:670:3: ( rule__ColorOperation__Group__0 )
            // InternalLegoLang.g:670:4: rule__ColorOperation__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ColorOperation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorOperationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColorOperation"


    // $ANTLR start "entryRuleIntensityOperation"
    // InternalLegoLang.g:679:1: entryRuleIntensityOperation : ruleIntensityOperation EOF ;
    public final void entryRuleIntensityOperation() throws RecognitionException {
        try {
            // InternalLegoLang.g:680:1: ( ruleIntensityOperation EOF )
            // InternalLegoLang.g:681:1: ruleIntensityOperation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntensityOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleIntensityOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntensityOperationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIntensityOperation"


    // $ANTLR start "ruleIntensityOperation"
    // InternalLegoLang.g:688:1: ruleIntensityOperation : ( ( rule__IntensityOperation__Group__0 ) ) ;
    public final void ruleIntensityOperation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:692:2: ( ( ( rule__IntensityOperation__Group__0 ) ) )
            // InternalLegoLang.g:693:2: ( ( rule__IntensityOperation__Group__0 ) )
            {
            // InternalLegoLang.g:693:2: ( ( rule__IntensityOperation__Group__0 ) )
            // InternalLegoLang.g:694:3: ( rule__IntensityOperation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntensityOperationAccess().getGroup()); 
            }
            // InternalLegoLang.g:695:3: ( rule__IntensityOperation__Group__0 )
            // InternalLegoLang.g:695:4: rule__IntensityOperation__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IntensityOperation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntensityOperationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntensityOperation"


    // $ANTLR start "entryRuleRangeOperation"
    // InternalLegoLang.g:704:1: entryRuleRangeOperation : ruleRangeOperation EOF ;
    public final void entryRuleRangeOperation() throws RecognitionException {
        try {
            // InternalLegoLang.g:705:1: ( ruleRangeOperation EOF )
            // InternalLegoLang.g:706:1: ruleRangeOperation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRangeOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeOperationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRangeOperation"


    // $ANTLR start "ruleRangeOperation"
    // InternalLegoLang.g:713:1: ruleRangeOperation : ( ( rule__RangeOperation__Group__0 ) ) ;
    public final void ruleRangeOperation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:717:2: ( ( ( rule__RangeOperation__Group__0 ) ) )
            // InternalLegoLang.g:718:2: ( ( rule__RangeOperation__Group__0 ) )
            {
            // InternalLegoLang.g:718:2: ( ( rule__RangeOperation__Group__0 ) )
            // InternalLegoLang.g:719:3: ( rule__RangeOperation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeOperationAccess().getGroup()); 
            }
            // InternalLegoLang.g:720:3: ( rule__RangeOperation__Group__0 )
            // InternalLegoLang.g:720:4: rule__RangeOperation__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__RangeOperation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeOperationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRangeOperation"


    // $ANTLR start "entryRuleXGPSOperation"
    // InternalLegoLang.g:729:1: entryRuleXGPSOperation : ruleXGPSOperation EOF ;
    public final void entryRuleXGPSOperation() throws RecognitionException {
        try {
            // InternalLegoLang.g:730:1: ( ruleXGPSOperation EOF )
            // InternalLegoLang.g:731:1: ruleXGPSOperation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXGPSOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleXGPSOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXGPSOperationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXGPSOperation"


    // $ANTLR start "ruleXGPSOperation"
    // InternalLegoLang.g:738:1: ruleXGPSOperation : ( ( rule__XGPSOperation__Group__0 ) ) ;
    public final void ruleXGPSOperation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:742:2: ( ( ( rule__XGPSOperation__Group__0 ) ) )
            // InternalLegoLang.g:743:2: ( ( rule__XGPSOperation__Group__0 ) )
            {
            // InternalLegoLang.g:743:2: ( ( rule__XGPSOperation__Group__0 ) )
            // InternalLegoLang.g:744:3: ( rule__XGPSOperation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXGPSOperationAccess().getGroup()); 
            }
            // InternalLegoLang.g:745:3: ( rule__XGPSOperation__Group__0 )
            // InternalLegoLang.g:745:4: rule__XGPSOperation__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__XGPSOperation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXGPSOperationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXGPSOperation"


    // $ANTLR start "entryRuleYGPSOperation"
    // InternalLegoLang.g:754:1: entryRuleYGPSOperation : ruleYGPSOperation EOF ;
    public final void entryRuleYGPSOperation() throws RecognitionException {
        try {
            // InternalLegoLang.g:755:1: ( ruleYGPSOperation EOF )
            // InternalLegoLang.g:756:1: ruleYGPSOperation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getYGPSOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleYGPSOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getYGPSOperationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleYGPSOperation"


    // $ANTLR start "ruleYGPSOperation"
    // InternalLegoLang.g:763:1: ruleYGPSOperation : ( ( rule__YGPSOperation__Group__0 ) ) ;
    public final void ruleYGPSOperation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:767:2: ( ( ( rule__YGPSOperation__Group__0 ) ) )
            // InternalLegoLang.g:768:2: ( ( rule__YGPSOperation__Group__0 ) )
            {
            // InternalLegoLang.g:768:2: ( ( rule__YGPSOperation__Group__0 ) )
            // InternalLegoLang.g:769:3: ( rule__YGPSOperation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getYGPSOperationAccess().getGroup()); 
            }
            // InternalLegoLang.g:770:3: ( rule__YGPSOperation__Group__0 )
            // InternalLegoLang.g:770:4: rule__YGPSOperation__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__YGPSOperation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getYGPSOperationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleYGPSOperation"


    // $ANTLR start "entryRuleAngleOperation"
    // InternalLegoLang.g:779:1: entryRuleAngleOperation : ruleAngleOperation EOF ;
    public final void entryRuleAngleOperation() throws RecognitionException {
        try {
            // InternalLegoLang.g:780:1: ( ruleAngleOperation EOF )
            // InternalLegoLang.g:781:1: ruleAngleOperation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAngleOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAngleOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAngleOperationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAngleOperation"


    // $ANTLR start "ruleAngleOperation"
    // InternalLegoLang.g:788:1: ruleAngleOperation : ( ( rule__AngleOperation__Group__0 ) ) ;
    public final void ruleAngleOperation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:792:2: ( ( ( rule__AngleOperation__Group__0 ) ) )
            // InternalLegoLang.g:793:2: ( ( rule__AngleOperation__Group__0 ) )
            {
            // InternalLegoLang.g:793:2: ( ( rule__AngleOperation__Group__0 ) )
            // InternalLegoLang.g:794:3: ( rule__AngleOperation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAngleOperationAccess().getGroup()); 
            }
            // InternalLegoLang.g:795:3: ( rule__AngleOperation__Group__0 )
            // InternalLegoLang.g:795:4: rule__AngleOperation__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AngleOperation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAngleOperationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAngleOperation"


    // $ANTLR start "entryRuleDistanceOperation"
    // InternalLegoLang.g:804:1: entryRuleDistanceOperation : ruleDistanceOperation EOF ;
    public final void entryRuleDistanceOperation() throws RecognitionException {
        try {
            // InternalLegoLang.g:805:1: ( ruleDistanceOperation EOF )
            // InternalLegoLang.g:806:1: ruleDistanceOperation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDistanceOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDistanceOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDistanceOperationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDistanceOperation"


    // $ANTLR start "ruleDistanceOperation"
    // InternalLegoLang.g:813:1: ruleDistanceOperation : ( ( rule__DistanceOperation__Group__0 ) ) ;
    public final void ruleDistanceOperation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:817:2: ( ( ( rule__DistanceOperation__Group__0 ) ) )
            // InternalLegoLang.g:818:2: ( ( rule__DistanceOperation__Group__0 ) )
            {
            // InternalLegoLang.g:818:2: ( ( rule__DistanceOperation__Group__0 ) )
            // InternalLegoLang.g:819:3: ( rule__DistanceOperation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDistanceOperationAccess().getGroup()); 
            }
            // InternalLegoLang.g:820:3: ( rule__DistanceOperation__Group__0 )
            // InternalLegoLang.g:820:4: rule__DistanceOperation__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DistanceOperation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDistanceOperationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDistanceOperation"


    // $ANTLR start "entryRuleBooleanExpression"
    // InternalLegoLang.g:829:1: entryRuleBooleanExpression : ruleBooleanExpression EOF ;
    public final void entryRuleBooleanExpression() throws RecognitionException {
        try {
            // InternalLegoLang.g:830:1: ( ruleBooleanExpression EOF )
            // InternalLegoLang.g:831:1: ruleBooleanExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBooleanExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBooleanExpression"


    // $ANTLR start "ruleBooleanExpression"
    // InternalLegoLang.g:838:1: ruleBooleanExpression : ( ( rule__BooleanExpression__Alternatives ) ) ;
    public final void ruleBooleanExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:842:2: ( ( ( rule__BooleanExpression__Alternatives ) ) )
            // InternalLegoLang.g:843:2: ( ( rule__BooleanExpression__Alternatives ) )
            {
            // InternalLegoLang.g:843:2: ( ( rule__BooleanExpression__Alternatives ) )
            // InternalLegoLang.g:844:3: ( rule__BooleanExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanExpressionAccess().getAlternatives()); 
            }
            // InternalLegoLang.g:845:3: ( rule__BooleanExpression__Alternatives )
            // InternalLegoLang.g:845:4: rule__BooleanExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__BooleanExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBooleanExpression"


    // $ANTLR start "entryRuleAnd"
    // InternalLegoLang.g:854:1: entryRuleAnd : ruleAnd EOF ;
    public final void entryRuleAnd() throws RecognitionException {
        try {
            // InternalLegoLang.g:855:1: ( ruleAnd EOF )
            // InternalLegoLang.g:856:1: ruleAnd EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAnd();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnd"


    // $ANTLR start "ruleAnd"
    // InternalLegoLang.g:863:1: ruleAnd : ( ( rule__And__Group__0 ) ) ;
    public final void ruleAnd() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:867:2: ( ( ( rule__And__Group__0 ) ) )
            // InternalLegoLang.g:868:2: ( ( rule__And__Group__0 ) )
            {
            // InternalLegoLang.g:868:2: ( ( rule__And__Group__0 ) )
            // InternalLegoLang.g:869:3: ( rule__And__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getGroup()); 
            }
            // InternalLegoLang.g:870:3: ( rule__And__Group__0 )
            // InternalLegoLang.g:870:4: rule__And__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__And__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnd"


    // $ANTLR start "entryRuleOr"
    // InternalLegoLang.g:879:1: entryRuleOr : ruleOr EOF ;
    public final void entryRuleOr() throws RecognitionException {
        try {
            // InternalLegoLang.g:880:1: ( ruleOr EOF )
            // InternalLegoLang.g:881:1: ruleOr EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOr();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOr"


    // $ANTLR start "ruleOr"
    // InternalLegoLang.g:888:1: ruleOr : ( ( rule__Or__Group__0 ) ) ;
    public final void ruleOr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:892:2: ( ( ( rule__Or__Group__0 ) ) )
            // InternalLegoLang.g:893:2: ( ( rule__Or__Group__0 ) )
            {
            // InternalLegoLang.g:893:2: ( ( rule__Or__Group__0 ) )
            // InternalLegoLang.g:894:3: ( rule__Or__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getGroup()); 
            }
            // InternalLegoLang.g:895:3: ( rule__Or__Group__0 )
            // InternalLegoLang.g:895:4: rule__Or__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Or__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOr"


    // $ANTLR start "entryRuleConditionEtat"
    // InternalLegoLang.g:904:1: entryRuleConditionEtat : ruleConditionEtat EOF ;
    public final void entryRuleConditionEtat() throws RecognitionException {
        try {
            // InternalLegoLang.g:905:1: ( ruleConditionEtat EOF )
            // InternalLegoLang.g:906:1: ruleConditionEtat EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionEtatRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleConditionEtat();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionEtatRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConditionEtat"


    // $ANTLR start "ruleConditionEtat"
    // InternalLegoLang.g:913:1: ruleConditionEtat : ( ( rule__ConditionEtat__Group__0 ) ) ;
    public final void ruleConditionEtat() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:917:2: ( ( ( rule__ConditionEtat__Group__0 ) ) )
            // InternalLegoLang.g:918:2: ( ( rule__ConditionEtat__Group__0 ) )
            {
            // InternalLegoLang.g:918:2: ( ( rule__ConditionEtat__Group__0 ) )
            // InternalLegoLang.g:919:3: ( rule__ConditionEtat__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionEtatAccess().getGroup()); 
            }
            // InternalLegoLang.g:920:3: ( rule__ConditionEtat__Group__0 )
            // InternalLegoLang.g:920:4: rule__ConditionEtat__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ConditionEtat__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionEtatAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConditionEtat"


    // $ANTLR start "entryRuleEString"
    // InternalLegoLang.g:929:1: entryRuleEString : ruleEString EOF ;
    public final void entryRuleEString() throws RecognitionException {
        try {
            // InternalLegoLang.g:930:1: ( ruleEString EOF )
            // InternalLegoLang.g:931:1: ruleEString EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEStringRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEStringRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEString"


    // $ANTLR start "ruleEString"
    // InternalLegoLang.g:938:1: ruleEString : ( ( rule__EString__Alternatives ) ) ;
    public final void ruleEString() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:942:2: ( ( ( rule__EString__Alternatives ) ) )
            // InternalLegoLang.g:943:2: ( ( rule__EString__Alternatives ) )
            {
            // InternalLegoLang.g:943:2: ( ( rule__EString__Alternatives ) )
            // InternalLegoLang.g:944:3: ( rule__EString__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEStringAccess().getAlternatives()); 
            }
            // InternalLegoLang.g:945:3: ( rule__EString__Alternatives )
            // InternalLegoLang.g:945:4: rule__EString__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EString__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEStringAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEString"


    // $ANTLR start "entryRuleWhileLoop"
    // InternalLegoLang.g:954:1: entryRuleWhileLoop : ruleWhileLoop EOF ;
    public final void entryRuleWhileLoop() throws RecognitionException {
        try {
            // InternalLegoLang.g:955:1: ( ruleWhileLoop EOF )
            // InternalLegoLang.g:956:1: ruleWhileLoop EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileLoopRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWhileLoop();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileLoopRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWhileLoop"


    // $ANTLR start "ruleWhileLoop"
    // InternalLegoLang.g:963:1: ruleWhileLoop : ( ( rule__WhileLoop__Group__0 ) ) ;
    public final void ruleWhileLoop() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:967:2: ( ( ( rule__WhileLoop__Group__0 ) ) )
            // InternalLegoLang.g:968:2: ( ( rule__WhileLoop__Group__0 ) )
            {
            // InternalLegoLang.g:968:2: ( ( rule__WhileLoop__Group__0 ) )
            // InternalLegoLang.g:969:3: ( rule__WhileLoop__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileLoopAccess().getGroup()); 
            }
            // InternalLegoLang.g:970:3: ( rule__WhileLoop__Group__0 )
            // InternalLegoLang.g:970:4: rule__WhileLoop__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WhileLoop__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileLoopAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWhileLoop"


    // $ANTLR start "entryRuleMethodePrint"
    // InternalLegoLang.g:979:1: entryRuleMethodePrint : ruleMethodePrint EOF ;
    public final void entryRuleMethodePrint() throws RecognitionException {
        try {
            // InternalLegoLang.g:980:1: ( ruleMethodePrint EOF )
            // InternalLegoLang.g:981:1: ruleMethodePrint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodePrintRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleMethodePrint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodePrintRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMethodePrint"


    // $ANTLR start "ruleMethodePrint"
    // InternalLegoLang.g:988:1: ruleMethodePrint : ( ( rule__MethodePrint__Group__0 ) ) ;
    public final void ruleMethodePrint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:992:2: ( ( ( rule__MethodePrint__Group__0 ) ) )
            // InternalLegoLang.g:993:2: ( ( rule__MethodePrint__Group__0 ) )
            {
            // InternalLegoLang.g:993:2: ( ( rule__MethodePrint__Group__0 ) )
            // InternalLegoLang.g:994:3: ( rule__MethodePrint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodePrintAccess().getGroup()); 
            }
            // InternalLegoLang.g:995:3: ( rule__MethodePrint__Group__0 )
            // InternalLegoLang.g:995:4: rule__MethodePrint__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MethodePrint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodePrintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMethodePrint"


    // $ANTLR start "entryRuleVariableRef"
    // InternalLegoLang.g:1004:1: entryRuleVariableRef : ruleVariableRef EOF ;
    public final void entryRuleVariableRef() throws RecognitionException {
        try {
            // InternalLegoLang.g:1005:1: ( ruleVariableRef EOF )
            // InternalLegoLang.g:1006:1: ruleVariableRef EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariableRefRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVariableRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariableRefRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVariableRef"


    // $ANTLR start "ruleVariableRef"
    // InternalLegoLang.g:1013:1: ruleVariableRef : ( ( rule__VariableRef__VariableAssignment ) ) ;
    public final void ruleVariableRef() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1017:2: ( ( ( rule__VariableRef__VariableAssignment ) ) )
            // InternalLegoLang.g:1018:2: ( ( rule__VariableRef__VariableAssignment ) )
            {
            // InternalLegoLang.g:1018:2: ( ( rule__VariableRef__VariableAssignment ) )
            // InternalLegoLang.g:1019:3: ( rule__VariableRef__VariableAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariableRefAccess().getVariableAssignment()); 
            }
            // InternalLegoLang.g:1020:3: ( rule__VariableRef__VariableAssignment )
            // InternalLegoLang.g:1020:4: rule__VariableRef__VariableAssignment
            {
            pushFollow(FOLLOW_2);
            rule__VariableRef__VariableAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariableRefAccess().getVariableAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVariableRef"


    // $ANTLR start "entryRuleSubstraction"
    // InternalLegoLang.g:1029:1: entryRuleSubstraction : ruleSubstraction EOF ;
    public final void entryRuleSubstraction() throws RecognitionException {
        try {
            // InternalLegoLang.g:1030:1: ( ruleSubstraction EOF )
            // InternalLegoLang.g:1031:1: ruleSubstraction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubstractionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSubstraction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubstractionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubstraction"


    // $ANTLR start "ruleSubstraction"
    // InternalLegoLang.g:1038:1: ruleSubstraction : ( ( rule__Substraction__Group__0 ) ) ;
    public final void ruleSubstraction() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1042:2: ( ( ( rule__Substraction__Group__0 ) ) )
            // InternalLegoLang.g:1043:2: ( ( rule__Substraction__Group__0 ) )
            {
            // InternalLegoLang.g:1043:2: ( ( rule__Substraction__Group__0 ) )
            // InternalLegoLang.g:1044:3: ( rule__Substraction__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubstractionAccess().getGroup()); 
            }
            // InternalLegoLang.g:1045:3: ( rule__Substraction__Group__0 )
            // InternalLegoLang.g:1045:4: rule__Substraction__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Substraction__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubstractionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubstraction"


    // $ANTLR start "entryRuleAddition"
    // InternalLegoLang.g:1054:1: entryRuleAddition : ruleAddition EOF ;
    public final void entryRuleAddition() throws RecognitionException {
        try {
            // InternalLegoLang.g:1055:1: ( ruleAddition EOF )
            // InternalLegoLang.g:1056:1: ruleAddition EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAddition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAddition"


    // $ANTLR start "ruleAddition"
    // InternalLegoLang.g:1063:1: ruleAddition : ( ( rule__Addition__Group__0 ) ) ;
    public final void ruleAddition() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1067:2: ( ( ( rule__Addition__Group__0 ) ) )
            // InternalLegoLang.g:1068:2: ( ( rule__Addition__Group__0 ) )
            {
            // InternalLegoLang.g:1068:2: ( ( rule__Addition__Group__0 ) )
            // InternalLegoLang.g:1069:3: ( rule__Addition__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditionAccess().getGroup()); 
            }
            // InternalLegoLang.g:1070:3: ( rule__Addition__Group__0 )
            // InternalLegoLang.g:1070:4: rule__Addition__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Addition__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAddition"


    // $ANTLR start "entryRuleMultiplication"
    // InternalLegoLang.g:1079:1: entryRuleMultiplication : ruleMultiplication EOF ;
    public final void entryRuleMultiplication() throws RecognitionException {
        try {
            // InternalLegoLang.g:1080:1: ( ruleMultiplication EOF )
            // InternalLegoLang.g:1081:1: ruleMultiplication EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleMultiplication();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMultiplication"


    // $ANTLR start "ruleMultiplication"
    // InternalLegoLang.g:1088:1: ruleMultiplication : ( ( rule__Multiplication__Group__0 ) ) ;
    public final void ruleMultiplication() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1092:2: ( ( ( rule__Multiplication__Group__0 ) ) )
            // InternalLegoLang.g:1093:2: ( ( rule__Multiplication__Group__0 ) )
            {
            // InternalLegoLang.g:1093:2: ( ( rule__Multiplication__Group__0 ) )
            // InternalLegoLang.g:1094:3: ( rule__Multiplication__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicationAccess().getGroup()); 
            }
            // InternalLegoLang.g:1095:3: ( rule__Multiplication__Group__0 )
            // InternalLegoLang.g:1095:4: rule__Multiplication__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Multiplication__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMultiplication"


    // $ANTLR start "entryRuleDivision"
    // InternalLegoLang.g:1104:1: entryRuleDivision : ruleDivision EOF ;
    public final void entryRuleDivision() throws RecognitionException {
        try {
            // InternalLegoLang.g:1105:1: ( ruleDivision EOF )
            // InternalLegoLang.g:1106:1: ruleDivision EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDivisionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDivision();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDivisionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDivision"


    // $ANTLR start "ruleDivision"
    // InternalLegoLang.g:1113:1: ruleDivision : ( ( rule__Division__Group__0 ) ) ;
    public final void ruleDivision() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1117:2: ( ( ( rule__Division__Group__0 ) ) )
            // InternalLegoLang.g:1118:2: ( ( rule__Division__Group__0 ) )
            {
            // InternalLegoLang.g:1118:2: ( ( rule__Division__Group__0 ) )
            // InternalLegoLang.g:1119:3: ( rule__Division__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDivisionAccess().getGroup()); 
            }
            // InternalLegoLang.g:1120:3: ( rule__Division__Group__0 )
            // InternalLegoLang.g:1120:4: rule__Division__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Division__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDivisionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDivision"


    // $ANTLR start "entryRuleGT"
    // InternalLegoLang.g:1129:1: entryRuleGT : ruleGT EOF ;
    public final void entryRuleGT() throws RecognitionException {
        try {
            // InternalLegoLang.g:1130:1: ( ruleGT EOF )
            // InternalLegoLang.g:1131:1: ruleGT EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleGT();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGT"


    // $ANTLR start "ruleGT"
    // InternalLegoLang.g:1138:1: ruleGT : ( ( rule__GT__Group__0 ) ) ;
    public final void ruleGT() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1142:2: ( ( ( rule__GT__Group__0 ) ) )
            // InternalLegoLang.g:1143:2: ( ( rule__GT__Group__0 ) )
            {
            // InternalLegoLang.g:1143:2: ( ( rule__GT__Group__0 ) )
            // InternalLegoLang.g:1144:3: ( rule__GT__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTAccess().getGroup()); 
            }
            // InternalLegoLang.g:1145:3: ( rule__GT__Group__0 )
            // InternalLegoLang.g:1145:4: rule__GT__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__GT__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGT"


    // $ANTLR start "entryRuleLT"
    // InternalLegoLang.g:1154:1: entryRuleLT : ruleLT EOF ;
    public final void entryRuleLT() throws RecognitionException {
        try {
            // InternalLegoLang.g:1155:1: ( ruleLT EOF )
            // InternalLegoLang.g:1156:1: ruleLT EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLT();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLT"


    // $ANTLR start "ruleLT"
    // InternalLegoLang.g:1163:1: ruleLT : ( ( rule__LT__Group__0 ) ) ;
    public final void ruleLT() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1167:2: ( ( ( rule__LT__Group__0 ) ) )
            // InternalLegoLang.g:1168:2: ( ( rule__LT__Group__0 ) )
            {
            // InternalLegoLang.g:1168:2: ( ( rule__LT__Group__0 ) )
            // InternalLegoLang.g:1169:3: ( rule__LT__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTAccess().getGroup()); 
            }
            // InternalLegoLang.g:1170:3: ( rule__LT__Group__0 )
            // InternalLegoLang.g:1170:4: rule__LT__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LT__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLT"


    // $ANTLR start "entryRuleEqual"
    // InternalLegoLang.g:1179:1: entryRuleEqual : ruleEqual EOF ;
    public final void entryRuleEqual() throws RecognitionException {
        try {
            // InternalLegoLang.g:1180:1: ( ruleEqual EOF )
            // InternalLegoLang.g:1181:1: ruleEqual EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleEqual();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEqual"


    // $ANTLR start "ruleEqual"
    // InternalLegoLang.g:1188:1: ruleEqual : ( ( rule__Equal__Group__0 ) ) ;
    public final void ruleEqual() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1192:2: ( ( ( rule__Equal__Group__0 ) ) )
            // InternalLegoLang.g:1193:2: ( ( rule__Equal__Group__0 ) )
            {
            // InternalLegoLang.g:1193:2: ( ( rule__Equal__Group__0 ) )
            // InternalLegoLang.g:1194:3: ( rule__Equal__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualAccess().getGroup()); 
            }
            // InternalLegoLang.g:1195:3: ( rule__Equal__Group__0 )
            // InternalLegoLang.g:1195:4: rule__Equal__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Equal__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEqual"


    // $ANTLR start "entryRuleDifferent"
    // InternalLegoLang.g:1204:1: entryRuleDifferent : ruleDifferent EOF ;
    public final void entryRuleDifferent() throws RecognitionException {
        try {
            // InternalLegoLang.g:1205:1: ( ruleDifferent EOF )
            // InternalLegoLang.g:1206:1: ruleDifferent EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDifferentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDifferent();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDifferentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDifferent"


    // $ANTLR start "ruleDifferent"
    // InternalLegoLang.g:1213:1: ruleDifferent : ( ( rule__Different__Group__0 ) ) ;
    public final void ruleDifferent() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1217:2: ( ( ( rule__Different__Group__0 ) ) )
            // InternalLegoLang.g:1218:2: ( ( rule__Different__Group__0 ) )
            {
            // InternalLegoLang.g:1218:2: ( ( rule__Different__Group__0 ) )
            // InternalLegoLang.g:1219:3: ( rule__Different__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDifferentAccess().getGroup()); 
            }
            // InternalLegoLang.g:1220:3: ( rule__Different__Group__0 )
            // InternalLegoLang.g:1220:4: rule__Different__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Different__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDifferentAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDifferent"


    // $ANTLR start "entryRuleLTorEqual"
    // InternalLegoLang.g:1229:1: entryRuleLTorEqual : ruleLTorEqual EOF ;
    public final void entryRuleLTorEqual() throws RecognitionException {
        try {
            // InternalLegoLang.g:1230:1: ( ruleLTorEqual EOF )
            // InternalLegoLang.g:1231:1: ruleLTorEqual EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTorEqualRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLTorEqual();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTorEqualRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLTorEqual"


    // $ANTLR start "ruleLTorEqual"
    // InternalLegoLang.g:1238:1: ruleLTorEqual : ( ( rule__LTorEqual__Group__0 ) ) ;
    public final void ruleLTorEqual() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1242:2: ( ( ( rule__LTorEqual__Group__0 ) ) )
            // InternalLegoLang.g:1243:2: ( ( rule__LTorEqual__Group__0 ) )
            {
            // InternalLegoLang.g:1243:2: ( ( rule__LTorEqual__Group__0 ) )
            // InternalLegoLang.g:1244:3: ( rule__LTorEqual__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTorEqualAccess().getGroup()); 
            }
            // InternalLegoLang.g:1245:3: ( rule__LTorEqual__Group__0 )
            // InternalLegoLang.g:1245:4: rule__LTorEqual__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LTorEqual__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTorEqualAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLTorEqual"


    // $ANTLR start "entryRuleGTorEqual"
    // InternalLegoLang.g:1254:1: entryRuleGTorEqual : ruleGTorEqual EOF ;
    public final void entryRuleGTorEqual() throws RecognitionException {
        try {
            // InternalLegoLang.g:1255:1: ( ruleGTorEqual EOF )
            // InternalLegoLang.g:1256:1: ruleGTorEqual EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTorEqualRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleGTorEqual();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTorEqualRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGTorEqual"


    // $ANTLR start "ruleGTorEqual"
    // InternalLegoLang.g:1263:1: ruleGTorEqual : ( ( rule__GTorEqual__Group__0 ) ) ;
    public final void ruleGTorEqual() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1267:2: ( ( ( rule__GTorEqual__Group__0 ) ) )
            // InternalLegoLang.g:1268:2: ( ( rule__GTorEqual__Group__0 ) )
            {
            // InternalLegoLang.g:1268:2: ( ( rule__GTorEqual__Group__0 ) )
            // InternalLegoLang.g:1269:3: ( rule__GTorEqual__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTorEqualAccess().getGroup()); 
            }
            // InternalLegoLang.g:1270:3: ( rule__GTorEqual__Group__0 )
            // InternalLegoLang.g:1270:4: rule__GTorEqual__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__GTorEqual__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTorEqualAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGTorEqual"


    // $ANTLR start "entryRuleAssignement"
    // InternalLegoLang.g:1279:1: entryRuleAssignement : ruleAssignement EOF ;
    public final void entryRuleAssignement() throws RecognitionException {
        try {
            // InternalLegoLang.g:1280:1: ( ruleAssignement EOF )
            // InternalLegoLang.g:1281:1: ruleAssignement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAssignement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAssignement"


    // $ANTLR start "ruleAssignement"
    // InternalLegoLang.g:1288:1: ruleAssignement : ( ( rule__Assignement__Group__0 ) ) ;
    public final void ruleAssignement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1292:2: ( ( ( rule__Assignement__Group__0 ) ) )
            // InternalLegoLang.g:1293:2: ( ( rule__Assignement__Group__0 ) )
            {
            // InternalLegoLang.g:1293:2: ( ( rule__Assignement__Group__0 ) )
            // InternalLegoLang.g:1294:3: ( rule__Assignement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignementAccess().getGroup()); 
            }
            // InternalLegoLang.g:1295:3: ( rule__Assignement__Group__0 )
            // InternalLegoLang.g:1295:4: rule__Assignement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Assignement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAssignement"


    // $ANTLR start "entryRulePlusEqual"
    // InternalLegoLang.g:1304:1: entryRulePlusEqual : rulePlusEqual EOF ;
    public final void entryRulePlusEqual() throws RecognitionException {
        try {
            // InternalLegoLang.g:1305:1: ( rulePlusEqual EOF )
            // InternalLegoLang.g:1306:1: rulePlusEqual EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusEqualRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePlusEqual();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusEqualRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePlusEqual"


    // $ANTLR start "rulePlusEqual"
    // InternalLegoLang.g:1313:1: rulePlusEqual : ( ( rule__PlusEqual__Group__0 ) ) ;
    public final void rulePlusEqual() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1317:2: ( ( ( rule__PlusEqual__Group__0 ) ) )
            // InternalLegoLang.g:1318:2: ( ( rule__PlusEqual__Group__0 ) )
            {
            // InternalLegoLang.g:1318:2: ( ( rule__PlusEqual__Group__0 ) )
            // InternalLegoLang.g:1319:3: ( rule__PlusEqual__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusEqualAccess().getGroup()); 
            }
            // InternalLegoLang.g:1320:3: ( rule__PlusEqual__Group__0 )
            // InternalLegoLang.g:1320:4: rule__PlusEqual__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PlusEqual__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusEqualAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePlusEqual"


    // $ANTLR start "entryRuleMinusEqual"
    // InternalLegoLang.g:1329:1: entryRuleMinusEqual : ruleMinusEqual EOF ;
    public final void entryRuleMinusEqual() throws RecognitionException {
        try {
            // InternalLegoLang.g:1330:1: ( ruleMinusEqual EOF )
            // InternalLegoLang.g:1331:1: ruleMinusEqual EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMinusEqualRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleMinusEqual();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMinusEqualRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMinusEqual"


    // $ANTLR start "ruleMinusEqual"
    // InternalLegoLang.g:1338:1: ruleMinusEqual : ( ( rule__MinusEqual__Group__0 ) ) ;
    public final void ruleMinusEqual() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1342:2: ( ( ( rule__MinusEqual__Group__0 ) ) )
            // InternalLegoLang.g:1343:2: ( ( rule__MinusEqual__Group__0 ) )
            {
            // InternalLegoLang.g:1343:2: ( ( rule__MinusEqual__Group__0 ) )
            // InternalLegoLang.g:1344:3: ( rule__MinusEqual__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMinusEqualAccess().getGroup()); 
            }
            // InternalLegoLang.g:1345:3: ( rule__MinusEqual__Group__0 )
            // InternalLegoLang.g:1345:4: rule__MinusEqual__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MinusEqual__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMinusEqualAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMinusEqual"


    // $ANTLR start "entryRuleEBoolean"
    // InternalLegoLang.g:1354:1: entryRuleEBoolean : ruleEBoolean EOF ;
    public final void entryRuleEBoolean() throws RecognitionException {
        try {
            // InternalLegoLang.g:1355:1: ( ruleEBoolean EOF )
            // InternalLegoLang.g:1356:1: ruleEBoolean EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEBooleanRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleEBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEBooleanRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEBoolean"


    // $ANTLR start "ruleEBoolean"
    // InternalLegoLang.g:1363:1: ruleEBoolean : ( ( rule__EBoolean__Alternatives ) ) ;
    public final void ruleEBoolean() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1367:2: ( ( ( rule__EBoolean__Alternatives ) ) )
            // InternalLegoLang.g:1368:2: ( ( rule__EBoolean__Alternatives ) )
            {
            // InternalLegoLang.g:1368:2: ( ( rule__EBoolean__Alternatives ) )
            // InternalLegoLang.g:1369:3: ( rule__EBoolean__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEBooleanAccess().getAlternatives()); 
            }
            // InternalLegoLang.g:1370:3: ( rule__EBoolean__Alternatives )
            // InternalLegoLang.g:1370:4: rule__EBoolean__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EBoolean__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEBooleanAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEBoolean"


    // $ANTLR start "entryRuleUnInteger"
    // InternalLegoLang.g:1379:1: entryRuleUnInteger : ruleUnInteger EOF ;
    public final void entryRuleUnInteger() throws RecognitionException {
        try {
            // InternalLegoLang.g:1380:1: ( ruleUnInteger EOF )
            // InternalLegoLang.g:1381:1: ruleUnInteger EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnIntegerRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnIntegerRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnInteger"


    // $ANTLR start "ruleUnInteger"
    // InternalLegoLang.g:1388:1: ruleUnInteger : ( ( rule__UnInteger__Group__0 ) ) ;
    public final void ruleUnInteger() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1392:2: ( ( ( rule__UnInteger__Group__0 ) ) )
            // InternalLegoLang.g:1393:2: ( ( rule__UnInteger__Group__0 ) )
            {
            // InternalLegoLang.g:1393:2: ( ( rule__UnInteger__Group__0 ) )
            // InternalLegoLang.g:1394:3: ( rule__UnInteger__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnIntegerAccess().getGroup()); 
            }
            // InternalLegoLang.g:1395:3: ( rule__UnInteger__Group__0 )
            // InternalLegoLang.g:1395:4: rule__UnInteger__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnInteger__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnIntegerAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnInteger"


    // $ANTLR start "entryRuleUnDouble"
    // InternalLegoLang.g:1404:1: entryRuleUnDouble : ruleUnDouble EOF ;
    public final void entryRuleUnDouble() throws RecognitionException {
        try {
            // InternalLegoLang.g:1405:1: ( ruleUnDouble EOF )
            // InternalLegoLang.g:1406:1: ruleUnDouble EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnDouble();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnDouble"


    // $ANTLR start "ruleUnDouble"
    // InternalLegoLang.g:1413:1: ruleUnDouble : ( ( rule__UnDouble__Group__0 ) ) ;
    public final void ruleUnDouble() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1417:2: ( ( ( rule__UnDouble__Group__0 ) ) )
            // InternalLegoLang.g:1418:2: ( ( rule__UnDouble__Group__0 ) )
            {
            // InternalLegoLang.g:1418:2: ( ( rule__UnDouble__Group__0 ) )
            // InternalLegoLang.g:1419:3: ( rule__UnDouble__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getGroup()); 
            }
            // InternalLegoLang.g:1420:3: ( rule__UnDouble__Group__0 )
            // InternalLegoLang.g:1420:4: rule__UnDouble__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnDouble__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnDouble"


    // $ANTLR start "entryRuleUnBoolean"
    // InternalLegoLang.g:1429:1: entryRuleUnBoolean : ruleUnBoolean EOF ;
    public final void entryRuleUnBoolean() throws RecognitionException {
        try {
            // InternalLegoLang.g:1430:1: ( ruleUnBoolean EOF )
            // InternalLegoLang.g:1431:1: ruleUnBoolean EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnBooleanRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnBooleanRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnBoolean"


    // $ANTLR start "ruleUnBoolean"
    // InternalLegoLang.g:1438:1: ruleUnBoolean : ( ( rule__UnBoolean__Group__0 ) ) ;
    public final void ruleUnBoolean() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1442:2: ( ( ( rule__UnBoolean__Group__0 ) ) )
            // InternalLegoLang.g:1443:2: ( ( rule__UnBoolean__Group__0 ) )
            {
            // InternalLegoLang.g:1443:2: ( ( rule__UnBoolean__Group__0 ) )
            // InternalLegoLang.g:1444:3: ( rule__UnBoolean__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnBooleanAccess().getGroup()); 
            }
            // InternalLegoLang.g:1445:3: ( rule__UnBoolean__Group__0 )
            // InternalLegoLang.g:1445:4: rule__UnBoolean__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnBoolean__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnBooleanAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnBoolean"


    // $ANTLR start "entryRuleUnString"
    // InternalLegoLang.g:1454:1: entryRuleUnString : ruleUnString EOF ;
    public final void entryRuleUnString() throws RecognitionException {
        try {
            // InternalLegoLang.g:1455:1: ( ruleUnString EOF )
            // InternalLegoLang.g:1456:1: ruleUnString EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnStringRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnStringRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnString"


    // $ANTLR start "ruleUnString"
    // InternalLegoLang.g:1463:1: ruleUnString : ( ( rule__UnString__Group__0 ) ) ;
    public final void ruleUnString() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1467:2: ( ( ( rule__UnString__Group__0 ) ) )
            // InternalLegoLang.g:1468:2: ( ( rule__UnString__Group__0 ) )
            {
            // InternalLegoLang.g:1468:2: ( ( rule__UnString__Group__0 ) )
            // InternalLegoLang.g:1469:3: ( rule__UnString__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnStringAccess().getGroup()); 
            }
            // InternalLegoLang.g:1470:3: ( rule__UnString__Group__0 )
            // InternalLegoLang.g:1470:4: rule__UnString__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnString__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnStringAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnString"


    // $ANTLR start "entryRuleUnColor"
    // InternalLegoLang.g:1479:1: entryRuleUnColor : ruleUnColor EOF ;
    public final void entryRuleUnColor() throws RecognitionException {
        try {
            // InternalLegoLang.g:1480:1: ( ruleUnColor EOF )
            // InternalLegoLang.g:1481:1: ruleUnColor EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnColorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnColor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnColorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnColor"


    // $ANTLR start "ruleUnColor"
    // InternalLegoLang.g:1488:1: ruleUnColor : ( ( rule__UnColor__Group__0 ) ) ;
    public final void ruleUnColor() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1492:2: ( ( ( rule__UnColor__Group__0 ) ) )
            // InternalLegoLang.g:1493:2: ( ( rule__UnColor__Group__0 ) )
            {
            // InternalLegoLang.g:1493:2: ( ( rule__UnColor__Group__0 ) )
            // InternalLegoLang.g:1494:3: ( rule__UnColor__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnColorAccess().getGroup()); 
            }
            // InternalLegoLang.g:1495:3: ( rule__UnColor__Group__0 )
            // InternalLegoLang.g:1495:4: rule__UnColor__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnColor__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnColorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnColor"


    // $ANTLR start "entryRuleTheDouble"
    // InternalLegoLang.g:1504:1: entryRuleTheDouble : ruleTheDouble EOF ;
    public final void entryRuleTheDouble() throws RecognitionException {
        try {
            // InternalLegoLang.g:1505:1: ( ruleTheDouble EOF )
            // InternalLegoLang.g:1506:1: ruleTheDouble EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheDoubleRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTheDouble();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheDoubleRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTheDouble"


    // $ANTLR start "ruleTheDouble"
    // InternalLegoLang.g:1513:1: ruleTheDouble : ( ( rule__TheDouble__Group__0 ) ) ;
    public final void ruleTheDouble() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1517:2: ( ( ( rule__TheDouble__Group__0 ) ) )
            // InternalLegoLang.g:1518:2: ( ( rule__TheDouble__Group__0 ) )
            {
            // InternalLegoLang.g:1518:2: ( ( rule__TheDouble__Group__0 ) )
            // InternalLegoLang.g:1519:3: ( rule__TheDouble__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheDoubleAccess().getGroup()); 
            }
            // InternalLegoLang.g:1520:3: ( rule__TheDouble__Group__0 )
            // InternalLegoLang.g:1520:4: rule__TheDouble__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TheDouble__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheDoubleAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTheDouble"


    // $ANTLR start "entryRuleTheInt"
    // InternalLegoLang.g:1529:1: entryRuleTheInt : ruleTheInt EOF ;
    public final void entryRuleTheInt() throws RecognitionException {
        try {
            // InternalLegoLang.g:1530:1: ( ruleTheInt EOF )
            // InternalLegoLang.g:1531:1: ruleTheInt EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheIntRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTheInt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheIntRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTheInt"


    // $ANTLR start "ruleTheInt"
    // InternalLegoLang.g:1538:1: ruleTheInt : ( ( rule__TheInt__Group__0 ) ) ;
    public final void ruleTheInt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1542:2: ( ( ( rule__TheInt__Group__0 ) ) )
            // InternalLegoLang.g:1543:2: ( ( rule__TheInt__Group__0 ) )
            {
            // InternalLegoLang.g:1543:2: ( ( rule__TheInt__Group__0 ) )
            // InternalLegoLang.g:1544:3: ( rule__TheInt__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheIntAccess().getGroup()); 
            }
            // InternalLegoLang.g:1545:3: ( rule__TheInt__Group__0 )
            // InternalLegoLang.g:1545:4: rule__TheInt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TheInt__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheIntAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTheInt"


    // $ANTLR start "entryRuleTheBoolean"
    // InternalLegoLang.g:1554:1: entryRuleTheBoolean : ruleTheBoolean EOF ;
    public final void entryRuleTheBoolean() throws RecognitionException {
        try {
            // InternalLegoLang.g:1555:1: ( ruleTheBoolean EOF )
            // InternalLegoLang.g:1556:1: ruleTheBoolean EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheBooleanRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTheBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheBooleanRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTheBoolean"


    // $ANTLR start "ruleTheBoolean"
    // InternalLegoLang.g:1563:1: ruleTheBoolean : ( ( rule__TheBoolean__Group__0 ) ) ;
    public final void ruleTheBoolean() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1567:2: ( ( ( rule__TheBoolean__Group__0 ) ) )
            // InternalLegoLang.g:1568:2: ( ( rule__TheBoolean__Group__0 ) )
            {
            // InternalLegoLang.g:1568:2: ( ( rule__TheBoolean__Group__0 ) )
            // InternalLegoLang.g:1569:3: ( rule__TheBoolean__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheBooleanAccess().getGroup()); 
            }
            // InternalLegoLang.g:1570:3: ( rule__TheBoolean__Group__0 )
            // InternalLegoLang.g:1570:4: rule__TheBoolean__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TheBoolean__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheBooleanAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTheBoolean"


    // $ANTLR start "entryRuleTheString"
    // InternalLegoLang.g:1579:1: entryRuleTheString : ruleTheString EOF ;
    public final void entryRuleTheString() throws RecognitionException {
        try {
            // InternalLegoLang.g:1580:1: ( ruleTheString EOF )
            // InternalLegoLang.g:1581:1: ruleTheString EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheStringRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTheString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheStringRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTheString"


    // $ANTLR start "ruleTheString"
    // InternalLegoLang.g:1588:1: ruleTheString : ( ( rule__TheString__Group__0 ) ) ;
    public final void ruleTheString() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1592:2: ( ( ( rule__TheString__Group__0 ) ) )
            // InternalLegoLang.g:1593:2: ( ( rule__TheString__Group__0 ) )
            {
            // InternalLegoLang.g:1593:2: ( ( rule__TheString__Group__0 ) )
            // InternalLegoLang.g:1594:3: ( rule__TheString__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheStringAccess().getGroup()); 
            }
            // InternalLegoLang.g:1595:3: ( rule__TheString__Group__0 )
            // InternalLegoLang.g:1595:4: rule__TheString__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TheString__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheStringAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTheString"


    // $ANTLR start "entryRuleTheColor"
    // InternalLegoLang.g:1604:1: entryRuleTheColor : ruleTheColor EOF ;
    public final void entryRuleTheColor() throws RecognitionException {
        try {
            // InternalLegoLang.g:1605:1: ( ruleTheColor EOF )
            // InternalLegoLang.g:1606:1: ruleTheColor EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheColorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTheColor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheColorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTheColor"


    // $ANTLR start "ruleTheColor"
    // InternalLegoLang.g:1613:1: ruleTheColor : ( ( rule__TheColor__Group__0 ) ) ;
    public final void ruleTheColor() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1617:2: ( ( ( rule__TheColor__Group__0 ) ) )
            // InternalLegoLang.g:1618:2: ( ( rule__TheColor__Group__0 ) )
            {
            // InternalLegoLang.g:1618:2: ( ( rule__TheColor__Group__0 ) )
            // InternalLegoLang.g:1619:3: ( rule__TheColor__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheColorAccess().getGroup()); 
            }
            // InternalLegoLang.g:1620:3: ( rule__TheColor__Group__0 )
            // InternalLegoLang.g:1620:4: rule__TheColor__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TheColor__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheColorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTheColor"


    // $ANTLR start "entryRuleFQN"
    // InternalLegoLang.g:1629:1: entryRuleFQN : ruleFQN EOF ;
    public final void entryRuleFQN() throws RecognitionException {
        try {
            // InternalLegoLang.g:1630:1: ( ruleFQN EOF )
            // InternalLegoLang.g:1631:1: ruleFQN EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFQNRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFQN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFQNRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFQN"


    // $ANTLR start "ruleFQN"
    // InternalLegoLang.g:1638:1: ruleFQN : ( ( rule__FQN__Group__0 ) ) ;
    public final void ruleFQN() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1642:2: ( ( ( rule__FQN__Group__0 ) ) )
            // InternalLegoLang.g:1643:2: ( ( rule__FQN__Group__0 ) )
            {
            // InternalLegoLang.g:1643:2: ( ( rule__FQN__Group__0 ) )
            // InternalLegoLang.g:1644:3: ( rule__FQN__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFQNAccess().getGroup()); 
            }
            // InternalLegoLang.g:1645:3: ( rule__FQN__Group__0 )
            // InternalLegoLang.g:1645:4: rule__FQN__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FQN__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFQNAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFQN"


    // $ANTLR start "entryRuleEInt"
    // InternalLegoLang.g:1654:1: entryRuleEInt : ruleEInt EOF ;
    public final void entryRuleEInt() throws RecognitionException {
        try {
            // InternalLegoLang.g:1655:1: ( ruleEInt EOF )
            // InternalLegoLang.g:1656:1: ruleEInt EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEIntRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleEInt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEIntRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEInt"


    // $ANTLR start "ruleEInt"
    // InternalLegoLang.g:1663:1: ruleEInt : ( ( rule__EInt__Group__0 ) ) ;
    public final void ruleEInt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1667:2: ( ( ( rule__EInt__Group__0 ) ) )
            // InternalLegoLang.g:1668:2: ( ( rule__EInt__Group__0 ) )
            {
            // InternalLegoLang.g:1668:2: ( ( rule__EInt__Group__0 ) )
            // InternalLegoLang.g:1669:3: ( rule__EInt__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEIntAccess().getGroup()); 
            }
            // InternalLegoLang.g:1670:3: ( rule__EInt__Group__0 )
            // InternalLegoLang.g:1670:4: rule__EInt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__EInt__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEIntAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEInt"


    // $ANTLR start "ruleColors"
    // InternalLegoLang.g:1679:1: ruleColors : ( ( rule__Colors__Alternatives ) ) ;
    public final void ruleColors() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1683:1: ( ( ( rule__Colors__Alternatives ) ) )
            // InternalLegoLang.g:1684:2: ( ( rule__Colors__Alternatives ) )
            {
            // InternalLegoLang.g:1684:2: ( ( rule__Colors__Alternatives ) )
            // InternalLegoLang.g:1685:3: ( rule__Colors__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorsAccess().getAlternatives()); 
            }
            // InternalLegoLang.g:1686:3: ( rule__Colors__Alternatives )
            // InternalLegoLang.g:1686:4: rule__Colors__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Colors__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColors"


    // $ANTLR start "rule__Statement__Alternatives"
    // InternalLegoLang.g:1694:1: rule__Statement__Alternatives : ( ( ruleWhileLoop ) | ( ruleVariable ) | ( ruleExpression ) | ( ruleConditionEtat ) | ( ruleMethodePrint ) | ( ruleCar ) | ( ruleSensor ) | ( ruleEngine ) | ( rulePause ) );
    public final void rule__Statement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1698:1: ( ( ruleWhileLoop ) | ( ruleVariable ) | ( ruleExpression ) | ( ruleConditionEtat ) | ( ruleMethodePrint ) | ( ruleCar ) | ( ruleSensor ) | ( ruleEngine ) | ( rulePause ) )
            int alt1=9;
            switch ( input.LA(1) ) {
            case 52:
                {
                alt1=1;
                }
                break;
            case 41:
            case 67:
            case 68:
            case 70:
            case 71:
            case 72:
                {
                alt1=2;
                }
                break;
            case RULE_ID:
            case RULE_INT:
            case RULE_STRING:
            case 11:
            case 12:
            case 13:
            case 14:
            case 31:
            case 33:
            case 36:
            case 40:
            case 55:
                {
                alt1=3;
                }
                break;
            case 50:
                {
                alt1=4;
                }
                break;
            case 53:
                {
                alt1=5;
                }
                break;
            case 30:
                {
                alt1=6;
                }
                break;
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
                {
                alt1=7;
                }
                break;
            case 21:
            case 23:
            case 24:
                {
                alt1=8;
                }
                break;
            case 19:
                {
                alt1=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;
            }

            switch (alt1) {
                case 1 :
                    // InternalLegoLang.g:1699:2: ( ruleWhileLoop )
                    {
                    // InternalLegoLang.g:1699:2: ( ruleWhileLoop )
                    // InternalLegoLang.g:1700:3: ruleWhileLoop
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getWhileLoopParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleWhileLoop();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getWhileLoopParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLegoLang.g:1705:2: ( ruleVariable )
                    {
                    // InternalLegoLang.g:1705:2: ( ruleVariable )
                    // InternalLegoLang.g:1706:3: ruleVariable
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getVariableParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleVariable();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getVariableParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLegoLang.g:1711:2: ( ruleExpression )
                    {
                    // InternalLegoLang.g:1711:2: ( ruleExpression )
                    // InternalLegoLang.g:1712:3: ruleExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getExpressionParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getExpressionParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalLegoLang.g:1717:2: ( ruleConditionEtat )
                    {
                    // InternalLegoLang.g:1717:2: ( ruleConditionEtat )
                    // InternalLegoLang.g:1718:3: ruleConditionEtat
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getConditionEtatParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleConditionEtat();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getConditionEtatParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalLegoLang.g:1723:2: ( ruleMethodePrint )
                    {
                    // InternalLegoLang.g:1723:2: ( ruleMethodePrint )
                    // InternalLegoLang.g:1724:3: ruleMethodePrint
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getMethodePrintParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleMethodePrint();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getMethodePrintParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalLegoLang.g:1729:2: ( ruleCar )
                    {
                    // InternalLegoLang.g:1729:2: ( ruleCar )
                    // InternalLegoLang.g:1730:3: ruleCar
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getCarParserRuleCall_5()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleCar();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getCarParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalLegoLang.g:1735:2: ( ruleSensor )
                    {
                    // InternalLegoLang.g:1735:2: ( ruleSensor )
                    // InternalLegoLang.g:1736:3: ruleSensor
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getSensorParserRuleCall_6()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSensor();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getSensorParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalLegoLang.g:1741:2: ( ruleEngine )
                    {
                    // InternalLegoLang.g:1741:2: ( ruleEngine )
                    // InternalLegoLang.g:1742:3: ruleEngine
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getEngineParserRuleCall_7()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleEngine();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getEngineParserRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalLegoLang.g:1747:2: ( rulePause )
                    {
                    // InternalLegoLang.g:1747:2: ( rulePause )
                    // InternalLegoLang.g:1748:3: rulePause
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getPauseParserRuleCall_8()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulePause();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getPauseParserRuleCall_8()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__Alternatives"


    // $ANTLR start "rule__Expression__Alternatives"
    // InternalLegoLang.g:1757:1: rule__Expression__Alternatives : ( ( ruleVariableRef ) | ( ruleBinaryOperation ) | ( ruleTheString ) | ( ruleTheColor ) | ( ruleTheDouble ) | ( ruleTheInt ) | ( ruleTheBoolean ) | ( ruleEngineOperation ) | ( ruleBreakMotor ) | ( ruleSensorOperation ) | ( ruleBooleanExpression ) );
    public final void rule__Expression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1761:1: ( ( ruleVariableRef ) | ( ruleBinaryOperation ) | ( ruleTheString ) | ( ruleTheColor ) | ( ruleTheDouble ) | ( ruleTheInt ) | ( ruleTheBoolean ) | ( ruleEngineOperation ) | ( ruleBreakMotor ) | ( ruleSensorOperation ) | ( ruleBooleanExpression ) )
            int alt2=11;
            alt2 = dfa2.predict(input);
            switch (alt2) {
                case 1 :
                    // InternalLegoLang.g:1762:2: ( ruleVariableRef )
                    {
                    // InternalLegoLang.g:1762:2: ( ruleVariableRef )
                    // InternalLegoLang.g:1763:3: ruleVariableRef
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getVariableRefParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleVariableRef();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getVariableRefParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLegoLang.g:1768:2: ( ruleBinaryOperation )
                    {
                    // InternalLegoLang.g:1768:2: ( ruleBinaryOperation )
                    // InternalLegoLang.g:1769:3: ruleBinaryOperation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getBinaryOperationParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleBinaryOperation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getBinaryOperationParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLegoLang.g:1774:2: ( ruleTheString )
                    {
                    // InternalLegoLang.g:1774:2: ( ruleTheString )
                    // InternalLegoLang.g:1775:3: ruleTheString
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getTheStringParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleTheString();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getTheStringParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalLegoLang.g:1780:2: ( ruleTheColor )
                    {
                    // InternalLegoLang.g:1780:2: ( ruleTheColor )
                    // InternalLegoLang.g:1781:3: ruleTheColor
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getTheColorParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleTheColor();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getTheColorParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalLegoLang.g:1786:2: ( ruleTheDouble )
                    {
                    // InternalLegoLang.g:1786:2: ( ruleTheDouble )
                    // InternalLegoLang.g:1787:3: ruleTheDouble
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getTheDoubleParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleTheDouble();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getTheDoubleParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalLegoLang.g:1792:2: ( ruleTheInt )
                    {
                    // InternalLegoLang.g:1792:2: ( ruleTheInt )
                    // InternalLegoLang.g:1793:3: ruleTheInt
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getTheIntParserRuleCall_5()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleTheInt();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getTheIntParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalLegoLang.g:1798:2: ( ruleTheBoolean )
                    {
                    // InternalLegoLang.g:1798:2: ( ruleTheBoolean )
                    // InternalLegoLang.g:1799:3: ruleTheBoolean
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getTheBooleanParserRuleCall_6()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleTheBoolean();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getTheBooleanParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalLegoLang.g:1804:2: ( ruleEngineOperation )
                    {
                    // InternalLegoLang.g:1804:2: ( ruleEngineOperation )
                    // InternalLegoLang.g:1805:3: ruleEngineOperation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getEngineOperationParserRuleCall_7()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleEngineOperation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getEngineOperationParserRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalLegoLang.g:1810:2: ( ruleBreakMotor )
                    {
                    // InternalLegoLang.g:1810:2: ( ruleBreakMotor )
                    // InternalLegoLang.g:1811:3: ruleBreakMotor
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getBreakMotorParserRuleCall_8()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleBreakMotor();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getBreakMotorParserRuleCall_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalLegoLang.g:1816:2: ( ruleSensorOperation )
                    {
                    // InternalLegoLang.g:1816:2: ( ruleSensorOperation )
                    // InternalLegoLang.g:1817:3: ruleSensorOperation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getSensorOperationParserRuleCall_9()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSensorOperation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getSensorOperationParserRuleCall_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalLegoLang.g:1822:2: ( ruleBooleanExpression )
                    {
                    // InternalLegoLang.g:1822:2: ( ruleBooleanExpression )
                    // InternalLegoLang.g:1823:3: ruleBooleanExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getBooleanExpressionParserRuleCall_10()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleBooleanExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getBooleanExpressionParserRuleCall_10()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Alternatives"


    // $ANTLR start "rule__BinaryOperation__Alternatives"
    // InternalLegoLang.g:1832:1: rule__BinaryOperation__Alternatives : ( ( ruleSubstraction ) | ( ruleComparaison ) | ( ruleAssignement ) | ( ruleDivision ) | ( ruleMultiplication ) | ( ruleAddition ) | ( ruleMinusEqual ) | ( rulePlusEqual ) );
    public final void rule__BinaryOperation__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1836:1: ( ( ruleSubstraction ) | ( ruleComparaison ) | ( ruleAssignement ) | ( ruleDivision ) | ( ruleMultiplication ) | ( ruleAddition ) | ( ruleMinusEqual ) | ( rulePlusEqual ) )
            int alt3=8;
            alt3 = dfa3.predict(input);
            switch (alt3) {
                case 1 :
                    // InternalLegoLang.g:1837:2: ( ruleSubstraction )
                    {
                    // InternalLegoLang.g:1837:2: ( ruleSubstraction )
                    // InternalLegoLang.g:1838:3: ruleSubstraction
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBinaryOperationAccess().getSubstractionParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSubstraction();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBinaryOperationAccess().getSubstractionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLegoLang.g:1843:2: ( ruleComparaison )
                    {
                    // InternalLegoLang.g:1843:2: ( ruleComparaison )
                    // InternalLegoLang.g:1844:3: ruleComparaison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBinaryOperationAccess().getComparaisonParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleComparaison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBinaryOperationAccess().getComparaisonParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLegoLang.g:1849:2: ( ruleAssignement )
                    {
                    // InternalLegoLang.g:1849:2: ( ruleAssignement )
                    // InternalLegoLang.g:1850:3: ruleAssignement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBinaryOperationAccess().getAssignementParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleAssignement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBinaryOperationAccess().getAssignementParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalLegoLang.g:1855:2: ( ruleDivision )
                    {
                    // InternalLegoLang.g:1855:2: ( ruleDivision )
                    // InternalLegoLang.g:1856:3: ruleDivision
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBinaryOperationAccess().getDivisionParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleDivision();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBinaryOperationAccess().getDivisionParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalLegoLang.g:1861:2: ( ruleMultiplication )
                    {
                    // InternalLegoLang.g:1861:2: ( ruleMultiplication )
                    // InternalLegoLang.g:1862:3: ruleMultiplication
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBinaryOperationAccess().getMultiplicationParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleMultiplication();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBinaryOperationAccess().getMultiplicationParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalLegoLang.g:1867:2: ( ruleAddition )
                    {
                    // InternalLegoLang.g:1867:2: ( ruleAddition )
                    // InternalLegoLang.g:1868:3: ruleAddition
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBinaryOperationAccess().getAdditionParserRuleCall_5()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleAddition();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBinaryOperationAccess().getAdditionParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalLegoLang.g:1873:2: ( ruleMinusEqual )
                    {
                    // InternalLegoLang.g:1873:2: ( ruleMinusEqual )
                    // InternalLegoLang.g:1874:3: ruleMinusEqual
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBinaryOperationAccess().getMinusEqualParserRuleCall_6()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleMinusEqual();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBinaryOperationAccess().getMinusEqualParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalLegoLang.g:1879:2: ( rulePlusEqual )
                    {
                    // InternalLegoLang.g:1879:2: ( rulePlusEqual )
                    // InternalLegoLang.g:1880:3: rulePlusEqual
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBinaryOperationAccess().getPlusEqualParserRuleCall_7()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulePlusEqual();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBinaryOperationAccess().getPlusEqualParserRuleCall_7()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BinaryOperation__Alternatives"


    // $ANTLR start "rule__Variable__Alternatives"
    // InternalLegoLang.g:1889:1: rule__Variable__Alternatives : ( ( ruleUnInteger ) | ( ruleUnString ) | ( ruleUnBoolean ) | ( ruleUnDouble ) | ( ruleUnColor ) );
    public final void rule__Variable__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1893:1: ( ( ruleUnInteger ) | ( ruleUnString ) | ( ruleUnBoolean ) | ( ruleUnDouble ) | ( ruleUnColor ) )
            int alt4=5;
            switch ( input.LA(1) ) {
            case 72:
                {
                switch ( input.LA(2) ) {
                case 41:
                    {
                    alt4=5;
                    }
                    break;
                case 70:
                    {
                    alt4=3;
                    }
                    break;
                case 71:
                    {
                    alt4=2;
                    }
                    break;
                case 68:
                    {
                    alt4=4;
                    }
                    break;
                case 67:
                    {
                    alt4=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 4, 1, input);

                    throw nvae;
                }

                }
                break;
            case 67:
                {
                alt4=1;
                }
                break;
            case 71:
                {
                alt4=2;
                }
                break;
            case 70:
                {
                alt4=3;
                }
                break;
            case 68:
                {
                alt4=4;
                }
                break;
            case 41:
                {
                alt4=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }

            switch (alt4) {
                case 1 :
                    // InternalLegoLang.g:1894:2: ( ruleUnInteger )
                    {
                    // InternalLegoLang.g:1894:2: ( ruleUnInteger )
                    // InternalLegoLang.g:1895:3: ruleUnInteger
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVariableAccess().getUnIntegerParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleUnInteger();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVariableAccess().getUnIntegerParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLegoLang.g:1900:2: ( ruleUnString )
                    {
                    // InternalLegoLang.g:1900:2: ( ruleUnString )
                    // InternalLegoLang.g:1901:3: ruleUnString
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVariableAccess().getUnStringParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleUnString();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVariableAccess().getUnStringParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLegoLang.g:1906:2: ( ruleUnBoolean )
                    {
                    // InternalLegoLang.g:1906:2: ( ruleUnBoolean )
                    // InternalLegoLang.g:1907:3: ruleUnBoolean
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVariableAccess().getUnBooleanParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleUnBoolean();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVariableAccess().getUnBooleanParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalLegoLang.g:1912:2: ( ruleUnDouble )
                    {
                    // InternalLegoLang.g:1912:2: ( ruleUnDouble )
                    // InternalLegoLang.g:1913:3: ruleUnDouble
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVariableAccess().getUnDoubleParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleUnDouble();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVariableAccess().getUnDoubleParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalLegoLang.g:1918:2: ( ruleUnColor )
                    {
                    // InternalLegoLang.g:1918:2: ( ruleUnColor )
                    // InternalLegoLang.g:1919:3: ruleUnColor
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVariableAccess().getUnColorParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleUnColor();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVariableAccess().getUnColorParserRuleCall_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable__Alternatives"


    // $ANTLR start "rule__Comparaison__Alternatives"
    // InternalLegoLang.g:1928:1: rule__Comparaison__Alternatives : ( ( ruleGT ) | ( ruleEqual ) | ( ruleLT ) | ( ruleDifferent ) | ( ruleGTorEqual ) | ( ruleLTorEqual ) );
    public final void rule__Comparaison__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1932:1: ( ( ruleGT ) | ( ruleEqual ) | ( ruleLT ) | ( ruleDifferent ) | ( ruleGTorEqual ) | ( ruleLTorEqual ) )
            int alt5=6;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==33) ) {
                int LA5_1 = input.LA(2);

                if ( (synpred30_InternalLegoLang()) ) {
                    alt5=1;
                }
                else if ( (synpred31_InternalLegoLang()) ) {
                    alt5=2;
                }
                else if ( (synpred32_InternalLegoLang()) ) {
                    alt5=3;
                }
                else if ( (synpred33_InternalLegoLang()) ) {
                    alt5=4;
                }
                else if ( (synpred34_InternalLegoLang()) ) {
                    alt5=5;
                }
                else if ( (true) ) {
                    alt5=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 5, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // InternalLegoLang.g:1933:2: ( ruleGT )
                    {
                    // InternalLegoLang.g:1933:2: ( ruleGT )
                    // InternalLegoLang.g:1934:3: ruleGT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparaisonAccess().getGTParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleGT();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparaisonAccess().getGTParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLegoLang.g:1939:2: ( ruleEqual )
                    {
                    // InternalLegoLang.g:1939:2: ( ruleEqual )
                    // InternalLegoLang.g:1940:3: ruleEqual
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparaisonAccess().getEqualParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleEqual();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparaisonAccess().getEqualParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLegoLang.g:1945:2: ( ruleLT )
                    {
                    // InternalLegoLang.g:1945:2: ( ruleLT )
                    // InternalLegoLang.g:1946:3: ruleLT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparaisonAccess().getLTParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleLT();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparaisonAccess().getLTParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalLegoLang.g:1951:2: ( ruleDifferent )
                    {
                    // InternalLegoLang.g:1951:2: ( ruleDifferent )
                    // InternalLegoLang.g:1952:3: ruleDifferent
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparaisonAccess().getDifferentParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleDifferent();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparaisonAccess().getDifferentParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalLegoLang.g:1957:2: ( ruleGTorEqual )
                    {
                    // InternalLegoLang.g:1957:2: ( ruleGTorEqual )
                    // InternalLegoLang.g:1958:3: ruleGTorEqual
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparaisonAccess().getGTorEqualParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleGTorEqual();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparaisonAccess().getGTorEqualParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalLegoLang.g:1963:2: ( ruleLTorEqual )
                    {
                    // InternalLegoLang.g:1963:2: ( ruleLTorEqual )
                    // InternalLegoLang.g:1964:3: ruleLTorEqual
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparaisonAccess().getLTorEqualParserRuleCall_5()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleLTorEqual();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparaisonAccess().getLTorEqualParserRuleCall_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparaison__Alternatives"


    // $ANTLR start "rule__Engine__Alternatives"
    // InternalLegoLang.g:1973:1: rule__Engine__Alternatives : ( ( ruleWheelEngine ) | ( ruleMotorizedArmEngine ) | ( rulePaintballLauncherEngine ) );
    public final void rule__Engine__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1977:1: ( ( ruleWheelEngine ) | ( ruleMotorizedArmEngine ) | ( rulePaintballLauncherEngine ) )
            int alt6=3;
            switch ( input.LA(1) ) {
            case 21:
                {
                alt6=1;
                }
                break;
            case 23:
                {
                alt6=2;
                }
                break;
            case 24:
                {
                alt6=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }

            switch (alt6) {
                case 1 :
                    // InternalLegoLang.g:1978:2: ( ruleWheelEngine )
                    {
                    // InternalLegoLang.g:1978:2: ( ruleWheelEngine )
                    // InternalLegoLang.g:1979:3: ruleWheelEngine
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEngineAccess().getWheelEngineParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleWheelEngine();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEngineAccess().getWheelEngineParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLegoLang.g:1984:2: ( ruleMotorizedArmEngine )
                    {
                    // InternalLegoLang.g:1984:2: ( ruleMotorizedArmEngine )
                    // InternalLegoLang.g:1985:3: ruleMotorizedArmEngine
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEngineAccess().getMotorizedArmEngineParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleMotorizedArmEngine();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEngineAccess().getMotorizedArmEngineParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLegoLang.g:1990:2: ( rulePaintballLauncherEngine )
                    {
                    // InternalLegoLang.g:1990:2: ( rulePaintballLauncherEngine )
                    // InternalLegoLang.g:1991:3: rulePaintballLauncherEngine
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEngineAccess().getPaintballLauncherEngineParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulePaintballLauncherEngine();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEngineAccess().getPaintballLauncherEngineParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Engine__Alternatives"


    // $ANTLR start "rule__Sensor__Alternatives"
    // InternalLegoLang.g:2000:1: rule__Sensor__Alternatives : ( ( ruleLaserSensor ) | ( ruleColorSensor ) | ( ruleUltraSonicSensor ) | ( ruleGyroSensor ) | ( ruleGPSSensor ) );
    public final void rule__Sensor__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2004:1: ( ( ruleLaserSensor ) | ( ruleColorSensor ) | ( ruleUltraSonicSensor ) | ( ruleGyroSensor ) | ( ruleGPSSensor ) )
            int alt7=5;
            switch ( input.LA(1) ) {
            case 26:
                {
                alt7=1;
                }
                break;
            case 25:
                {
                alt7=2;
                }
                break;
            case 29:
                {
                alt7=3;
                }
                break;
            case 28:
                {
                alt7=4;
                }
                break;
            case 27:
                {
                alt7=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }

            switch (alt7) {
                case 1 :
                    // InternalLegoLang.g:2005:2: ( ruleLaserSensor )
                    {
                    // InternalLegoLang.g:2005:2: ( ruleLaserSensor )
                    // InternalLegoLang.g:2006:3: ruleLaserSensor
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSensorAccess().getLaserSensorParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleLaserSensor();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSensorAccess().getLaserSensorParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLegoLang.g:2011:2: ( ruleColorSensor )
                    {
                    // InternalLegoLang.g:2011:2: ( ruleColorSensor )
                    // InternalLegoLang.g:2012:3: ruleColorSensor
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSensorAccess().getColorSensorParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleColorSensor();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSensorAccess().getColorSensorParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLegoLang.g:2017:2: ( ruleUltraSonicSensor )
                    {
                    // InternalLegoLang.g:2017:2: ( ruleUltraSonicSensor )
                    // InternalLegoLang.g:2018:3: ruleUltraSonicSensor
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSensorAccess().getUltraSonicSensorParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleUltraSonicSensor();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSensorAccess().getUltraSonicSensorParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalLegoLang.g:2023:2: ( ruleGyroSensor )
                    {
                    // InternalLegoLang.g:2023:2: ( ruleGyroSensor )
                    // InternalLegoLang.g:2024:3: ruleGyroSensor
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSensorAccess().getGyroSensorParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleGyroSensor();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSensorAccess().getGyroSensorParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalLegoLang.g:2029:2: ( ruleGPSSensor )
                    {
                    // InternalLegoLang.g:2029:2: ( ruleGPSSensor )
                    // InternalLegoLang.g:2030:3: ruleGPSSensor
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSensorAccess().getGPSSensorParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleGPSSensor();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSensorAccess().getGPSSensorParserRuleCall_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Sensor__Alternatives"


    // $ANTLR start "rule__EngineOperation__Alternatives"
    // InternalLegoLang.g:2039:1: rule__EngineOperation__Alternatives : ( ( ruleVitesseOperation ) | ( rulePositionOperation ) | ( ruleForceOperation ) );
    public final void rule__EngineOperation__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2043:1: ( ( ruleVitesseOperation ) | ( rulePositionOperation ) | ( ruleForceOperation ) )
            int alt8=3;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==31) ) {
                switch ( input.LA(2) ) {
                case 38:
                    {
                    alt8=2;
                    }
                    break;
                case 39:
                    {
                    alt8=3;
                    }
                    break;
                case 32:
                    {
                    alt8=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 8, 1, input);

                    throw nvae;
                }

            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalLegoLang.g:2044:2: ( ruleVitesseOperation )
                    {
                    // InternalLegoLang.g:2044:2: ( ruleVitesseOperation )
                    // InternalLegoLang.g:2045:3: ruleVitesseOperation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEngineOperationAccess().getVitesseOperationParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleVitesseOperation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEngineOperationAccess().getVitesseOperationParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLegoLang.g:2050:2: ( rulePositionOperation )
                    {
                    // InternalLegoLang.g:2050:2: ( rulePositionOperation )
                    // InternalLegoLang.g:2051:3: rulePositionOperation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEngineOperationAccess().getPositionOperationParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulePositionOperation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEngineOperationAccess().getPositionOperationParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLegoLang.g:2056:2: ( ruleForceOperation )
                    {
                    // InternalLegoLang.g:2056:2: ( ruleForceOperation )
                    // InternalLegoLang.g:2057:3: ruleForceOperation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEngineOperationAccess().getForceOperationParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleForceOperation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEngineOperationAccess().getForceOperationParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EngineOperation__Alternatives"


    // $ANTLR start "rule__SensorOperation__Alternatives"
    // InternalLegoLang.g:2066:1: rule__SensorOperation__Alternatives : ( ( ruleRangeOperation ) | ( ruleColorOperation ) | ( ruleIntensityOperation ) | ( ruleXGPSOperation ) | ( ruleYGPSOperation ) | ( ruleAngleOperation ) | ( ruleDistanceOperation ) );
    public final void rule__SensorOperation__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2070:1: ( ( ruleRangeOperation ) | ( ruleColorOperation ) | ( ruleIntensityOperation ) | ( ruleXGPSOperation ) | ( ruleYGPSOperation ) | ( ruleAngleOperation ) | ( ruleDistanceOperation ) )
            int alt9=7;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==40) ) {
                switch ( input.LA(2) ) {
                case 41:
                    {
                    alt9=2;
                    }
                    break;
                case 47:
                    {
                    alt9=7;
                    }
                    break;
                case 46:
                    {
                    alt9=6;
                    }
                    break;
                case 43:
                    {
                    alt9=1;
                    }
                    break;
                case 45:
                    {
                    alt9=5;
                    }
                    break;
                case 44:
                    {
                    alt9=4;
                    }
                    break;
                case 42:
                    {
                    alt9=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 9, 1, input);

                    throw nvae;
                }

            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalLegoLang.g:2071:2: ( ruleRangeOperation )
                    {
                    // InternalLegoLang.g:2071:2: ( ruleRangeOperation )
                    // InternalLegoLang.g:2072:3: ruleRangeOperation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSensorOperationAccess().getRangeOperationParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleRangeOperation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSensorOperationAccess().getRangeOperationParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLegoLang.g:2077:2: ( ruleColorOperation )
                    {
                    // InternalLegoLang.g:2077:2: ( ruleColorOperation )
                    // InternalLegoLang.g:2078:3: ruleColorOperation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSensorOperationAccess().getColorOperationParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleColorOperation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSensorOperationAccess().getColorOperationParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLegoLang.g:2083:2: ( ruleIntensityOperation )
                    {
                    // InternalLegoLang.g:2083:2: ( ruleIntensityOperation )
                    // InternalLegoLang.g:2084:3: ruleIntensityOperation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSensorOperationAccess().getIntensityOperationParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleIntensityOperation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSensorOperationAccess().getIntensityOperationParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalLegoLang.g:2089:2: ( ruleXGPSOperation )
                    {
                    // InternalLegoLang.g:2089:2: ( ruleXGPSOperation )
                    // InternalLegoLang.g:2090:3: ruleXGPSOperation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSensorOperationAccess().getXGPSOperationParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleXGPSOperation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSensorOperationAccess().getXGPSOperationParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalLegoLang.g:2095:2: ( ruleYGPSOperation )
                    {
                    // InternalLegoLang.g:2095:2: ( ruleYGPSOperation )
                    // InternalLegoLang.g:2096:3: ruleYGPSOperation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSensorOperationAccess().getYGPSOperationParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleYGPSOperation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSensorOperationAccess().getYGPSOperationParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalLegoLang.g:2101:2: ( ruleAngleOperation )
                    {
                    // InternalLegoLang.g:2101:2: ( ruleAngleOperation )
                    // InternalLegoLang.g:2102:3: ruleAngleOperation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSensorOperationAccess().getAngleOperationParserRuleCall_5()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleAngleOperation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSensorOperationAccess().getAngleOperationParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalLegoLang.g:2107:2: ( ruleDistanceOperation )
                    {
                    // InternalLegoLang.g:2107:2: ( ruleDistanceOperation )
                    // InternalLegoLang.g:2108:3: ruleDistanceOperation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSensorOperationAccess().getDistanceOperationParserRuleCall_6()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleDistanceOperation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSensorOperationAccess().getDistanceOperationParserRuleCall_6()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SensorOperation__Alternatives"


    // $ANTLR start "rule__BooleanExpression__Alternatives"
    // InternalLegoLang.g:2117:1: rule__BooleanExpression__Alternatives : ( ( ruleAnd ) | ( ruleOr ) );
    public final void rule__BooleanExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2121:1: ( ( ruleAnd ) | ( ruleOr ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==33) ) {
                int LA10_1 = input.LA(2);

                if ( (synpred49_InternalLegoLang()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalLegoLang.g:2122:2: ( ruleAnd )
                    {
                    // InternalLegoLang.g:2122:2: ( ruleAnd )
                    // InternalLegoLang.g:2123:3: ruleAnd
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanExpressionAccess().getAndParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleAnd();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanExpressionAccess().getAndParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLegoLang.g:2128:2: ( ruleOr )
                    {
                    // InternalLegoLang.g:2128:2: ( ruleOr )
                    // InternalLegoLang.g:2129:3: ruleOr
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanExpressionAccess().getOrParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleOr();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanExpressionAccess().getOrParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanExpression__Alternatives"


    // $ANTLR start "rule__EString__Alternatives"
    // InternalLegoLang.g:2138:1: rule__EString__Alternatives : ( ( ruleFQN ) | ( RULE_ID ) );
    public final void rule__EString__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2142:1: ( ( ruleFQN ) | ( RULE_ID ) )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==RULE_ID) ) {
                int LA11_1 = input.LA(2);

                if ( (synpred50_InternalLegoLang()) ) {
                    alt11=1;
                }
                else if ( (true) ) {
                    alt11=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 11, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalLegoLang.g:2143:2: ( ruleFQN )
                    {
                    // InternalLegoLang.g:2143:2: ( ruleFQN )
                    // InternalLegoLang.g:2144:3: ruleFQN
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEStringAccess().getFQNParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleFQN();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEStringAccess().getFQNParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLegoLang.g:2149:2: ( RULE_ID )
                    {
                    // InternalLegoLang.g:2149:2: ( RULE_ID )
                    // InternalLegoLang.g:2150:3: RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EString__Alternatives"


    // $ANTLR start "rule__EBoolean__Alternatives"
    // InternalLegoLang.g:2159:1: rule__EBoolean__Alternatives : ( ( 'true' ) | ( 'false' ) );
    public final void rule__EBoolean__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2163:1: ( ( 'true' ) | ( 'false' ) )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==11) ) {
                alt12=1;
            }
            else if ( (LA12_0==12) ) {
                alt12=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalLegoLang.g:2164:2: ( 'true' )
                    {
                    // InternalLegoLang.g:2164:2: ( 'true' )
                    // InternalLegoLang.g:2165:3: 'true'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); 
                    }
                    match(input,11,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLegoLang.g:2170:2: ( 'false' )
                    {
                    // InternalLegoLang.g:2170:2: ( 'false' )
                    // InternalLegoLang.g:2171:3: 'false'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); 
                    }
                    match(input,12,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EBoolean__Alternatives"


    // $ANTLR start "rule__Colors__Alternatives"
    // InternalLegoLang.g:2180:1: rule__Colors__Alternatives : ( ( ( 'black' ) ) | ( ( 'white' ) ) );
    public final void rule__Colors__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2184:1: ( ( ( 'black' ) ) | ( ( 'white' ) ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==13) ) {
                alt13=1;
            }
            else if ( (LA13_0==14) ) {
                alt13=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalLegoLang.g:2185:2: ( ( 'black' ) )
                    {
                    // InternalLegoLang.g:2185:2: ( ( 'black' ) )
                    // InternalLegoLang.g:2186:3: ( 'black' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColorsAccess().getBlackEnumLiteralDeclaration_0()); 
                    }
                    // InternalLegoLang.g:2187:3: ( 'black' )
                    // InternalLegoLang.g:2187:4: 'black'
                    {
                    match(input,13,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColorsAccess().getBlackEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLegoLang.g:2191:2: ( ( 'white' ) )
                    {
                    // InternalLegoLang.g:2191:2: ( ( 'white' ) )
                    // InternalLegoLang.g:2192:3: ( 'white' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColorsAccess().getWhiteEnumLiteralDeclaration_1()); 
                    }
                    // InternalLegoLang.g:2193:3: ( 'white' )
                    // InternalLegoLang.g:2193:4: 'white'
                    {
                    match(input,14,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColorsAccess().getWhiteEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Colors__Alternatives"


    // $ANTLR start "rule__Program__Group__0"
    // InternalLegoLang.g:2201:1: rule__Program__Group__0 : rule__Program__Group__0__Impl rule__Program__Group__1 ;
    public final void rule__Program__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2205:1: ( rule__Program__Group__0__Impl rule__Program__Group__1 )
            // InternalLegoLang.g:2206:2: rule__Program__Group__0__Impl rule__Program__Group__1
            {
            pushFollow(FOLLOW_3);
            rule__Program__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Program__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__0"


    // $ANTLR start "rule__Program__Group__0__Impl"
    // InternalLegoLang.g:2213:1: rule__Program__Group__0__Impl : ( () ) ;
    public final void rule__Program__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2217:1: ( ( () ) )
            // InternalLegoLang.g:2218:1: ( () )
            {
            // InternalLegoLang.g:2218:1: ( () )
            // InternalLegoLang.g:2219:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getProgramAction_0()); 
            }
            // InternalLegoLang.g:2220:2: ()
            // InternalLegoLang.g:2220:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getProgramAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__0__Impl"


    // $ANTLR start "rule__Program__Group__1"
    // InternalLegoLang.g:2228:1: rule__Program__Group__1 : rule__Program__Group__1__Impl rule__Program__Group__2 ;
    public final void rule__Program__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2232:1: ( rule__Program__Group__1__Impl rule__Program__Group__2 )
            // InternalLegoLang.g:2233:2: rule__Program__Group__1__Impl rule__Program__Group__2
            {
            pushFollow(FOLLOW_4);
            rule__Program__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Program__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__1"


    // $ANTLR start "rule__Program__Group__1__Impl"
    // InternalLegoLang.g:2240:1: rule__Program__Group__1__Impl : ( 'Program' ) ;
    public final void rule__Program__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2244:1: ( ( 'Program' ) )
            // InternalLegoLang.g:2245:1: ( 'Program' )
            {
            // InternalLegoLang.g:2245:1: ( 'Program' )
            // InternalLegoLang.g:2246:2: 'Program'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getProgramKeyword_1()); 
            }
            match(input,15,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getProgramKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__1__Impl"


    // $ANTLR start "rule__Program__Group__2"
    // InternalLegoLang.g:2255:1: rule__Program__Group__2 : rule__Program__Group__2__Impl rule__Program__Group__3 ;
    public final void rule__Program__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2259:1: ( rule__Program__Group__2__Impl rule__Program__Group__3 )
            // InternalLegoLang.g:2260:2: rule__Program__Group__2__Impl rule__Program__Group__3
            {
            pushFollow(FOLLOW_5);
            rule__Program__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Program__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__2"


    // $ANTLR start "rule__Program__Group__2__Impl"
    // InternalLegoLang.g:2267:1: rule__Program__Group__2__Impl : ( ( rule__Program__NameAssignment_2 ) ) ;
    public final void rule__Program__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2271:1: ( ( ( rule__Program__NameAssignment_2 ) ) )
            // InternalLegoLang.g:2272:1: ( ( rule__Program__NameAssignment_2 ) )
            {
            // InternalLegoLang.g:2272:1: ( ( rule__Program__NameAssignment_2 ) )
            // InternalLegoLang.g:2273:2: ( rule__Program__NameAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getNameAssignment_2()); 
            }
            // InternalLegoLang.g:2274:2: ( rule__Program__NameAssignment_2 )
            // InternalLegoLang.g:2274:3: rule__Program__NameAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Program__NameAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getNameAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__2__Impl"


    // $ANTLR start "rule__Program__Group__3"
    // InternalLegoLang.g:2282:1: rule__Program__Group__3 : rule__Program__Group__3__Impl rule__Program__Group__4 ;
    public final void rule__Program__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2286:1: ( rule__Program__Group__3__Impl rule__Program__Group__4 )
            // InternalLegoLang.g:2287:2: rule__Program__Group__3__Impl rule__Program__Group__4
            {
            pushFollow(FOLLOW_6);
            rule__Program__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Program__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__3"


    // $ANTLR start "rule__Program__Group__3__Impl"
    // InternalLegoLang.g:2294:1: rule__Program__Group__3__Impl : ( '{' ) ;
    public final void rule__Program__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2298:1: ( ( '{' ) )
            // InternalLegoLang.g:2299:1: ( '{' )
            {
            // InternalLegoLang.g:2299:1: ( '{' )
            // InternalLegoLang.g:2300:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_3()); 
            }
            match(input,16,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__3__Impl"


    // $ANTLR start "rule__Program__Group__4"
    // InternalLegoLang.g:2309:1: rule__Program__Group__4 : rule__Program__Group__4__Impl rule__Program__Group__5 ;
    public final void rule__Program__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2313:1: ( rule__Program__Group__4__Impl rule__Program__Group__5 )
            // InternalLegoLang.g:2314:2: rule__Program__Group__4__Impl rule__Program__Group__5
            {
            pushFollow(FOLLOW_6);
            rule__Program__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Program__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__4"


    // $ANTLR start "rule__Program__Group__4__Impl"
    // InternalLegoLang.g:2321:1: rule__Program__Group__4__Impl : ( ( rule__Program__StatementAssignment_4 )* ) ;
    public final void rule__Program__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2325:1: ( ( ( rule__Program__StatementAssignment_4 )* ) )
            // InternalLegoLang.g:2326:1: ( ( rule__Program__StatementAssignment_4 )* )
            {
            // InternalLegoLang.g:2326:1: ( ( rule__Program__StatementAssignment_4 )* )
            // InternalLegoLang.g:2327:2: ( rule__Program__StatementAssignment_4 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getStatementAssignment_4()); 
            }
            // InternalLegoLang.g:2328:2: ( rule__Program__StatementAssignment_4 )*
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( ((LA14_0>=RULE_ID && LA14_0<=RULE_STRING)||(LA14_0>=11 && LA14_0<=14)||LA14_0==19||LA14_0==21||(LA14_0>=23 && LA14_0<=31)||LA14_0==33||LA14_0==36||(LA14_0>=40 && LA14_0<=41)||LA14_0==50||(LA14_0>=52 && LA14_0<=53)||LA14_0==55||(LA14_0>=67 && LA14_0<=68)||(LA14_0>=70 && LA14_0<=72)) ) {
                    alt14=1;
                }


                switch (alt14) {
            	case 1 :
            	    // InternalLegoLang.g:2328:3: rule__Program__StatementAssignment_4
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__Program__StatementAssignment_4();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop14;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getStatementAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__4__Impl"


    // $ANTLR start "rule__Program__Group__5"
    // InternalLegoLang.g:2336:1: rule__Program__Group__5 : rule__Program__Group__5__Impl rule__Program__Group__6 ;
    public final void rule__Program__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2340:1: ( rule__Program__Group__5__Impl rule__Program__Group__6 )
            // InternalLegoLang.g:2341:2: rule__Program__Group__5__Impl rule__Program__Group__6
            {
            pushFollow(FOLLOW_6);
            rule__Program__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Program__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__5"


    // $ANTLR start "rule__Program__Group__5__Impl"
    // InternalLegoLang.g:2348:1: rule__Program__Group__5__Impl : ( ( ';' )? ) ;
    public final void rule__Program__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2352:1: ( ( ( ';' )? ) )
            // InternalLegoLang.g:2353:1: ( ( ';' )? )
            {
            // InternalLegoLang.g:2353:1: ( ( ';' )? )
            // InternalLegoLang.g:2354:2: ( ';' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getSemicolonKeyword_5()); 
            }
            // InternalLegoLang.g:2355:2: ( ';' )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==17) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // InternalLegoLang.g:2355:3: ';'
                    {
                    match(input,17,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getSemicolonKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__5__Impl"


    // $ANTLR start "rule__Program__Group__6"
    // InternalLegoLang.g:2363:1: rule__Program__Group__6 : rule__Program__Group__6__Impl ;
    public final void rule__Program__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2367:1: ( rule__Program__Group__6__Impl )
            // InternalLegoLang.g:2368:2: rule__Program__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Program__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__6"


    // $ANTLR start "rule__Program__Group__6__Impl"
    // InternalLegoLang.g:2374:1: rule__Program__Group__6__Impl : ( '}' ) ;
    public final void rule__Program__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2378:1: ( ( '}' ) )
            // InternalLegoLang.g:2379:1: ( '}' )
            {
            // InternalLegoLang.g:2379:1: ( '}' )
            // InternalLegoLang.g:2380:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_6()); 
            }
            match(input,18,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__6__Impl"


    // $ANTLR start "rule__Pause__Group__0"
    // InternalLegoLang.g:2390:1: rule__Pause__Group__0 : rule__Pause__Group__0__Impl rule__Pause__Group__1 ;
    public final void rule__Pause__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2394:1: ( rule__Pause__Group__0__Impl rule__Pause__Group__1 )
            // InternalLegoLang.g:2395:2: rule__Pause__Group__0__Impl rule__Pause__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__Pause__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Pause__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pause__Group__0"


    // $ANTLR start "rule__Pause__Group__0__Impl"
    // InternalLegoLang.g:2402:1: rule__Pause__Group__0__Impl : ( 'stop' ) ;
    public final void rule__Pause__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2406:1: ( ( 'stop' ) )
            // InternalLegoLang.g:2407:1: ( 'stop' )
            {
            // InternalLegoLang.g:2407:1: ( 'stop' )
            // InternalLegoLang.g:2408:2: 'stop'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPauseAccess().getStopKeyword_0()); 
            }
            match(input,19,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPauseAccess().getStopKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pause__Group__0__Impl"


    // $ANTLR start "rule__Pause__Group__1"
    // InternalLegoLang.g:2417:1: rule__Pause__Group__1 : rule__Pause__Group__1__Impl rule__Pause__Group__2 ;
    public final void rule__Pause__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2421:1: ( rule__Pause__Group__1__Impl rule__Pause__Group__2 )
            // InternalLegoLang.g:2422:2: rule__Pause__Group__1__Impl rule__Pause__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__Pause__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Pause__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pause__Group__1"


    // $ANTLR start "rule__Pause__Group__1__Impl"
    // InternalLegoLang.g:2429:1: rule__Pause__Group__1__Impl : ( 'for' ) ;
    public final void rule__Pause__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2433:1: ( ( 'for' ) )
            // InternalLegoLang.g:2434:1: ( 'for' )
            {
            // InternalLegoLang.g:2434:1: ( 'for' )
            // InternalLegoLang.g:2435:2: 'for'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPauseAccess().getForKeyword_1()); 
            }
            match(input,20,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPauseAccess().getForKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pause__Group__1__Impl"


    // $ANTLR start "rule__Pause__Group__2"
    // InternalLegoLang.g:2444:1: rule__Pause__Group__2 : rule__Pause__Group__2__Impl ;
    public final void rule__Pause__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2448:1: ( rule__Pause__Group__2__Impl )
            // InternalLegoLang.g:2449:2: rule__Pause__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Pause__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pause__Group__2"


    // $ANTLR start "rule__Pause__Group__2__Impl"
    // InternalLegoLang.g:2455:1: rule__Pause__Group__2__Impl : ( ( rule__Pause__ExpressionAssignment_2 ) ) ;
    public final void rule__Pause__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2459:1: ( ( ( rule__Pause__ExpressionAssignment_2 ) ) )
            // InternalLegoLang.g:2460:1: ( ( rule__Pause__ExpressionAssignment_2 ) )
            {
            // InternalLegoLang.g:2460:1: ( ( rule__Pause__ExpressionAssignment_2 ) )
            // InternalLegoLang.g:2461:2: ( rule__Pause__ExpressionAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPauseAccess().getExpressionAssignment_2()); 
            }
            // InternalLegoLang.g:2462:2: ( rule__Pause__ExpressionAssignment_2 )
            // InternalLegoLang.g:2462:3: rule__Pause__ExpressionAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Pause__ExpressionAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPauseAccess().getExpressionAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pause__Group__2__Impl"


    // $ANTLR start "rule__WheelEngine__Group__0"
    // InternalLegoLang.g:2471:1: rule__WheelEngine__Group__0 : rule__WheelEngine__Group__0__Impl rule__WheelEngine__Group__1 ;
    public final void rule__WheelEngine__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2475:1: ( rule__WheelEngine__Group__0__Impl rule__WheelEngine__Group__1 )
            // InternalLegoLang.g:2476:2: rule__WheelEngine__Group__0__Impl rule__WheelEngine__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__WheelEngine__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WheelEngine__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WheelEngine__Group__0"


    // $ANTLR start "rule__WheelEngine__Group__0__Impl"
    // InternalLegoLang.g:2483:1: rule__WheelEngine__Group__0__Impl : ( 'WheelEngine' ) ;
    public final void rule__WheelEngine__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2487:1: ( ( 'WheelEngine' ) )
            // InternalLegoLang.g:2488:1: ( 'WheelEngine' )
            {
            // InternalLegoLang.g:2488:1: ( 'WheelEngine' )
            // InternalLegoLang.g:2489:2: 'WheelEngine'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWheelEngineAccess().getWheelEngineKeyword_0()); 
            }
            match(input,21,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWheelEngineAccess().getWheelEngineKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WheelEngine__Group__0__Impl"


    // $ANTLR start "rule__WheelEngine__Group__1"
    // InternalLegoLang.g:2498:1: rule__WheelEngine__Group__1 : rule__WheelEngine__Group__1__Impl rule__WheelEngine__Group__2 ;
    public final void rule__WheelEngine__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2502:1: ( rule__WheelEngine__Group__1__Impl rule__WheelEngine__Group__2 )
            // InternalLegoLang.g:2503:2: rule__WheelEngine__Group__1__Impl rule__WheelEngine__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__WheelEngine__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WheelEngine__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WheelEngine__Group__1"


    // $ANTLR start "rule__WheelEngine__Group__1__Impl"
    // InternalLegoLang.g:2510:1: rule__WheelEngine__Group__1__Impl : ( ( rule__WheelEngine__NameAssignment_1 ) ) ;
    public final void rule__WheelEngine__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2514:1: ( ( ( rule__WheelEngine__NameAssignment_1 ) ) )
            // InternalLegoLang.g:2515:1: ( ( rule__WheelEngine__NameAssignment_1 ) )
            {
            // InternalLegoLang.g:2515:1: ( ( rule__WheelEngine__NameAssignment_1 ) )
            // InternalLegoLang.g:2516:2: ( rule__WheelEngine__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWheelEngineAccess().getNameAssignment_1()); 
            }
            // InternalLegoLang.g:2517:2: ( rule__WheelEngine__NameAssignment_1 )
            // InternalLegoLang.g:2517:3: rule__WheelEngine__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__WheelEngine__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWheelEngineAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WheelEngine__Group__1__Impl"


    // $ANTLR start "rule__WheelEngine__Group__2"
    // InternalLegoLang.g:2525:1: rule__WheelEngine__Group__2 : rule__WheelEngine__Group__2__Impl rule__WheelEngine__Group__3 ;
    public final void rule__WheelEngine__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2529:1: ( rule__WheelEngine__Group__2__Impl rule__WheelEngine__Group__3 )
            // InternalLegoLang.g:2530:2: rule__WheelEngine__Group__2__Impl rule__WheelEngine__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__WheelEngine__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WheelEngine__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WheelEngine__Group__2"


    // $ANTLR start "rule__WheelEngine__Group__2__Impl"
    // InternalLegoLang.g:2537:1: rule__WheelEngine__Group__2__Impl : ( 'on' ) ;
    public final void rule__WheelEngine__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2541:1: ( ( 'on' ) )
            // InternalLegoLang.g:2542:1: ( 'on' )
            {
            // InternalLegoLang.g:2542:1: ( 'on' )
            // InternalLegoLang.g:2543:2: 'on'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWheelEngineAccess().getOnKeyword_2()); 
            }
            match(input,22,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWheelEngineAccess().getOnKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WheelEngine__Group__2__Impl"


    // $ANTLR start "rule__WheelEngine__Group__3"
    // InternalLegoLang.g:2552:1: rule__WheelEngine__Group__3 : rule__WheelEngine__Group__3__Impl ;
    public final void rule__WheelEngine__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2556:1: ( rule__WheelEngine__Group__3__Impl )
            // InternalLegoLang.g:2557:2: rule__WheelEngine__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WheelEngine__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WheelEngine__Group__3"


    // $ANTLR start "rule__WheelEngine__Group__3__Impl"
    // InternalLegoLang.g:2563:1: rule__WheelEngine__Group__3__Impl : ( ( rule__WheelEngine__PositionAssignment_3 ) ) ;
    public final void rule__WheelEngine__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2567:1: ( ( ( rule__WheelEngine__PositionAssignment_3 ) ) )
            // InternalLegoLang.g:2568:1: ( ( rule__WheelEngine__PositionAssignment_3 ) )
            {
            // InternalLegoLang.g:2568:1: ( ( rule__WheelEngine__PositionAssignment_3 ) )
            // InternalLegoLang.g:2569:2: ( rule__WheelEngine__PositionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWheelEngineAccess().getPositionAssignment_3()); 
            }
            // InternalLegoLang.g:2570:2: ( rule__WheelEngine__PositionAssignment_3 )
            // InternalLegoLang.g:2570:3: rule__WheelEngine__PositionAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__WheelEngine__PositionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWheelEngineAccess().getPositionAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WheelEngine__Group__3__Impl"


    // $ANTLR start "rule__MotorizedArmEngine__Group__0"
    // InternalLegoLang.g:2579:1: rule__MotorizedArmEngine__Group__0 : rule__MotorizedArmEngine__Group__0__Impl rule__MotorizedArmEngine__Group__1 ;
    public final void rule__MotorizedArmEngine__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2583:1: ( rule__MotorizedArmEngine__Group__0__Impl rule__MotorizedArmEngine__Group__1 )
            // InternalLegoLang.g:2584:2: rule__MotorizedArmEngine__Group__0__Impl rule__MotorizedArmEngine__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__MotorizedArmEngine__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MotorizedArmEngine__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MotorizedArmEngine__Group__0"


    // $ANTLR start "rule__MotorizedArmEngine__Group__0__Impl"
    // InternalLegoLang.g:2591:1: rule__MotorizedArmEngine__Group__0__Impl : ( 'MotorizedArmEngine' ) ;
    public final void rule__MotorizedArmEngine__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2595:1: ( ( 'MotorizedArmEngine' ) )
            // InternalLegoLang.g:2596:1: ( 'MotorizedArmEngine' )
            {
            // InternalLegoLang.g:2596:1: ( 'MotorizedArmEngine' )
            // InternalLegoLang.g:2597:2: 'MotorizedArmEngine'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMotorizedArmEngineAccess().getMotorizedArmEngineKeyword_0()); 
            }
            match(input,23,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMotorizedArmEngineAccess().getMotorizedArmEngineKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MotorizedArmEngine__Group__0__Impl"


    // $ANTLR start "rule__MotorizedArmEngine__Group__1"
    // InternalLegoLang.g:2606:1: rule__MotorizedArmEngine__Group__1 : rule__MotorizedArmEngine__Group__1__Impl rule__MotorizedArmEngine__Group__2 ;
    public final void rule__MotorizedArmEngine__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2610:1: ( rule__MotorizedArmEngine__Group__1__Impl rule__MotorizedArmEngine__Group__2 )
            // InternalLegoLang.g:2611:2: rule__MotorizedArmEngine__Group__1__Impl rule__MotorizedArmEngine__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__MotorizedArmEngine__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MotorizedArmEngine__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MotorizedArmEngine__Group__1"


    // $ANTLR start "rule__MotorizedArmEngine__Group__1__Impl"
    // InternalLegoLang.g:2618:1: rule__MotorizedArmEngine__Group__1__Impl : ( ( rule__MotorizedArmEngine__NameAssignment_1 ) ) ;
    public final void rule__MotorizedArmEngine__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2622:1: ( ( ( rule__MotorizedArmEngine__NameAssignment_1 ) ) )
            // InternalLegoLang.g:2623:1: ( ( rule__MotorizedArmEngine__NameAssignment_1 ) )
            {
            // InternalLegoLang.g:2623:1: ( ( rule__MotorizedArmEngine__NameAssignment_1 ) )
            // InternalLegoLang.g:2624:2: ( rule__MotorizedArmEngine__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMotorizedArmEngineAccess().getNameAssignment_1()); 
            }
            // InternalLegoLang.g:2625:2: ( rule__MotorizedArmEngine__NameAssignment_1 )
            // InternalLegoLang.g:2625:3: rule__MotorizedArmEngine__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__MotorizedArmEngine__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMotorizedArmEngineAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MotorizedArmEngine__Group__1__Impl"


    // $ANTLR start "rule__MotorizedArmEngine__Group__2"
    // InternalLegoLang.g:2633:1: rule__MotorizedArmEngine__Group__2 : rule__MotorizedArmEngine__Group__2__Impl rule__MotorizedArmEngine__Group__3 ;
    public final void rule__MotorizedArmEngine__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2637:1: ( rule__MotorizedArmEngine__Group__2__Impl rule__MotorizedArmEngine__Group__3 )
            // InternalLegoLang.g:2638:2: rule__MotorizedArmEngine__Group__2__Impl rule__MotorizedArmEngine__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__MotorizedArmEngine__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MotorizedArmEngine__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MotorizedArmEngine__Group__2"


    // $ANTLR start "rule__MotorizedArmEngine__Group__2__Impl"
    // InternalLegoLang.g:2645:1: rule__MotorizedArmEngine__Group__2__Impl : ( 'on' ) ;
    public final void rule__MotorizedArmEngine__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2649:1: ( ( 'on' ) )
            // InternalLegoLang.g:2650:1: ( 'on' )
            {
            // InternalLegoLang.g:2650:1: ( 'on' )
            // InternalLegoLang.g:2651:2: 'on'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMotorizedArmEngineAccess().getOnKeyword_2()); 
            }
            match(input,22,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMotorizedArmEngineAccess().getOnKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MotorizedArmEngine__Group__2__Impl"


    // $ANTLR start "rule__MotorizedArmEngine__Group__3"
    // InternalLegoLang.g:2660:1: rule__MotorizedArmEngine__Group__3 : rule__MotorizedArmEngine__Group__3__Impl ;
    public final void rule__MotorizedArmEngine__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2664:1: ( rule__MotorizedArmEngine__Group__3__Impl )
            // InternalLegoLang.g:2665:2: rule__MotorizedArmEngine__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MotorizedArmEngine__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MotorizedArmEngine__Group__3"


    // $ANTLR start "rule__MotorizedArmEngine__Group__3__Impl"
    // InternalLegoLang.g:2671:1: rule__MotorizedArmEngine__Group__3__Impl : ( ( rule__MotorizedArmEngine__PositionAssignment_3 ) ) ;
    public final void rule__MotorizedArmEngine__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2675:1: ( ( ( rule__MotorizedArmEngine__PositionAssignment_3 ) ) )
            // InternalLegoLang.g:2676:1: ( ( rule__MotorizedArmEngine__PositionAssignment_3 ) )
            {
            // InternalLegoLang.g:2676:1: ( ( rule__MotorizedArmEngine__PositionAssignment_3 ) )
            // InternalLegoLang.g:2677:2: ( rule__MotorizedArmEngine__PositionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMotorizedArmEngineAccess().getPositionAssignment_3()); 
            }
            // InternalLegoLang.g:2678:2: ( rule__MotorizedArmEngine__PositionAssignment_3 )
            // InternalLegoLang.g:2678:3: rule__MotorizedArmEngine__PositionAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__MotorizedArmEngine__PositionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMotorizedArmEngineAccess().getPositionAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MotorizedArmEngine__Group__3__Impl"


    // $ANTLR start "rule__PaintballLauncherEngine__Group__0"
    // InternalLegoLang.g:2687:1: rule__PaintballLauncherEngine__Group__0 : rule__PaintballLauncherEngine__Group__0__Impl rule__PaintballLauncherEngine__Group__1 ;
    public final void rule__PaintballLauncherEngine__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2691:1: ( rule__PaintballLauncherEngine__Group__0__Impl rule__PaintballLauncherEngine__Group__1 )
            // InternalLegoLang.g:2692:2: rule__PaintballLauncherEngine__Group__0__Impl rule__PaintballLauncherEngine__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__PaintballLauncherEngine__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PaintballLauncherEngine__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PaintballLauncherEngine__Group__0"


    // $ANTLR start "rule__PaintballLauncherEngine__Group__0__Impl"
    // InternalLegoLang.g:2699:1: rule__PaintballLauncherEngine__Group__0__Impl : ( 'PaintballLauncherEngine' ) ;
    public final void rule__PaintballLauncherEngine__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2703:1: ( ( 'PaintballLauncherEngine' ) )
            // InternalLegoLang.g:2704:1: ( 'PaintballLauncherEngine' )
            {
            // InternalLegoLang.g:2704:1: ( 'PaintballLauncherEngine' )
            // InternalLegoLang.g:2705:2: 'PaintballLauncherEngine'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPaintballLauncherEngineAccess().getPaintballLauncherEngineKeyword_0()); 
            }
            match(input,24,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPaintballLauncherEngineAccess().getPaintballLauncherEngineKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PaintballLauncherEngine__Group__0__Impl"


    // $ANTLR start "rule__PaintballLauncherEngine__Group__1"
    // InternalLegoLang.g:2714:1: rule__PaintballLauncherEngine__Group__1 : rule__PaintballLauncherEngine__Group__1__Impl rule__PaintballLauncherEngine__Group__2 ;
    public final void rule__PaintballLauncherEngine__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2718:1: ( rule__PaintballLauncherEngine__Group__1__Impl rule__PaintballLauncherEngine__Group__2 )
            // InternalLegoLang.g:2719:2: rule__PaintballLauncherEngine__Group__1__Impl rule__PaintballLauncherEngine__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__PaintballLauncherEngine__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PaintballLauncherEngine__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PaintballLauncherEngine__Group__1"


    // $ANTLR start "rule__PaintballLauncherEngine__Group__1__Impl"
    // InternalLegoLang.g:2726:1: rule__PaintballLauncherEngine__Group__1__Impl : ( ( rule__PaintballLauncherEngine__NameAssignment_1 ) ) ;
    public final void rule__PaintballLauncherEngine__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2730:1: ( ( ( rule__PaintballLauncherEngine__NameAssignment_1 ) ) )
            // InternalLegoLang.g:2731:1: ( ( rule__PaintballLauncherEngine__NameAssignment_1 ) )
            {
            // InternalLegoLang.g:2731:1: ( ( rule__PaintballLauncherEngine__NameAssignment_1 ) )
            // InternalLegoLang.g:2732:2: ( rule__PaintballLauncherEngine__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPaintballLauncherEngineAccess().getNameAssignment_1()); 
            }
            // InternalLegoLang.g:2733:2: ( rule__PaintballLauncherEngine__NameAssignment_1 )
            // InternalLegoLang.g:2733:3: rule__PaintballLauncherEngine__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__PaintballLauncherEngine__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPaintballLauncherEngineAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PaintballLauncherEngine__Group__1__Impl"


    // $ANTLR start "rule__PaintballLauncherEngine__Group__2"
    // InternalLegoLang.g:2741:1: rule__PaintballLauncherEngine__Group__2 : rule__PaintballLauncherEngine__Group__2__Impl rule__PaintballLauncherEngine__Group__3 ;
    public final void rule__PaintballLauncherEngine__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2745:1: ( rule__PaintballLauncherEngine__Group__2__Impl rule__PaintballLauncherEngine__Group__3 )
            // InternalLegoLang.g:2746:2: rule__PaintballLauncherEngine__Group__2__Impl rule__PaintballLauncherEngine__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__PaintballLauncherEngine__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PaintballLauncherEngine__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PaintballLauncherEngine__Group__2"


    // $ANTLR start "rule__PaintballLauncherEngine__Group__2__Impl"
    // InternalLegoLang.g:2753:1: rule__PaintballLauncherEngine__Group__2__Impl : ( 'on' ) ;
    public final void rule__PaintballLauncherEngine__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2757:1: ( ( 'on' ) )
            // InternalLegoLang.g:2758:1: ( 'on' )
            {
            // InternalLegoLang.g:2758:1: ( 'on' )
            // InternalLegoLang.g:2759:2: 'on'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPaintballLauncherEngineAccess().getOnKeyword_2()); 
            }
            match(input,22,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPaintballLauncherEngineAccess().getOnKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PaintballLauncherEngine__Group__2__Impl"


    // $ANTLR start "rule__PaintballLauncherEngine__Group__3"
    // InternalLegoLang.g:2768:1: rule__PaintballLauncherEngine__Group__3 : rule__PaintballLauncherEngine__Group__3__Impl ;
    public final void rule__PaintballLauncherEngine__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2772:1: ( rule__PaintballLauncherEngine__Group__3__Impl )
            // InternalLegoLang.g:2773:2: rule__PaintballLauncherEngine__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PaintballLauncherEngine__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PaintballLauncherEngine__Group__3"


    // $ANTLR start "rule__PaintballLauncherEngine__Group__3__Impl"
    // InternalLegoLang.g:2779:1: rule__PaintballLauncherEngine__Group__3__Impl : ( ( rule__PaintballLauncherEngine__PositionAssignment_3 ) ) ;
    public final void rule__PaintballLauncherEngine__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2783:1: ( ( ( rule__PaintballLauncherEngine__PositionAssignment_3 ) ) )
            // InternalLegoLang.g:2784:1: ( ( rule__PaintballLauncherEngine__PositionAssignment_3 ) )
            {
            // InternalLegoLang.g:2784:1: ( ( rule__PaintballLauncherEngine__PositionAssignment_3 ) )
            // InternalLegoLang.g:2785:2: ( rule__PaintballLauncherEngine__PositionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPaintballLauncherEngineAccess().getPositionAssignment_3()); 
            }
            // InternalLegoLang.g:2786:2: ( rule__PaintballLauncherEngine__PositionAssignment_3 )
            // InternalLegoLang.g:2786:3: rule__PaintballLauncherEngine__PositionAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__PaintballLauncherEngine__PositionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPaintballLauncherEngineAccess().getPositionAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PaintballLauncherEngine__Group__3__Impl"


    // $ANTLR start "rule__ColorSensor__Group__0"
    // InternalLegoLang.g:2795:1: rule__ColorSensor__Group__0 : rule__ColorSensor__Group__0__Impl rule__ColorSensor__Group__1 ;
    public final void rule__ColorSensor__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2799:1: ( rule__ColorSensor__Group__0__Impl rule__ColorSensor__Group__1 )
            // InternalLegoLang.g:2800:2: rule__ColorSensor__Group__0__Impl rule__ColorSensor__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__ColorSensor__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColorSensor__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorSensor__Group__0"


    // $ANTLR start "rule__ColorSensor__Group__0__Impl"
    // InternalLegoLang.g:2807:1: rule__ColorSensor__Group__0__Impl : ( 'ColorSensor' ) ;
    public final void rule__ColorSensor__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2811:1: ( ( 'ColorSensor' ) )
            // InternalLegoLang.g:2812:1: ( 'ColorSensor' )
            {
            // InternalLegoLang.g:2812:1: ( 'ColorSensor' )
            // InternalLegoLang.g:2813:2: 'ColorSensor'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorSensorAccess().getColorSensorKeyword_0()); 
            }
            match(input,25,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorSensorAccess().getColorSensorKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorSensor__Group__0__Impl"


    // $ANTLR start "rule__ColorSensor__Group__1"
    // InternalLegoLang.g:2822:1: rule__ColorSensor__Group__1 : rule__ColorSensor__Group__1__Impl rule__ColorSensor__Group__2 ;
    public final void rule__ColorSensor__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2826:1: ( rule__ColorSensor__Group__1__Impl rule__ColorSensor__Group__2 )
            // InternalLegoLang.g:2827:2: rule__ColorSensor__Group__1__Impl rule__ColorSensor__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__ColorSensor__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColorSensor__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorSensor__Group__1"


    // $ANTLR start "rule__ColorSensor__Group__1__Impl"
    // InternalLegoLang.g:2834:1: rule__ColorSensor__Group__1__Impl : ( ( rule__ColorSensor__NameAssignment_1 ) ) ;
    public final void rule__ColorSensor__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2838:1: ( ( ( rule__ColorSensor__NameAssignment_1 ) ) )
            // InternalLegoLang.g:2839:1: ( ( rule__ColorSensor__NameAssignment_1 ) )
            {
            // InternalLegoLang.g:2839:1: ( ( rule__ColorSensor__NameAssignment_1 ) )
            // InternalLegoLang.g:2840:2: ( rule__ColorSensor__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorSensorAccess().getNameAssignment_1()); 
            }
            // InternalLegoLang.g:2841:2: ( rule__ColorSensor__NameAssignment_1 )
            // InternalLegoLang.g:2841:3: rule__ColorSensor__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ColorSensor__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorSensorAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorSensor__Group__1__Impl"


    // $ANTLR start "rule__ColorSensor__Group__2"
    // InternalLegoLang.g:2849:1: rule__ColorSensor__Group__2 : rule__ColorSensor__Group__2__Impl rule__ColorSensor__Group__3 ;
    public final void rule__ColorSensor__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2853:1: ( rule__ColorSensor__Group__2__Impl rule__ColorSensor__Group__3 )
            // InternalLegoLang.g:2854:2: rule__ColorSensor__Group__2__Impl rule__ColorSensor__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__ColorSensor__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColorSensor__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorSensor__Group__2"


    // $ANTLR start "rule__ColorSensor__Group__2__Impl"
    // InternalLegoLang.g:2861:1: rule__ColorSensor__Group__2__Impl : ( 'on' ) ;
    public final void rule__ColorSensor__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2865:1: ( ( 'on' ) )
            // InternalLegoLang.g:2866:1: ( 'on' )
            {
            // InternalLegoLang.g:2866:1: ( 'on' )
            // InternalLegoLang.g:2867:2: 'on'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorSensorAccess().getOnKeyword_2()); 
            }
            match(input,22,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorSensorAccess().getOnKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorSensor__Group__2__Impl"


    // $ANTLR start "rule__ColorSensor__Group__3"
    // InternalLegoLang.g:2876:1: rule__ColorSensor__Group__3 : rule__ColorSensor__Group__3__Impl ;
    public final void rule__ColorSensor__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2880:1: ( rule__ColorSensor__Group__3__Impl )
            // InternalLegoLang.g:2881:2: rule__ColorSensor__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColorSensor__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorSensor__Group__3"


    // $ANTLR start "rule__ColorSensor__Group__3__Impl"
    // InternalLegoLang.g:2887:1: rule__ColorSensor__Group__3__Impl : ( ( rule__ColorSensor__PositionAssignment_3 ) ) ;
    public final void rule__ColorSensor__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2891:1: ( ( ( rule__ColorSensor__PositionAssignment_3 ) ) )
            // InternalLegoLang.g:2892:1: ( ( rule__ColorSensor__PositionAssignment_3 ) )
            {
            // InternalLegoLang.g:2892:1: ( ( rule__ColorSensor__PositionAssignment_3 ) )
            // InternalLegoLang.g:2893:2: ( rule__ColorSensor__PositionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorSensorAccess().getPositionAssignment_3()); 
            }
            // InternalLegoLang.g:2894:2: ( rule__ColorSensor__PositionAssignment_3 )
            // InternalLegoLang.g:2894:3: rule__ColorSensor__PositionAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__ColorSensor__PositionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorSensorAccess().getPositionAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorSensor__Group__3__Impl"


    // $ANTLR start "rule__LaserSensor__Group__0"
    // InternalLegoLang.g:2903:1: rule__LaserSensor__Group__0 : rule__LaserSensor__Group__0__Impl rule__LaserSensor__Group__1 ;
    public final void rule__LaserSensor__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2907:1: ( rule__LaserSensor__Group__0__Impl rule__LaserSensor__Group__1 )
            // InternalLegoLang.g:2908:2: rule__LaserSensor__Group__0__Impl rule__LaserSensor__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__LaserSensor__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LaserSensor__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LaserSensor__Group__0"


    // $ANTLR start "rule__LaserSensor__Group__0__Impl"
    // InternalLegoLang.g:2915:1: rule__LaserSensor__Group__0__Impl : ( 'LaserSensor' ) ;
    public final void rule__LaserSensor__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2919:1: ( ( 'LaserSensor' ) )
            // InternalLegoLang.g:2920:1: ( 'LaserSensor' )
            {
            // InternalLegoLang.g:2920:1: ( 'LaserSensor' )
            // InternalLegoLang.g:2921:2: 'LaserSensor'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLaserSensorAccess().getLaserSensorKeyword_0()); 
            }
            match(input,26,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLaserSensorAccess().getLaserSensorKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LaserSensor__Group__0__Impl"


    // $ANTLR start "rule__LaserSensor__Group__1"
    // InternalLegoLang.g:2930:1: rule__LaserSensor__Group__1 : rule__LaserSensor__Group__1__Impl rule__LaserSensor__Group__2 ;
    public final void rule__LaserSensor__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2934:1: ( rule__LaserSensor__Group__1__Impl rule__LaserSensor__Group__2 )
            // InternalLegoLang.g:2935:2: rule__LaserSensor__Group__1__Impl rule__LaserSensor__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__LaserSensor__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LaserSensor__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LaserSensor__Group__1"


    // $ANTLR start "rule__LaserSensor__Group__1__Impl"
    // InternalLegoLang.g:2942:1: rule__LaserSensor__Group__1__Impl : ( ( rule__LaserSensor__NameAssignment_1 ) ) ;
    public final void rule__LaserSensor__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2946:1: ( ( ( rule__LaserSensor__NameAssignment_1 ) ) )
            // InternalLegoLang.g:2947:1: ( ( rule__LaserSensor__NameAssignment_1 ) )
            {
            // InternalLegoLang.g:2947:1: ( ( rule__LaserSensor__NameAssignment_1 ) )
            // InternalLegoLang.g:2948:2: ( rule__LaserSensor__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLaserSensorAccess().getNameAssignment_1()); 
            }
            // InternalLegoLang.g:2949:2: ( rule__LaserSensor__NameAssignment_1 )
            // InternalLegoLang.g:2949:3: rule__LaserSensor__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__LaserSensor__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLaserSensorAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LaserSensor__Group__1__Impl"


    // $ANTLR start "rule__LaserSensor__Group__2"
    // InternalLegoLang.g:2957:1: rule__LaserSensor__Group__2 : rule__LaserSensor__Group__2__Impl rule__LaserSensor__Group__3 ;
    public final void rule__LaserSensor__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2961:1: ( rule__LaserSensor__Group__2__Impl rule__LaserSensor__Group__3 )
            // InternalLegoLang.g:2962:2: rule__LaserSensor__Group__2__Impl rule__LaserSensor__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__LaserSensor__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LaserSensor__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LaserSensor__Group__2"


    // $ANTLR start "rule__LaserSensor__Group__2__Impl"
    // InternalLegoLang.g:2969:1: rule__LaserSensor__Group__2__Impl : ( 'on' ) ;
    public final void rule__LaserSensor__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2973:1: ( ( 'on' ) )
            // InternalLegoLang.g:2974:1: ( 'on' )
            {
            // InternalLegoLang.g:2974:1: ( 'on' )
            // InternalLegoLang.g:2975:2: 'on'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLaserSensorAccess().getOnKeyword_2()); 
            }
            match(input,22,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLaserSensorAccess().getOnKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LaserSensor__Group__2__Impl"


    // $ANTLR start "rule__LaserSensor__Group__3"
    // InternalLegoLang.g:2984:1: rule__LaserSensor__Group__3 : rule__LaserSensor__Group__3__Impl ;
    public final void rule__LaserSensor__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2988:1: ( rule__LaserSensor__Group__3__Impl )
            // InternalLegoLang.g:2989:2: rule__LaserSensor__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LaserSensor__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LaserSensor__Group__3"


    // $ANTLR start "rule__LaserSensor__Group__3__Impl"
    // InternalLegoLang.g:2995:1: rule__LaserSensor__Group__3__Impl : ( ( rule__LaserSensor__PositionAssignment_3 ) ) ;
    public final void rule__LaserSensor__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2999:1: ( ( ( rule__LaserSensor__PositionAssignment_3 ) ) )
            // InternalLegoLang.g:3000:1: ( ( rule__LaserSensor__PositionAssignment_3 ) )
            {
            // InternalLegoLang.g:3000:1: ( ( rule__LaserSensor__PositionAssignment_3 ) )
            // InternalLegoLang.g:3001:2: ( rule__LaserSensor__PositionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLaserSensorAccess().getPositionAssignment_3()); 
            }
            // InternalLegoLang.g:3002:2: ( rule__LaserSensor__PositionAssignment_3 )
            // InternalLegoLang.g:3002:3: rule__LaserSensor__PositionAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__LaserSensor__PositionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLaserSensorAccess().getPositionAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LaserSensor__Group__3__Impl"


    // $ANTLR start "rule__GPSSensor__Group__0"
    // InternalLegoLang.g:3011:1: rule__GPSSensor__Group__0 : rule__GPSSensor__Group__0__Impl rule__GPSSensor__Group__1 ;
    public final void rule__GPSSensor__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3015:1: ( rule__GPSSensor__Group__0__Impl rule__GPSSensor__Group__1 )
            // InternalLegoLang.g:3016:2: rule__GPSSensor__Group__0__Impl rule__GPSSensor__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__GPSSensor__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GPSSensor__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GPSSensor__Group__0"


    // $ANTLR start "rule__GPSSensor__Group__0__Impl"
    // InternalLegoLang.g:3023:1: rule__GPSSensor__Group__0__Impl : ( 'GPSSensor' ) ;
    public final void rule__GPSSensor__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3027:1: ( ( 'GPSSensor' ) )
            // InternalLegoLang.g:3028:1: ( 'GPSSensor' )
            {
            // InternalLegoLang.g:3028:1: ( 'GPSSensor' )
            // InternalLegoLang.g:3029:2: 'GPSSensor'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGPSSensorAccess().getGPSSensorKeyword_0()); 
            }
            match(input,27,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGPSSensorAccess().getGPSSensorKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GPSSensor__Group__0__Impl"


    // $ANTLR start "rule__GPSSensor__Group__1"
    // InternalLegoLang.g:3038:1: rule__GPSSensor__Group__1 : rule__GPSSensor__Group__1__Impl rule__GPSSensor__Group__2 ;
    public final void rule__GPSSensor__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3042:1: ( rule__GPSSensor__Group__1__Impl rule__GPSSensor__Group__2 )
            // InternalLegoLang.g:3043:2: rule__GPSSensor__Group__1__Impl rule__GPSSensor__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__GPSSensor__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GPSSensor__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GPSSensor__Group__1"


    // $ANTLR start "rule__GPSSensor__Group__1__Impl"
    // InternalLegoLang.g:3050:1: rule__GPSSensor__Group__1__Impl : ( ( rule__GPSSensor__NameAssignment_1 ) ) ;
    public final void rule__GPSSensor__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3054:1: ( ( ( rule__GPSSensor__NameAssignment_1 ) ) )
            // InternalLegoLang.g:3055:1: ( ( rule__GPSSensor__NameAssignment_1 ) )
            {
            // InternalLegoLang.g:3055:1: ( ( rule__GPSSensor__NameAssignment_1 ) )
            // InternalLegoLang.g:3056:2: ( rule__GPSSensor__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGPSSensorAccess().getNameAssignment_1()); 
            }
            // InternalLegoLang.g:3057:2: ( rule__GPSSensor__NameAssignment_1 )
            // InternalLegoLang.g:3057:3: rule__GPSSensor__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__GPSSensor__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGPSSensorAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GPSSensor__Group__1__Impl"


    // $ANTLR start "rule__GPSSensor__Group__2"
    // InternalLegoLang.g:3065:1: rule__GPSSensor__Group__2 : rule__GPSSensor__Group__2__Impl rule__GPSSensor__Group__3 ;
    public final void rule__GPSSensor__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3069:1: ( rule__GPSSensor__Group__2__Impl rule__GPSSensor__Group__3 )
            // InternalLegoLang.g:3070:2: rule__GPSSensor__Group__2__Impl rule__GPSSensor__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__GPSSensor__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GPSSensor__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GPSSensor__Group__2"


    // $ANTLR start "rule__GPSSensor__Group__2__Impl"
    // InternalLegoLang.g:3077:1: rule__GPSSensor__Group__2__Impl : ( 'on' ) ;
    public final void rule__GPSSensor__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3081:1: ( ( 'on' ) )
            // InternalLegoLang.g:3082:1: ( 'on' )
            {
            // InternalLegoLang.g:3082:1: ( 'on' )
            // InternalLegoLang.g:3083:2: 'on'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGPSSensorAccess().getOnKeyword_2()); 
            }
            match(input,22,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGPSSensorAccess().getOnKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GPSSensor__Group__2__Impl"


    // $ANTLR start "rule__GPSSensor__Group__3"
    // InternalLegoLang.g:3092:1: rule__GPSSensor__Group__3 : rule__GPSSensor__Group__3__Impl ;
    public final void rule__GPSSensor__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3096:1: ( rule__GPSSensor__Group__3__Impl )
            // InternalLegoLang.g:3097:2: rule__GPSSensor__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GPSSensor__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GPSSensor__Group__3"


    // $ANTLR start "rule__GPSSensor__Group__3__Impl"
    // InternalLegoLang.g:3103:1: rule__GPSSensor__Group__3__Impl : ( ( rule__GPSSensor__PositionAssignment_3 ) ) ;
    public final void rule__GPSSensor__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3107:1: ( ( ( rule__GPSSensor__PositionAssignment_3 ) ) )
            // InternalLegoLang.g:3108:1: ( ( rule__GPSSensor__PositionAssignment_3 ) )
            {
            // InternalLegoLang.g:3108:1: ( ( rule__GPSSensor__PositionAssignment_3 ) )
            // InternalLegoLang.g:3109:2: ( rule__GPSSensor__PositionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGPSSensorAccess().getPositionAssignment_3()); 
            }
            // InternalLegoLang.g:3110:2: ( rule__GPSSensor__PositionAssignment_3 )
            // InternalLegoLang.g:3110:3: rule__GPSSensor__PositionAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__GPSSensor__PositionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGPSSensorAccess().getPositionAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GPSSensor__Group__3__Impl"


    // $ANTLR start "rule__GyroSensor__Group__0"
    // InternalLegoLang.g:3119:1: rule__GyroSensor__Group__0 : rule__GyroSensor__Group__0__Impl rule__GyroSensor__Group__1 ;
    public final void rule__GyroSensor__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3123:1: ( rule__GyroSensor__Group__0__Impl rule__GyroSensor__Group__1 )
            // InternalLegoLang.g:3124:2: rule__GyroSensor__Group__0__Impl rule__GyroSensor__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__GyroSensor__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GyroSensor__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GyroSensor__Group__0"


    // $ANTLR start "rule__GyroSensor__Group__0__Impl"
    // InternalLegoLang.g:3131:1: rule__GyroSensor__Group__0__Impl : ( 'GyroSensor' ) ;
    public final void rule__GyroSensor__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3135:1: ( ( 'GyroSensor' ) )
            // InternalLegoLang.g:3136:1: ( 'GyroSensor' )
            {
            // InternalLegoLang.g:3136:1: ( 'GyroSensor' )
            // InternalLegoLang.g:3137:2: 'GyroSensor'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGyroSensorAccess().getGyroSensorKeyword_0()); 
            }
            match(input,28,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGyroSensorAccess().getGyroSensorKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GyroSensor__Group__0__Impl"


    // $ANTLR start "rule__GyroSensor__Group__1"
    // InternalLegoLang.g:3146:1: rule__GyroSensor__Group__1 : rule__GyroSensor__Group__1__Impl rule__GyroSensor__Group__2 ;
    public final void rule__GyroSensor__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3150:1: ( rule__GyroSensor__Group__1__Impl rule__GyroSensor__Group__2 )
            // InternalLegoLang.g:3151:2: rule__GyroSensor__Group__1__Impl rule__GyroSensor__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__GyroSensor__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GyroSensor__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GyroSensor__Group__1"


    // $ANTLR start "rule__GyroSensor__Group__1__Impl"
    // InternalLegoLang.g:3158:1: rule__GyroSensor__Group__1__Impl : ( ( rule__GyroSensor__NameAssignment_1 ) ) ;
    public final void rule__GyroSensor__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3162:1: ( ( ( rule__GyroSensor__NameAssignment_1 ) ) )
            // InternalLegoLang.g:3163:1: ( ( rule__GyroSensor__NameAssignment_1 ) )
            {
            // InternalLegoLang.g:3163:1: ( ( rule__GyroSensor__NameAssignment_1 ) )
            // InternalLegoLang.g:3164:2: ( rule__GyroSensor__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGyroSensorAccess().getNameAssignment_1()); 
            }
            // InternalLegoLang.g:3165:2: ( rule__GyroSensor__NameAssignment_1 )
            // InternalLegoLang.g:3165:3: rule__GyroSensor__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__GyroSensor__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGyroSensorAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GyroSensor__Group__1__Impl"


    // $ANTLR start "rule__GyroSensor__Group__2"
    // InternalLegoLang.g:3173:1: rule__GyroSensor__Group__2 : rule__GyroSensor__Group__2__Impl rule__GyroSensor__Group__3 ;
    public final void rule__GyroSensor__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3177:1: ( rule__GyroSensor__Group__2__Impl rule__GyroSensor__Group__3 )
            // InternalLegoLang.g:3178:2: rule__GyroSensor__Group__2__Impl rule__GyroSensor__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__GyroSensor__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GyroSensor__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GyroSensor__Group__2"


    // $ANTLR start "rule__GyroSensor__Group__2__Impl"
    // InternalLegoLang.g:3185:1: rule__GyroSensor__Group__2__Impl : ( 'on' ) ;
    public final void rule__GyroSensor__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3189:1: ( ( 'on' ) )
            // InternalLegoLang.g:3190:1: ( 'on' )
            {
            // InternalLegoLang.g:3190:1: ( 'on' )
            // InternalLegoLang.g:3191:2: 'on'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGyroSensorAccess().getOnKeyword_2()); 
            }
            match(input,22,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGyroSensorAccess().getOnKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GyroSensor__Group__2__Impl"


    // $ANTLR start "rule__GyroSensor__Group__3"
    // InternalLegoLang.g:3200:1: rule__GyroSensor__Group__3 : rule__GyroSensor__Group__3__Impl ;
    public final void rule__GyroSensor__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3204:1: ( rule__GyroSensor__Group__3__Impl )
            // InternalLegoLang.g:3205:2: rule__GyroSensor__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GyroSensor__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GyroSensor__Group__3"


    // $ANTLR start "rule__GyroSensor__Group__3__Impl"
    // InternalLegoLang.g:3211:1: rule__GyroSensor__Group__3__Impl : ( ( rule__GyroSensor__PositionAssignment_3 ) ) ;
    public final void rule__GyroSensor__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3215:1: ( ( ( rule__GyroSensor__PositionAssignment_3 ) ) )
            // InternalLegoLang.g:3216:1: ( ( rule__GyroSensor__PositionAssignment_3 ) )
            {
            // InternalLegoLang.g:3216:1: ( ( rule__GyroSensor__PositionAssignment_3 ) )
            // InternalLegoLang.g:3217:2: ( rule__GyroSensor__PositionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGyroSensorAccess().getPositionAssignment_3()); 
            }
            // InternalLegoLang.g:3218:2: ( rule__GyroSensor__PositionAssignment_3 )
            // InternalLegoLang.g:3218:3: rule__GyroSensor__PositionAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__GyroSensor__PositionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGyroSensorAccess().getPositionAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GyroSensor__Group__3__Impl"


    // $ANTLR start "rule__UltraSonicSensor__Group__0"
    // InternalLegoLang.g:3227:1: rule__UltraSonicSensor__Group__0 : rule__UltraSonicSensor__Group__0__Impl rule__UltraSonicSensor__Group__1 ;
    public final void rule__UltraSonicSensor__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3231:1: ( rule__UltraSonicSensor__Group__0__Impl rule__UltraSonicSensor__Group__1 )
            // InternalLegoLang.g:3232:2: rule__UltraSonicSensor__Group__0__Impl rule__UltraSonicSensor__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__UltraSonicSensor__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UltraSonicSensor__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UltraSonicSensor__Group__0"


    // $ANTLR start "rule__UltraSonicSensor__Group__0__Impl"
    // InternalLegoLang.g:3239:1: rule__UltraSonicSensor__Group__0__Impl : ( 'UltraSonicSensor' ) ;
    public final void rule__UltraSonicSensor__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3243:1: ( ( 'UltraSonicSensor' ) )
            // InternalLegoLang.g:3244:1: ( 'UltraSonicSensor' )
            {
            // InternalLegoLang.g:3244:1: ( 'UltraSonicSensor' )
            // InternalLegoLang.g:3245:2: 'UltraSonicSensor'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUltraSonicSensorAccess().getUltraSonicSensorKeyword_0()); 
            }
            match(input,29,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUltraSonicSensorAccess().getUltraSonicSensorKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UltraSonicSensor__Group__0__Impl"


    // $ANTLR start "rule__UltraSonicSensor__Group__1"
    // InternalLegoLang.g:3254:1: rule__UltraSonicSensor__Group__1 : rule__UltraSonicSensor__Group__1__Impl rule__UltraSonicSensor__Group__2 ;
    public final void rule__UltraSonicSensor__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3258:1: ( rule__UltraSonicSensor__Group__1__Impl rule__UltraSonicSensor__Group__2 )
            // InternalLegoLang.g:3259:2: rule__UltraSonicSensor__Group__1__Impl rule__UltraSonicSensor__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__UltraSonicSensor__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UltraSonicSensor__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UltraSonicSensor__Group__1"


    // $ANTLR start "rule__UltraSonicSensor__Group__1__Impl"
    // InternalLegoLang.g:3266:1: rule__UltraSonicSensor__Group__1__Impl : ( ( rule__UltraSonicSensor__NameAssignment_1 ) ) ;
    public final void rule__UltraSonicSensor__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3270:1: ( ( ( rule__UltraSonicSensor__NameAssignment_1 ) ) )
            // InternalLegoLang.g:3271:1: ( ( rule__UltraSonicSensor__NameAssignment_1 ) )
            {
            // InternalLegoLang.g:3271:1: ( ( rule__UltraSonicSensor__NameAssignment_1 ) )
            // InternalLegoLang.g:3272:2: ( rule__UltraSonicSensor__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUltraSonicSensorAccess().getNameAssignment_1()); 
            }
            // InternalLegoLang.g:3273:2: ( rule__UltraSonicSensor__NameAssignment_1 )
            // InternalLegoLang.g:3273:3: rule__UltraSonicSensor__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__UltraSonicSensor__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUltraSonicSensorAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UltraSonicSensor__Group__1__Impl"


    // $ANTLR start "rule__UltraSonicSensor__Group__2"
    // InternalLegoLang.g:3281:1: rule__UltraSonicSensor__Group__2 : rule__UltraSonicSensor__Group__2__Impl rule__UltraSonicSensor__Group__3 ;
    public final void rule__UltraSonicSensor__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3285:1: ( rule__UltraSonicSensor__Group__2__Impl rule__UltraSonicSensor__Group__3 )
            // InternalLegoLang.g:3286:2: rule__UltraSonicSensor__Group__2__Impl rule__UltraSonicSensor__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__UltraSonicSensor__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UltraSonicSensor__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UltraSonicSensor__Group__2"


    // $ANTLR start "rule__UltraSonicSensor__Group__2__Impl"
    // InternalLegoLang.g:3293:1: rule__UltraSonicSensor__Group__2__Impl : ( 'on' ) ;
    public final void rule__UltraSonicSensor__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3297:1: ( ( 'on' ) )
            // InternalLegoLang.g:3298:1: ( 'on' )
            {
            // InternalLegoLang.g:3298:1: ( 'on' )
            // InternalLegoLang.g:3299:2: 'on'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUltraSonicSensorAccess().getOnKeyword_2()); 
            }
            match(input,22,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUltraSonicSensorAccess().getOnKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UltraSonicSensor__Group__2__Impl"


    // $ANTLR start "rule__UltraSonicSensor__Group__3"
    // InternalLegoLang.g:3308:1: rule__UltraSonicSensor__Group__3 : rule__UltraSonicSensor__Group__3__Impl ;
    public final void rule__UltraSonicSensor__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3312:1: ( rule__UltraSonicSensor__Group__3__Impl )
            // InternalLegoLang.g:3313:2: rule__UltraSonicSensor__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UltraSonicSensor__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UltraSonicSensor__Group__3"


    // $ANTLR start "rule__UltraSonicSensor__Group__3__Impl"
    // InternalLegoLang.g:3319:1: rule__UltraSonicSensor__Group__3__Impl : ( ( rule__UltraSonicSensor__PositionAssignment_3 ) ) ;
    public final void rule__UltraSonicSensor__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3323:1: ( ( ( rule__UltraSonicSensor__PositionAssignment_3 ) ) )
            // InternalLegoLang.g:3324:1: ( ( rule__UltraSonicSensor__PositionAssignment_3 ) )
            {
            // InternalLegoLang.g:3324:1: ( ( rule__UltraSonicSensor__PositionAssignment_3 ) )
            // InternalLegoLang.g:3325:2: ( rule__UltraSonicSensor__PositionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUltraSonicSensorAccess().getPositionAssignment_3()); 
            }
            // InternalLegoLang.g:3326:2: ( rule__UltraSonicSensor__PositionAssignment_3 )
            // InternalLegoLang.g:3326:3: rule__UltraSonicSensor__PositionAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__UltraSonicSensor__PositionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUltraSonicSensorAccess().getPositionAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UltraSonicSensor__Group__3__Impl"


    // $ANTLR start "rule__Car__Group__0"
    // InternalLegoLang.g:3335:1: rule__Car__Group__0 : rule__Car__Group__0__Impl rule__Car__Group__1 ;
    public final void rule__Car__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3339:1: ( rule__Car__Group__0__Impl rule__Car__Group__1 )
            // InternalLegoLang.g:3340:2: rule__Car__Group__0__Impl rule__Car__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__Car__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Car__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__Group__0"


    // $ANTLR start "rule__Car__Group__0__Impl"
    // InternalLegoLang.g:3347:1: rule__Car__Group__0__Impl : ( 'Car' ) ;
    public final void rule__Car__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3351:1: ( ( 'Car' ) )
            // InternalLegoLang.g:3352:1: ( 'Car' )
            {
            // InternalLegoLang.g:3352:1: ( 'Car' )
            // InternalLegoLang.g:3353:2: 'Car'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCarAccess().getCarKeyword_0()); 
            }
            match(input,30,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCarAccess().getCarKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__Group__0__Impl"


    // $ANTLR start "rule__Car__Group__1"
    // InternalLegoLang.g:3362:1: rule__Car__Group__1 : rule__Car__Group__1__Impl rule__Car__Group__2 ;
    public final void rule__Car__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3366:1: ( rule__Car__Group__1__Impl rule__Car__Group__2 )
            // InternalLegoLang.g:3367:2: rule__Car__Group__1__Impl rule__Car__Group__2
            {
            pushFollow(FOLLOW_5);
            rule__Car__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Car__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__Group__1"


    // $ANTLR start "rule__Car__Group__1__Impl"
    // InternalLegoLang.g:3374:1: rule__Car__Group__1__Impl : ( ( rule__Car__NameAssignment_1 ) ) ;
    public final void rule__Car__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3378:1: ( ( ( rule__Car__NameAssignment_1 ) ) )
            // InternalLegoLang.g:3379:1: ( ( rule__Car__NameAssignment_1 ) )
            {
            // InternalLegoLang.g:3379:1: ( ( rule__Car__NameAssignment_1 ) )
            // InternalLegoLang.g:3380:2: ( rule__Car__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCarAccess().getNameAssignment_1()); 
            }
            // InternalLegoLang.g:3381:2: ( rule__Car__NameAssignment_1 )
            // InternalLegoLang.g:3381:3: rule__Car__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Car__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCarAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__Group__1__Impl"


    // $ANTLR start "rule__Car__Group__2"
    // InternalLegoLang.g:3389:1: rule__Car__Group__2 : rule__Car__Group__2__Impl rule__Car__Group__3 ;
    public final void rule__Car__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3393:1: ( rule__Car__Group__2__Impl rule__Car__Group__3 )
            // InternalLegoLang.g:3394:2: rule__Car__Group__2__Impl rule__Car__Group__3
            {
            pushFollow(FOLLOW_12);
            rule__Car__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Car__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__Group__2"


    // $ANTLR start "rule__Car__Group__2__Impl"
    // InternalLegoLang.g:3401:1: rule__Car__Group__2__Impl : ( '{' ) ;
    public final void rule__Car__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3405:1: ( ( '{' ) )
            // InternalLegoLang.g:3406:1: ( '{' )
            {
            // InternalLegoLang.g:3406:1: ( '{' )
            // InternalLegoLang.g:3407:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCarAccess().getLeftCurlyBracketKeyword_2()); 
            }
            match(input,16,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCarAccess().getLeftCurlyBracketKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__Group__2__Impl"


    // $ANTLR start "rule__Car__Group__3"
    // InternalLegoLang.g:3416:1: rule__Car__Group__3 : rule__Car__Group__3__Impl rule__Car__Group__4 ;
    public final void rule__Car__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3420:1: ( rule__Car__Group__3__Impl rule__Car__Group__4 )
            // InternalLegoLang.g:3421:2: rule__Car__Group__3__Impl rule__Car__Group__4
            {
            pushFollow(FOLLOW_12);
            rule__Car__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Car__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__Group__3"


    // $ANTLR start "rule__Car__Group__3__Impl"
    // InternalLegoLang.g:3428:1: rule__Car__Group__3__Impl : ( ( rule__Car__SensorAssignment_3 )* ) ;
    public final void rule__Car__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3432:1: ( ( ( rule__Car__SensorAssignment_3 )* ) )
            // InternalLegoLang.g:3433:1: ( ( rule__Car__SensorAssignment_3 )* )
            {
            // InternalLegoLang.g:3433:1: ( ( rule__Car__SensorAssignment_3 )* )
            // InternalLegoLang.g:3434:2: ( rule__Car__SensorAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCarAccess().getSensorAssignment_3()); 
            }
            // InternalLegoLang.g:3435:2: ( rule__Car__SensorAssignment_3 )*
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( ((LA16_0>=25 && LA16_0<=29)) ) {
                    alt16=1;
                }


                switch (alt16) {
            	case 1 :
            	    // InternalLegoLang.g:3435:3: rule__Car__SensorAssignment_3
            	    {
            	    pushFollow(FOLLOW_13);
            	    rule__Car__SensorAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop16;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCarAccess().getSensorAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__Group__3__Impl"


    // $ANTLR start "rule__Car__Group__4"
    // InternalLegoLang.g:3443:1: rule__Car__Group__4 : rule__Car__Group__4__Impl rule__Car__Group__5 ;
    public final void rule__Car__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3447:1: ( rule__Car__Group__4__Impl rule__Car__Group__5 )
            // InternalLegoLang.g:3448:2: rule__Car__Group__4__Impl rule__Car__Group__5
            {
            pushFollow(FOLLOW_12);
            rule__Car__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Car__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__Group__4"


    // $ANTLR start "rule__Car__Group__4__Impl"
    // InternalLegoLang.g:3455:1: rule__Car__Group__4__Impl : ( ( rule__Car__EngineAssignment_4 )* ) ;
    public final void rule__Car__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3459:1: ( ( ( rule__Car__EngineAssignment_4 )* ) )
            // InternalLegoLang.g:3460:1: ( ( rule__Car__EngineAssignment_4 )* )
            {
            // InternalLegoLang.g:3460:1: ( ( rule__Car__EngineAssignment_4 )* )
            // InternalLegoLang.g:3461:2: ( rule__Car__EngineAssignment_4 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCarAccess().getEngineAssignment_4()); 
            }
            // InternalLegoLang.g:3462:2: ( rule__Car__EngineAssignment_4 )*
            loop17:
            do {
                int alt17=2;
                int LA17_0 = input.LA(1);

                if ( (LA17_0==21||(LA17_0>=23 && LA17_0<=24)) ) {
                    alt17=1;
                }


                switch (alt17) {
            	case 1 :
            	    // InternalLegoLang.g:3462:3: rule__Car__EngineAssignment_4
            	    {
            	    pushFollow(FOLLOW_14);
            	    rule__Car__EngineAssignment_4();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop17;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCarAccess().getEngineAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__Group__4__Impl"


    // $ANTLR start "rule__Car__Group__5"
    // InternalLegoLang.g:3470:1: rule__Car__Group__5 : rule__Car__Group__5__Impl ;
    public final void rule__Car__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3474:1: ( rule__Car__Group__5__Impl )
            // InternalLegoLang.g:3475:2: rule__Car__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Car__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__Group__5"


    // $ANTLR start "rule__Car__Group__5__Impl"
    // InternalLegoLang.g:3481:1: rule__Car__Group__5__Impl : ( '}' ) ;
    public final void rule__Car__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3485:1: ( ( '}' ) )
            // InternalLegoLang.g:3486:1: ( '}' )
            {
            // InternalLegoLang.g:3486:1: ( '}' )
            // InternalLegoLang.g:3487:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCarAccess().getRightCurlyBracketKeyword_5()); 
            }
            match(input,18,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCarAccess().getRightCurlyBracketKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__Group__5__Impl"


    // $ANTLR start "rule__VitesseOperation__Group__0"
    // InternalLegoLang.g:3497:1: rule__VitesseOperation__Group__0 : rule__VitesseOperation__Group__0__Impl rule__VitesseOperation__Group__1 ;
    public final void rule__VitesseOperation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3501:1: ( rule__VitesseOperation__Group__0__Impl rule__VitesseOperation__Group__1 )
            // InternalLegoLang.g:3502:2: rule__VitesseOperation__Group__0__Impl rule__VitesseOperation__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__VitesseOperation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VitesseOperation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__Group__0"


    // $ANTLR start "rule__VitesseOperation__Group__0__Impl"
    // InternalLegoLang.g:3509:1: rule__VitesseOperation__Group__0__Impl : ( 'set' ) ;
    public final void rule__VitesseOperation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3513:1: ( ( 'set' ) )
            // InternalLegoLang.g:3514:1: ( 'set' )
            {
            // InternalLegoLang.g:3514:1: ( 'set' )
            // InternalLegoLang.g:3515:2: 'set'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVitesseOperationAccess().getSetKeyword_0()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVitesseOperationAccess().getSetKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__Group__0__Impl"


    // $ANTLR start "rule__VitesseOperation__Group__1"
    // InternalLegoLang.g:3524:1: rule__VitesseOperation__Group__1 : rule__VitesseOperation__Group__1__Impl rule__VitesseOperation__Group__2 ;
    public final void rule__VitesseOperation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3528:1: ( rule__VitesseOperation__Group__1__Impl rule__VitesseOperation__Group__2 )
            // InternalLegoLang.g:3529:2: rule__VitesseOperation__Group__1__Impl rule__VitesseOperation__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__VitesseOperation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VitesseOperation__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__Group__1"


    // $ANTLR start "rule__VitesseOperation__Group__1__Impl"
    // InternalLegoLang.g:3536:1: rule__VitesseOperation__Group__1__Impl : ( 'vitesse' ) ;
    public final void rule__VitesseOperation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3540:1: ( ( 'vitesse' ) )
            // InternalLegoLang.g:3541:1: ( 'vitesse' )
            {
            // InternalLegoLang.g:3541:1: ( 'vitesse' )
            // InternalLegoLang.g:3542:2: 'vitesse'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVitesseOperationAccess().getVitesseKeyword_1()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVitesseOperationAccess().getVitesseKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__Group__1__Impl"


    // $ANTLR start "rule__VitesseOperation__Group__2"
    // InternalLegoLang.g:3551:1: rule__VitesseOperation__Group__2 : rule__VitesseOperation__Group__2__Impl rule__VitesseOperation__Group__3 ;
    public final void rule__VitesseOperation__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3555:1: ( rule__VitesseOperation__Group__2__Impl rule__VitesseOperation__Group__3 )
            // InternalLegoLang.g:3556:2: rule__VitesseOperation__Group__2__Impl rule__VitesseOperation__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__VitesseOperation__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VitesseOperation__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__Group__2"


    // $ANTLR start "rule__VitesseOperation__Group__2__Impl"
    // InternalLegoLang.g:3563:1: rule__VitesseOperation__Group__2__Impl : ( '(' ) ;
    public final void rule__VitesseOperation__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3567:1: ( ( '(' ) )
            // InternalLegoLang.g:3568:1: ( '(' )
            {
            // InternalLegoLang.g:3568:1: ( '(' )
            // InternalLegoLang.g:3569:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVitesseOperationAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVitesseOperationAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__Group__2__Impl"


    // $ANTLR start "rule__VitesseOperation__Group__3"
    // InternalLegoLang.g:3578:1: rule__VitesseOperation__Group__3 : rule__VitesseOperation__Group__3__Impl rule__VitesseOperation__Group__4 ;
    public final void rule__VitesseOperation__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3582:1: ( rule__VitesseOperation__Group__3__Impl rule__VitesseOperation__Group__4 )
            // InternalLegoLang.g:3583:2: rule__VitesseOperation__Group__3__Impl rule__VitesseOperation__Group__4
            {
            pushFollow(FOLLOW_17);
            rule__VitesseOperation__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VitesseOperation__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__Group__3"


    // $ANTLR start "rule__VitesseOperation__Group__3__Impl"
    // InternalLegoLang.g:3590:1: rule__VitesseOperation__Group__3__Impl : ( ( rule__VitesseOperation__WheelengineAssignment_3 ) ) ;
    public final void rule__VitesseOperation__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3594:1: ( ( ( rule__VitesseOperation__WheelengineAssignment_3 ) ) )
            // InternalLegoLang.g:3595:1: ( ( rule__VitesseOperation__WheelengineAssignment_3 ) )
            {
            // InternalLegoLang.g:3595:1: ( ( rule__VitesseOperation__WheelengineAssignment_3 ) )
            // InternalLegoLang.g:3596:2: ( rule__VitesseOperation__WheelengineAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVitesseOperationAccess().getWheelengineAssignment_3()); 
            }
            // InternalLegoLang.g:3597:2: ( rule__VitesseOperation__WheelengineAssignment_3 )
            // InternalLegoLang.g:3597:3: rule__VitesseOperation__WheelengineAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__VitesseOperation__WheelengineAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVitesseOperationAccess().getWheelengineAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__Group__3__Impl"


    // $ANTLR start "rule__VitesseOperation__Group__4"
    // InternalLegoLang.g:3605:1: rule__VitesseOperation__Group__4 : rule__VitesseOperation__Group__4__Impl rule__VitesseOperation__Group__5 ;
    public final void rule__VitesseOperation__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3609:1: ( rule__VitesseOperation__Group__4__Impl rule__VitesseOperation__Group__5 )
            // InternalLegoLang.g:3610:2: rule__VitesseOperation__Group__4__Impl rule__VitesseOperation__Group__5
            {
            pushFollow(FOLLOW_18);
            rule__VitesseOperation__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VitesseOperation__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__Group__4"


    // $ANTLR start "rule__VitesseOperation__Group__4__Impl"
    // InternalLegoLang.g:3617:1: rule__VitesseOperation__Group__4__Impl : ( ')' ) ;
    public final void rule__VitesseOperation__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3621:1: ( ( ')' ) )
            // InternalLegoLang.g:3622:1: ( ')' )
            {
            // InternalLegoLang.g:3622:1: ( ')' )
            // InternalLegoLang.g:3623:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVitesseOperationAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVitesseOperationAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__Group__4__Impl"


    // $ANTLR start "rule__VitesseOperation__Group__5"
    // InternalLegoLang.g:3632:1: rule__VitesseOperation__Group__5 : rule__VitesseOperation__Group__5__Impl rule__VitesseOperation__Group__6 ;
    public final void rule__VitesseOperation__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3636:1: ( rule__VitesseOperation__Group__5__Impl rule__VitesseOperation__Group__6 )
            // InternalLegoLang.g:3637:2: rule__VitesseOperation__Group__5__Impl rule__VitesseOperation__Group__6
            {
            pushFollow(FOLLOW_9);
            rule__VitesseOperation__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VitesseOperation__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__Group__5"


    // $ANTLR start "rule__VitesseOperation__Group__5__Impl"
    // InternalLegoLang.g:3644:1: rule__VitesseOperation__Group__5__Impl : ( '=' ) ;
    public final void rule__VitesseOperation__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3648:1: ( ( '=' ) )
            // InternalLegoLang.g:3649:1: ( '=' )
            {
            // InternalLegoLang.g:3649:1: ( '=' )
            // InternalLegoLang.g:3650:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVitesseOperationAccess().getEqualsSignKeyword_5()); 
            }
            match(input,35,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVitesseOperationAccess().getEqualsSignKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__Group__5__Impl"


    // $ANTLR start "rule__VitesseOperation__Group__6"
    // InternalLegoLang.g:3659:1: rule__VitesseOperation__Group__6 : rule__VitesseOperation__Group__6__Impl ;
    public final void rule__VitesseOperation__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3663:1: ( rule__VitesseOperation__Group__6__Impl )
            // InternalLegoLang.g:3664:2: rule__VitesseOperation__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VitesseOperation__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__Group__6"


    // $ANTLR start "rule__VitesseOperation__Group__6__Impl"
    // InternalLegoLang.g:3670:1: rule__VitesseOperation__Group__6__Impl : ( ( rule__VitesseOperation__RightAssignment_6 ) ) ;
    public final void rule__VitesseOperation__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3674:1: ( ( ( rule__VitesseOperation__RightAssignment_6 ) ) )
            // InternalLegoLang.g:3675:1: ( ( rule__VitesseOperation__RightAssignment_6 ) )
            {
            // InternalLegoLang.g:3675:1: ( ( rule__VitesseOperation__RightAssignment_6 ) )
            // InternalLegoLang.g:3676:2: ( rule__VitesseOperation__RightAssignment_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVitesseOperationAccess().getRightAssignment_6()); 
            }
            // InternalLegoLang.g:3677:2: ( rule__VitesseOperation__RightAssignment_6 )
            // InternalLegoLang.g:3677:3: rule__VitesseOperation__RightAssignment_6
            {
            pushFollow(FOLLOW_2);
            rule__VitesseOperation__RightAssignment_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVitesseOperationAccess().getRightAssignment_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__Group__6__Impl"


    // $ANTLR start "rule__BreakMotor__Group__0"
    // InternalLegoLang.g:3686:1: rule__BreakMotor__Group__0 : rule__BreakMotor__Group__0__Impl rule__BreakMotor__Group__1 ;
    public final void rule__BreakMotor__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3690:1: ( rule__BreakMotor__Group__0__Impl rule__BreakMotor__Group__1 )
            // InternalLegoLang.g:3691:2: rule__BreakMotor__Group__0__Impl rule__BreakMotor__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__BreakMotor__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BreakMotor__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakMotor__Group__0"


    // $ANTLR start "rule__BreakMotor__Group__0__Impl"
    // InternalLegoLang.g:3698:1: rule__BreakMotor__Group__0__Impl : ( 'break' ) ;
    public final void rule__BreakMotor__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3702:1: ( ( 'break' ) )
            // InternalLegoLang.g:3703:1: ( 'break' )
            {
            // InternalLegoLang.g:3703:1: ( 'break' )
            // InternalLegoLang.g:3704:2: 'break'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakMotorAccess().getBreakKeyword_0()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakMotorAccess().getBreakKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakMotor__Group__0__Impl"


    // $ANTLR start "rule__BreakMotor__Group__1"
    // InternalLegoLang.g:3713:1: rule__BreakMotor__Group__1 : rule__BreakMotor__Group__1__Impl rule__BreakMotor__Group__2 ;
    public final void rule__BreakMotor__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3717:1: ( rule__BreakMotor__Group__1__Impl rule__BreakMotor__Group__2 )
            // InternalLegoLang.g:3718:2: rule__BreakMotor__Group__1__Impl rule__BreakMotor__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__BreakMotor__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BreakMotor__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakMotor__Group__1"


    // $ANTLR start "rule__BreakMotor__Group__1__Impl"
    // InternalLegoLang.g:3725:1: rule__BreakMotor__Group__1__Impl : ( 'motor' ) ;
    public final void rule__BreakMotor__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3729:1: ( ( 'motor' ) )
            // InternalLegoLang.g:3730:1: ( 'motor' )
            {
            // InternalLegoLang.g:3730:1: ( 'motor' )
            // InternalLegoLang.g:3731:2: 'motor'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakMotorAccess().getMotorKeyword_1()); 
            }
            match(input,37,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakMotorAccess().getMotorKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakMotor__Group__1__Impl"


    // $ANTLR start "rule__BreakMotor__Group__2"
    // InternalLegoLang.g:3740:1: rule__BreakMotor__Group__2 : rule__BreakMotor__Group__2__Impl rule__BreakMotor__Group__3 ;
    public final void rule__BreakMotor__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3744:1: ( rule__BreakMotor__Group__2__Impl rule__BreakMotor__Group__3 )
            // InternalLegoLang.g:3745:2: rule__BreakMotor__Group__2__Impl rule__BreakMotor__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__BreakMotor__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BreakMotor__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakMotor__Group__2"


    // $ANTLR start "rule__BreakMotor__Group__2__Impl"
    // InternalLegoLang.g:3752:1: rule__BreakMotor__Group__2__Impl : ( '(' ) ;
    public final void rule__BreakMotor__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3756:1: ( ( '(' ) )
            // InternalLegoLang.g:3757:1: ( '(' )
            {
            // InternalLegoLang.g:3757:1: ( '(' )
            // InternalLegoLang.g:3758:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakMotorAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakMotorAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakMotor__Group__2__Impl"


    // $ANTLR start "rule__BreakMotor__Group__3"
    // InternalLegoLang.g:3767:1: rule__BreakMotor__Group__3 : rule__BreakMotor__Group__3__Impl rule__BreakMotor__Group__4 ;
    public final void rule__BreakMotor__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3771:1: ( rule__BreakMotor__Group__3__Impl rule__BreakMotor__Group__4 )
            // InternalLegoLang.g:3772:2: rule__BreakMotor__Group__3__Impl rule__BreakMotor__Group__4
            {
            pushFollow(FOLLOW_17);
            rule__BreakMotor__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BreakMotor__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakMotor__Group__3"


    // $ANTLR start "rule__BreakMotor__Group__3__Impl"
    // InternalLegoLang.g:3779:1: rule__BreakMotor__Group__3__Impl : ( ( rule__BreakMotor__EngineAssignment_3 ) ) ;
    public final void rule__BreakMotor__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3783:1: ( ( ( rule__BreakMotor__EngineAssignment_3 ) ) )
            // InternalLegoLang.g:3784:1: ( ( rule__BreakMotor__EngineAssignment_3 ) )
            {
            // InternalLegoLang.g:3784:1: ( ( rule__BreakMotor__EngineAssignment_3 ) )
            // InternalLegoLang.g:3785:2: ( rule__BreakMotor__EngineAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakMotorAccess().getEngineAssignment_3()); 
            }
            // InternalLegoLang.g:3786:2: ( rule__BreakMotor__EngineAssignment_3 )
            // InternalLegoLang.g:3786:3: rule__BreakMotor__EngineAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__BreakMotor__EngineAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakMotorAccess().getEngineAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakMotor__Group__3__Impl"


    // $ANTLR start "rule__BreakMotor__Group__4"
    // InternalLegoLang.g:3794:1: rule__BreakMotor__Group__4 : rule__BreakMotor__Group__4__Impl ;
    public final void rule__BreakMotor__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3798:1: ( rule__BreakMotor__Group__4__Impl )
            // InternalLegoLang.g:3799:2: rule__BreakMotor__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BreakMotor__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakMotor__Group__4"


    // $ANTLR start "rule__BreakMotor__Group__4__Impl"
    // InternalLegoLang.g:3805:1: rule__BreakMotor__Group__4__Impl : ( ')' ) ;
    public final void rule__BreakMotor__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3809:1: ( ( ')' ) )
            // InternalLegoLang.g:3810:1: ( ')' )
            {
            // InternalLegoLang.g:3810:1: ( ')' )
            // InternalLegoLang.g:3811:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakMotorAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakMotorAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakMotor__Group__4__Impl"


    // $ANTLR start "rule__PositionOperation__Group__0"
    // InternalLegoLang.g:3821:1: rule__PositionOperation__Group__0 : rule__PositionOperation__Group__0__Impl rule__PositionOperation__Group__1 ;
    public final void rule__PositionOperation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3825:1: ( rule__PositionOperation__Group__0__Impl rule__PositionOperation__Group__1 )
            // InternalLegoLang.g:3826:2: rule__PositionOperation__Group__0__Impl rule__PositionOperation__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__PositionOperation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PositionOperation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__Group__0"


    // $ANTLR start "rule__PositionOperation__Group__0__Impl"
    // InternalLegoLang.g:3833:1: rule__PositionOperation__Group__0__Impl : ( 'set' ) ;
    public final void rule__PositionOperation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3837:1: ( ( 'set' ) )
            // InternalLegoLang.g:3838:1: ( 'set' )
            {
            // InternalLegoLang.g:3838:1: ( 'set' )
            // InternalLegoLang.g:3839:2: 'set'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPositionOperationAccess().getSetKeyword_0()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPositionOperationAccess().getSetKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__Group__0__Impl"


    // $ANTLR start "rule__PositionOperation__Group__1"
    // InternalLegoLang.g:3848:1: rule__PositionOperation__Group__1 : rule__PositionOperation__Group__1__Impl rule__PositionOperation__Group__2 ;
    public final void rule__PositionOperation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3852:1: ( rule__PositionOperation__Group__1__Impl rule__PositionOperation__Group__2 )
            // InternalLegoLang.g:3853:2: rule__PositionOperation__Group__1__Impl rule__PositionOperation__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__PositionOperation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PositionOperation__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__Group__1"


    // $ANTLR start "rule__PositionOperation__Group__1__Impl"
    // InternalLegoLang.g:3860:1: rule__PositionOperation__Group__1__Impl : ( 'degres' ) ;
    public final void rule__PositionOperation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3864:1: ( ( 'degres' ) )
            // InternalLegoLang.g:3865:1: ( 'degres' )
            {
            // InternalLegoLang.g:3865:1: ( 'degres' )
            // InternalLegoLang.g:3866:2: 'degres'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPositionOperationAccess().getDegresKeyword_1()); 
            }
            match(input,38,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPositionOperationAccess().getDegresKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__Group__1__Impl"


    // $ANTLR start "rule__PositionOperation__Group__2"
    // InternalLegoLang.g:3875:1: rule__PositionOperation__Group__2 : rule__PositionOperation__Group__2__Impl rule__PositionOperation__Group__3 ;
    public final void rule__PositionOperation__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3879:1: ( rule__PositionOperation__Group__2__Impl rule__PositionOperation__Group__3 )
            // InternalLegoLang.g:3880:2: rule__PositionOperation__Group__2__Impl rule__PositionOperation__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__PositionOperation__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PositionOperation__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__Group__2"


    // $ANTLR start "rule__PositionOperation__Group__2__Impl"
    // InternalLegoLang.g:3887:1: rule__PositionOperation__Group__2__Impl : ( '(' ) ;
    public final void rule__PositionOperation__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3891:1: ( ( '(' ) )
            // InternalLegoLang.g:3892:1: ( '(' )
            {
            // InternalLegoLang.g:3892:1: ( '(' )
            // InternalLegoLang.g:3893:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPositionOperationAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPositionOperationAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__Group__2__Impl"


    // $ANTLR start "rule__PositionOperation__Group__3"
    // InternalLegoLang.g:3902:1: rule__PositionOperation__Group__3 : rule__PositionOperation__Group__3__Impl rule__PositionOperation__Group__4 ;
    public final void rule__PositionOperation__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3906:1: ( rule__PositionOperation__Group__3__Impl rule__PositionOperation__Group__4 )
            // InternalLegoLang.g:3907:2: rule__PositionOperation__Group__3__Impl rule__PositionOperation__Group__4
            {
            pushFollow(FOLLOW_17);
            rule__PositionOperation__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PositionOperation__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__Group__3"


    // $ANTLR start "rule__PositionOperation__Group__3__Impl"
    // InternalLegoLang.g:3914:1: rule__PositionOperation__Group__3__Impl : ( ( rule__PositionOperation__MotorizedarmengineAssignment_3 ) ) ;
    public final void rule__PositionOperation__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3918:1: ( ( ( rule__PositionOperation__MotorizedarmengineAssignment_3 ) ) )
            // InternalLegoLang.g:3919:1: ( ( rule__PositionOperation__MotorizedarmengineAssignment_3 ) )
            {
            // InternalLegoLang.g:3919:1: ( ( rule__PositionOperation__MotorizedarmengineAssignment_3 ) )
            // InternalLegoLang.g:3920:2: ( rule__PositionOperation__MotorizedarmengineAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPositionOperationAccess().getMotorizedarmengineAssignment_3()); 
            }
            // InternalLegoLang.g:3921:2: ( rule__PositionOperation__MotorizedarmengineAssignment_3 )
            // InternalLegoLang.g:3921:3: rule__PositionOperation__MotorizedarmengineAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__PositionOperation__MotorizedarmengineAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPositionOperationAccess().getMotorizedarmengineAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__Group__3__Impl"


    // $ANTLR start "rule__PositionOperation__Group__4"
    // InternalLegoLang.g:3929:1: rule__PositionOperation__Group__4 : rule__PositionOperation__Group__4__Impl rule__PositionOperation__Group__5 ;
    public final void rule__PositionOperation__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3933:1: ( rule__PositionOperation__Group__4__Impl rule__PositionOperation__Group__5 )
            // InternalLegoLang.g:3934:2: rule__PositionOperation__Group__4__Impl rule__PositionOperation__Group__5
            {
            pushFollow(FOLLOW_18);
            rule__PositionOperation__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PositionOperation__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__Group__4"


    // $ANTLR start "rule__PositionOperation__Group__4__Impl"
    // InternalLegoLang.g:3941:1: rule__PositionOperation__Group__4__Impl : ( ')' ) ;
    public final void rule__PositionOperation__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3945:1: ( ( ')' ) )
            // InternalLegoLang.g:3946:1: ( ')' )
            {
            // InternalLegoLang.g:3946:1: ( ')' )
            // InternalLegoLang.g:3947:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPositionOperationAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPositionOperationAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__Group__4__Impl"


    // $ANTLR start "rule__PositionOperation__Group__5"
    // InternalLegoLang.g:3956:1: rule__PositionOperation__Group__5 : rule__PositionOperation__Group__5__Impl rule__PositionOperation__Group__6 ;
    public final void rule__PositionOperation__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3960:1: ( rule__PositionOperation__Group__5__Impl rule__PositionOperation__Group__6 )
            // InternalLegoLang.g:3961:2: rule__PositionOperation__Group__5__Impl rule__PositionOperation__Group__6
            {
            pushFollow(FOLLOW_9);
            rule__PositionOperation__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PositionOperation__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__Group__5"


    // $ANTLR start "rule__PositionOperation__Group__5__Impl"
    // InternalLegoLang.g:3968:1: rule__PositionOperation__Group__5__Impl : ( '=' ) ;
    public final void rule__PositionOperation__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3972:1: ( ( '=' ) )
            // InternalLegoLang.g:3973:1: ( '=' )
            {
            // InternalLegoLang.g:3973:1: ( '=' )
            // InternalLegoLang.g:3974:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPositionOperationAccess().getEqualsSignKeyword_5()); 
            }
            match(input,35,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPositionOperationAccess().getEqualsSignKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__Group__5__Impl"


    // $ANTLR start "rule__PositionOperation__Group__6"
    // InternalLegoLang.g:3983:1: rule__PositionOperation__Group__6 : rule__PositionOperation__Group__6__Impl ;
    public final void rule__PositionOperation__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3987:1: ( rule__PositionOperation__Group__6__Impl )
            // InternalLegoLang.g:3988:2: rule__PositionOperation__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PositionOperation__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__Group__6"


    // $ANTLR start "rule__PositionOperation__Group__6__Impl"
    // InternalLegoLang.g:3994:1: rule__PositionOperation__Group__6__Impl : ( ( rule__PositionOperation__RightAssignment_6 ) ) ;
    public final void rule__PositionOperation__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3998:1: ( ( ( rule__PositionOperation__RightAssignment_6 ) ) )
            // InternalLegoLang.g:3999:1: ( ( rule__PositionOperation__RightAssignment_6 ) )
            {
            // InternalLegoLang.g:3999:1: ( ( rule__PositionOperation__RightAssignment_6 ) )
            // InternalLegoLang.g:4000:2: ( rule__PositionOperation__RightAssignment_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPositionOperationAccess().getRightAssignment_6()); 
            }
            // InternalLegoLang.g:4001:2: ( rule__PositionOperation__RightAssignment_6 )
            // InternalLegoLang.g:4001:3: rule__PositionOperation__RightAssignment_6
            {
            pushFollow(FOLLOW_2);
            rule__PositionOperation__RightAssignment_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPositionOperationAccess().getRightAssignment_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__Group__6__Impl"


    // $ANTLR start "rule__ForceOperation__Group__0"
    // InternalLegoLang.g:4010:1: rule__ForceOperation__Group__0 : rule__ForceOperation__Group__0__Impl rule__ForceOperation__Group__1 ;
    public final void rule__ForceOperation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4014:1: ( rule__ForceOperation__Group__0__Impl rule__ForceOperation__Group__1 )
            // InternalLegoLang.g:4015:2: rule__ForceOperation__Group__0__Impl rule__ForceOperation__Group__1
            {
            pushFollow(FOLLOW_21);
            rule__ForceOperation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForceOperation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__Group__0"


    // $ANTLR start "rule__ForceOperation__Group__0__Impl"
    // InternalLegoLang.g:4022:1: rule__ForceOperation__Group__0__Impl : ( 'set' ) ;
    public final void rule__ForceOperation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4026:1: ( ( 'set' ) )
            // InternalLegoLang.g:4027:1: ( 'set' )
            {
            // InternalLegoLang.g:4027:1: ( 'set' )
            // InternalLegoLang.g:4028:2: 'set'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForceOperationAccess().getSetKeyword_0()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForceOperationAccess().getSetKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__Group__0__Impl"


    // $ANTLR start "rule__ForceOperation__Group__1"
    // InternalLegoLang.g:4037:1: rule__ForceOperation__Group__1 : rule__ForceOperation__Group__1__Impl rule__ForceOperation__Group__2 ;
    public final void rule__ForceOperation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4041:1: ( rule__ForceOperation__Group__1__Impl rule__ForceOperation__Group__2 )
            // InternalLegoLang.g:4042:2: rule__ForceOperation__Group__1__Impl rule__ForceOperation__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__ForceOperation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForceOperation__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__Group__1"


    // $ANTLR start "rule__ForceOperation__Group__1__Impl"
    // InternalLegoLang.g:4049:1: rule__ForceOperation__Group__1__Impl : ( 'strength' ) ;
    public final void rule__ForceOperation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4053:1: ( ( 'strength' ) )
            // InternalLegoLang.g:4054:1: ( 'strength' )
            {
            // InternalLegoLang.g:4054:1: ( 'strength' )
            // InternalLegoLang.g:4055:2: 'strength'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForceOperationAccess().getStrengthKeyword_1()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForceOperationAccess().getStrengthKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__Group__1__Impl"


    // $ANTLR start "rule__ForceOperation__Group__2"
    // InternalLegoLang.g:4064:1: rule__ForceOperation__Group__2 : rule__ForceOperation__Group__2__Impl rule__ForceOperation__Group__3 ;
    public final void rule__ForceOperation__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4068:1: ( rule__ForceOperation__Group__2__Impl rule__ForceOperation__Group__3 )
            // InternalLegoLang.g:4069:2: rule__ForceOperation__Group__2__Impl rule__ForceOperation__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__ForceOperation__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForceOperation__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__Group__2"


    // $ANTLR start "rule__ForceOperation__Group__2__Impl"
    // InternalLegoLang.g:4076:1: rule__ForceOperation__Group__2__Impl : ( '(' ) ;
    public final void rule__ForceOperation__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4080:1: ( ( '(' ) )
            // InternalLegoLang.g:4081:1: ( '(' )
            {
            // InternalLegoLang.g:4081:1: ( '(' )
            // InternalLegoLang.g:4082:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForceOperationAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForceOperationAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__Group__2__Impl"


    // $ANTLR start "rule__ForceOperation__Group__3"
    // InternalLegoLang.g:4091:1: rule__ForceOperation__Group__3 : rule__ForceOperation__Group__3__Impl rule__ForceOperation__Group__4 ;
    public final void rule__ForceOperation__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4095:1: ( rule__ForceOperation__Group__3__Impl rule__ForceOperation__Group__4 )
            // InternalLegoLang.g:4096:2: rule__ForceOperation__Group__3__Impl rule__ForceOperation__Group__4
            {
            pushFollow(FOLLOW_17);
            rule__ForceOperation__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForceOperation__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__Group__3"


    // $ANTLR start "rule__ForceOperation__Group__3__Impl"
    // InternalLegoLang.g:4103:1: rule__ForceOperation__Group__3__Impl : ( ( rule__ForceOperation__PaintballlauncherengineAssignment_3 ) ) ;
    public final void rule__ForceOperation__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4107:1: ( ( ( rule__ForceOperation__PaintballlauncherengineAssignment_3 ) ) )
            // InternalLegoLang.g:4108:1: ( ( rule__ForceOperation__PaintballlauncherengineAssignment_3 ) )
            {
            // InternalLegoLang.g:4108:1: ( ( rule__ForceOperation__PaintballlauncherengineAssignment_3 ) )
            // InternalLegoLang.g:4109:2: ( rule__ForceOperation__PaintballlauncherengineAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForceOperationAccess().getPaintballlauncherengineAssignment_3()); 
            }
            // InternalLegoLang.g:4110:2: ( rule__ForceOperation__PaintballlauncherengineAssignment_3 )
            // InternalLegoLang.g:4110:3: rule__ForceOperation__PaintballlauncherengineAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__ForceOperation__PaintballlauncherengineAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForceOperationAccess().getPaintballlauncherengineAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__Group__3__Impl"


    // $ANTLR start "rule__ForceOperation__Group__4"
    // InternalLegoLang.g:4118:1: rule__ForceOperation__Group__4 : rule__ForceOperation__Group__4__Impl rule__ForceOperation__Group__5 ;
    public final void rule__ForceOperation__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4122:1: ( rule__ForceOperation__Group__4__Impl rule__ForceOperation__Group__5 )
            // InternalLegoLang.g:4123:2: rule__ForceOperation__Group__4__Impl rule__ForceOperation__Group__5
            {
            pushFollow(FOLLOW_18);
            rule__ForceOperation__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForceOperation__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__Group__4"


    // $ANTLR start "rule__ForceOperation__Group__4__Impl"
    // InternalLegoLang.g:4130:1: rule__ForceOperation__Group__4__Impl : ( ')' ) ;
    public final void rule__ForceOperation__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4134:1: ( ( ')' ) )
            // InternalLegoLang.g:4135:1: ( ')' )
            {
            // InternalLegoLang.g:4135:1: ( ')' )
            // InternalLegoLang.g:4136:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForceOperationAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForceOperationAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__Group__4__Impl"


    // $ANTLR start "rule__ForceOperation__Group__5"
    // InternalLegoLang.g:4145:1: rule__ForceOperation__Group__5 : rule__ForceOperation__Group__5__Impl rule__ForceOperation__Group__6 ;
    public final void rule__ForceOperation__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4149:1: ( rule__ForceOperation__Group__5__Impl rule__ForceOperation__Group__6 )
            // InternalLegoLang.g:4150:2: rule__ForceOperation__Group__5__Impl rule__ForceOperation__Group__6
            {
            pushFollow(FOLLOW_9);
            rule__ForceOperation__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForceOperation__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__Group__5"


    // $ANTLR start "rule__ForceOperation__Group__5__Impl"
    // InternalLegoLang.g:4157:1: rule__ForceOperation__Group__5__Impl : ( '=' ) ;
    public final void rule__ForceOperation__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4161:1: ( ( '=' ) )
            // InternalLegoLang.g:4162:1: ( '=' )
            {
            // InternalLegoLang.g:4162:1: ( '=' )
            // InternalLegoLang.g:4163:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForceOperationAccess().getEqualsSignKeyword_5()); 
            }
            match(input,35,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForceOperationAccess().getEqualsSignKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__Group__5__Impl"


    // $ANTLR start "rule__ForceOperation__Group__6"
    // InternalLegoLang.g:4172:1: rule__ForceOperation__Group__6 : rule__ForceOperation__Group__6__Impl ;
    public final void rule__ForceOperation__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4176:1: ( rule__ForceOperation__Group__6__Impl )
            // InternalLegoLang.g:4177:2: rule__ForceOperation__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ForceOperation__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__Group__6"


    // $ANTLR start "rule__ForceOperation__Group__6__Impl"
    // InternalLegoLang.g:4183:1: rule__ForceOperation__Group__6__Impl : ( ( rule__ForceOperation__RightAssignment_6 ) ) ;
    public final void rule__ForceOperation__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4187:1: ( ( ( rule__ForceOperation__RightAssignment_6 ) ) )
            // InternalLegoLang.g:4188:1: ( ( rule__ForceOperation__RightAssignment_6 ) )
            {
            // InternalLegoLang.g:4188:1: ( ( rule__ForceOperation__RightAssignment_6 ) )
            // InternalLegoLang.g:4189:2: ( rule__ForceOperation__RightAssignment_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForceOperationAccess().getRightAssignment_6()); 
            }
            // InternalLegoLang.g:4190:2: ( rule__ForceOperation__RightAssignment_6 )
            // InternalLegoLang.g:4190:3: rule__ForceOperation__RightAssignment_6
            {
            pushFollow(FOLLOW_2);
            rule__ForceOperation__RightAssignment_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForceOperationAccess().getRightAssignment_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__Group__6__Impl"


    // $ANTLR start "rule__ColorOperation__Group__0"
    // InternalLegoLang.g:4199:1: rule__ColorOperation__Group__0 : rule__ColorOperation__Group__0__Impl rule__ColorOperation__Group__1 ;
    public final void rule__ColorOperation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4203:1: ( rule__ColorOperation__Group__0__Impl rule__ColorOperation__Group__1 )
            // InternalLegoLang.g:4204:2: rule__ColorOperation__Group__0__Impl rule__ColorOperation__Group__1
            {
            pushFollow(FOLLOW_22);
            rule__ColorOperation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColorOperation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorOperation__Group__0"


    // $ANTLR start "rule__ColorOperation__Group__0__Impl"
    // InternalLegoLang.g:4211:1: rule__ColorOperation__Group__0__Impl : ( 'get' ) ;
    public final void rule__ColorOperation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4215:1: ( ( 'get' ) )
            // InternalLegoLang.g:4216:1: ( 'get' )
            {
            // InternalLegoLang.g:4216:1: ( 'get' )
            // InternalLegoLang.g:4217:2: 'get'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorOperationAccess().getGetKeyword_0()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorOperationAccess().getGetKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorOperation__Group__0__Impl"


    // $ANTLR start "rule__ColorOperation__Group__1"
    // InternalLegoLang.g:4226:1: rule__ColorOperation__Group__1 : rule__ColorOperation__Group__1__Impl rule__ColorOperation__Group__2 ;
    public final void rule__ColorOperation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4230:1: ( rule__ColorOperation__Group__1__Impl rule__ColorOperation__Group__2 )
            // InternalLegoLang.g:4231:2: rule__ColorOperation__Group__1__Impl rule__ColorOperation__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__ColorOperation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColorOperation__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorOperation__Group__1"


    // $ANTLR start "rule__ColorOperation__Group__1__Impl"
    // InternalLegoLang.g:4238:1: rule__ColorOperation__Group__1__Impl : ( 'color' ) ;
    public final void rule__ColorOperation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4242:1: ( ( 'color' ) )
            // InternalLegoLang.g:4243:1: ( 'color' )
            {
            // InternalLegoLang.g:4243:1: ( 'color' )
            // InternalLegoLang.g:4244:2: 'color'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorOperationAccess().getColorKeyword_1()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorOperationAccess().getColorKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorOperation__Group__1__Impl"


    // $ANTLR start "rule__ColorOperation__Group__2"
    // InternalLegoLang.g:4253:1: rule__ColorOperation__Group__2 : rule__ColorOperation__Group__2__Impl rule__ColorOperation__Group__3 ;
    public final void rule__ColorOperation__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4257:1: ( rule__ColorOperation__Group__2__Impl rule__ColorOperation__Group__3 )
            // InternalLegoLang.g:4258:2: rule__ColorOperation__Group__2__Impl rule__ColorOperation__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__ColorOperation__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColorOperation__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorOperation__Group__2"


    // $ANTLR start "rule__ColorOperation__Group__2__Impl"
    // InternalLegoLang.g:4265:1: rule__ColorOperation__Group__2__Impl : ( '(' ) ;
    public final void rule__ColorOperation__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4269:1: ( ( '(' ) )
            // InternalLegoLang.g:4270:1: ( '(' )
            {
            // InternalLegoLang.g:4270:1: ( '(' )
            // InternalLegoLang.g:4271:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorOperationAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorOperationAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorOperation__Group__2__Impl"


    // $ANTLR start "rule__ColorOperation__Group__3"
    // InternalLegoLang.g:4280:1: rule__ColorOperation__Group__3 : rule__ColorOperation__Group__3__Impl rule__ColorOperation__Group__4 ;
    public final void rule__ColorOperation__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4284:1: ( rule__ColorOperation__Group__3__Impl rule__ColorOperation__Group__4 )
            // InternalLegoLang.g:4285:2: rule__ColorOperation__Group__3__Impl rule__ColorOperation__Group__4
            {
            pushFollow(FOLLOW_17);
            rule__ColorOperation__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColorOperation__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorOperation__Group__3"


    // $ANTLR start "rule__ColorOperation__Group__3__Impl"
    // InternalLegoLang.g:4292:1: rule__ColorOperation__Group__3__Impl : ( ( rule__ColorOperation__ColorsensorAssignment_3 ) ) ;
    public final void rule__ColorOperation__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4296:1: ( ( ( rule__ColorOperation__ColorsensorAssignment_3 ) ) )
            // InternalLegoLang.g:4297:1: ( ( rule__ColorOperation__ColorsensorAssignment_3 ) )
            {
            // InternalLegoLang.g:4297:1: ( ( rule__ColorOperation__ColorsensorAssignment_3 ) )
            // InternalLegoLang.g:4298:2: ( rule__ColorOperation__ColorsensorAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorOperationAccess().getColorsensorAssignment_3()); 
            }
            // InternalLegoLang.g:4299:2: ( rule__ColorOperation__ColorsensorAssignment_3 )
            // InternalLegoLang.g:4299:3: rule__ColorOperation__ColorsensorAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__ColorOperation__ColorsensorAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorOperationAccess().getColorsensorAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorOperation__Group__3__Impl"


    // $ANTLR start "rule__ColorOperation__Group__4"
    // InternalLegoLang.g:4307:1: rule__ColorOperation__Group__4 : rule__ColorOperation__Group__4__Impl ;
    public final void rule__ColorOperation__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4311:1: ( rule__ColorOperation__Group__4__Impl )
            // InternalLegoLang.g:4312:2: rule__ColorOperation__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColorOperation__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorOperation__Group__4"


    // $ANTLR start "rule__ColorOperation__Group__4__Impl"
    // InternalLegoLang.g:4318:1: rule__ColorOperation__Group__4__Impl : ( ')' ) ;
    public final void rule__ColorOperation__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4322:1: ( ( ')' ) )
            // InternalLegoLang.g:4323:1: ( ')' )
            {
            // InternalLegoLang.g:4323:1: ( ')' )
            // InternalLegoLang.g:4324:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorOperationAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorOperationAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorOperation__Group__4__Impl"


    // $ANTLR start "rule__IntensityOperation__Group__0"
    // InternalLegoLang.g:4334:1: rule__IntensityOperation__Group__0 : rule__IntensityOperation__Group__0__Impl rule__IntensityOperation__Group__1 ;
    public final void rule__IntensityOperation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4338:1: ( rule__IntensityOperation__Group__0__Impl rule__IntensityOperation__Group__1 )
            // InternalLegoLang.g:4339:2: rule__IntensityOperation__Group__0__Impl rule__IntensityOperation__Group__1
            {
            pushFollow(FOLLOW_23);
            rule__IntensityOperation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IntensityOperation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntensityOperation__Group__0"


    // $ANTLR start "rule__IntensityOperation__Group__0__Impl"
    // InternalLegoLang.g:4346:1: rule__IntensityOperation__Group__0__Impl : ( 'get' ) ;
    public final void rule__IntensityOperation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4350:1: ( ( 'get' ) )
            // InternalLegoLang.g:4351:1: ( 'get' )
            {
            // InternalLegoLang.g:4351:1: ( 'get' )
            // InternalLegoLang.g:4352:2: 'get'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntensityOperationAccess().getGetKeyword_0()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntensityOperationAccess().getGetKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntensityOperation__Group__0__Impl"


    // $ANTLR start "rule__IntensityOperation__Group__1"
    // InternalLegoLang.g:4361:1: rule__IntensityOperation__Group__1 : rule__IntensityOperation__Group__1__Impl rule__IntensityOperation__Group__2 ;
    public final void rule__IntensityOperation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4365:1: ( rule__IntensityOperation__Group__1__Impl rule__IntensityOperation__Group__2 )
            // InternalLegoLang.g:4366:2: rule__IntensityOperation__Group__1__Impl rule__IntensityOperation__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__IntensityOperation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IntensityOperation__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntensityOperation__Group__1"


    // $ANTLR start "rule__IntensityOperation__Group__1__Impl"
    // InternalLegoLang.g:4373:1: rule__IntensityOperation__Group__1__Impl : ( 'intensity' ) ;
    public final void rule__IntensityOperation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4377:1: ( ( 'intensity' ) )
            // InternalLegoLang.g:4378:1: ( 'intensity' )
            {
            // InternalLegoLang.g:4378:1: ( 'intensity' )
            // InternalLegoLang.g:4379:2: 'intensity'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntensityOperationAccess().getIntensityKeyword_1()); 
            }
            match(input,42,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntensityOperationAccess().getIntensityKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntensityOperation__Group__1__Impl"


    // $ANTLR start "rule__IntensityOperation__Group__2"
    // InternalLegoLang.g:4388:1: rule__IntensityOperation__Group__2 : rule__IntensityOperation__Group__2__Impl rule__IntensityOperation__Group__3 ;
    public final void rule__IntensityOperation__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4392:1: ( rule__IntensityOperation__Group__2__Impl rule__IntensityOperation__Group__3 )
            // InternalLegoLang.g:4393:2: rule__IntensityOperation__Group__2__Impl rule__IntensityOperation__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__IntensityOperation__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IntensityOperation__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntensityOperation__Group__2"


    // $ANTLR start "rule__IntensityOperation__Group__2__Impl"
    // InternalLegoLang.g:4400:1: rule__IntensityOperation__Group__2__Impl : ( '(' ) ;
    public final void rule__IntensityOperation__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4404:1: ( ( '(' ) )
            // InternalLegoLang.g:4405:1: ( '(' )
            {
            // InternalLegoLang.g:4405:1: ( '(' )
            // InternalLegoLang.g:4406:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntensityOperationAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntensityOperationAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntensityOperation__Group__2__Impl"


    // $ANTLR start "rule__IntensityOperation__Group__3"
    // InternalLegoLang.g:4415:1: rule__IntensityOperation__Group__3 : rule__IntensityOperation__Group__3__Impl rule__IntensityOperation__Group__4 ;
    public final void rule__IntensityOperation__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4419:1: ( rule__IntensityOperation__Group__3__Impl rule__IntensityOperation__Group__4 )
            // InternalLegoLang.g:4420:2: rule__IntensityOperation__Group__3__Impl rule__IntensityOperation__Group__4
            {
            pushFollow(FOLLOW_17);
            rule__IntensityOperation__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IntensityOperation__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntensityOperation__Group__3"


    // $ANTLR start "rule__IntensityOperation__Group__3__Impl"
    // InternalLegoLang.g:4427:1: rule__IntensityOperation__Group__3__Impl : ( ( rule__IntensityOperation__ColorsensorAssignment_3 ) ) ;
    public final void rule__IntensityOperation__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4431:1: ( ( ( rule__IntensityOperation__ColorsensorAssignment_3 ) ) )
            // InternalLegoLang.g:4432:1: ( ( rule__IntensityOperation__ColorsensorAssignment_3 ) )
            {
            // InternalLegoLang.g:4432:1: ( ( rule__IntensityOperation__ColorsensorAssignment_3 ) )
            // InternalLegoLang.g:4433:2: ( rule__IntensityOperation__ColorsensorAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntensityOperationAccess().getColorsensorAssignment_3()); 
            }
            // InternalLegoLang.g:4434:2: ( rule__IntensityOperation__ColorsensorAssignment_3 )
            // InternalLegoLang.g:4434:3: rule__IntensityOperation__ColorsensorAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__IntensityOperation__ColorsensorAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntensityOperationAccess().getColorsensorAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntensityOperation__Group__3__Impl"


    // $ANTLR start "rule__IntensityOperation__Group__4"
    // InternalLegoLang.g:4442:1: rule__IntensityOperation__Group__4 : rule__IntensityOperation__Group__4__Impl ;
    public final void rule__IntensityOperation__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4446:1: ( rule__IntensityOperation__Group__4__Impl )
            // InternalLegoLang.g:4447:2: rule__IntensityOperation__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IntensityOperation__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntensityOperation__Group__4"


    // $ANTLR start "rule__IntensityOperation__Group__4__Impl"
    // InternalLegoLang.g:4453:1: rule__IntensityOperation__Group__4__Impl : ( ')' ) ;
    public final void rule__IntensityOperation__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4457:1: ( ( ')' ) )
            // InternalLegoLang.g:4458:1: ( ')' )
            {
            // InternalLegoLang.g:4458:1: ( ')' )
            // InternalLegoLang.g:4459:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntensityOperationAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntensityOperationAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntensityOperation__Group__4__Impl"


    // $ANTLR start "rule__RangeOperation__Group__0"
    // InternalLegoLang.g:4469:1: rule__RangeOperation__Group__0 : rule__RangeOperation__Group__0__Impl rule__RangeOperation__Group__1 ;
    public final void rule__RangeOperation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4473:1: ( rule__RangeOperation__Group__0__Impl rule__RangeOperation__Group__1 )
            // InternalLegoLang.g:4474:2: rule__RangeOperation__Group__0__Impl rule__RangeOperation__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__RangeOperation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RangeOperation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeOperation__Group__0"


    // $ANTLR start "rule__RangeOperation__Group__0__Impl"
    // InternalLegoLang.g:4481:1: rule__RangeOperation__Group__0__Impl : ( 'get' ) ;
    public final void rule__RangeOperation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4485:1: ( ( 'get' ) )
            // InternalLegoLang.g:4486:1: ( 'get' )
            {
            // InternalLegoLang.g:4486:1: ( 'get' )
            // InternalLegoLang.g:4487:2: 'get'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeOperationAccess().getGetKeyword_0()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeOperationAccess().getGetKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeOperation__Group__0__Impl"


    // $ANTLR start "rule__RangeOperation__Group__1"
    // InternalLegoLang.g:4496:1: rule__RangeOperation__Group__1 : rule__RangeOperation__Group__1__Impl rule__RangeOperation__Group__2 ;
    public final void rule__RangeOperation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4500:1: ( rule__RangeOperation__Group__1__Impl rule__RangeOperation__Group__2 )
            // InternalLegoLang.g:4501:2: rule__RangeOperation__Group__1__Impl rule__RangeOperation__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__RangeOperation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RangeOperation__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeOperation__Group__1"


    // $ANTLR start "rule__RangeOperation__Group__1__Impl"
    // InternalLegoLang.g:4508:1: rule__RangeOperation__Group__1__Impl : ( 'range' ) ;
    public final void rule__RangeOperation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4512:1: ( ( 'range' ) )
            // InternalLegoLang.g:4513:1: ( 'range' )
            {
            // InternalLegoLang.g:4513:1: ( 'range' )
            // InternalLegoLang.g:4514:2: 'range'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeOperationAccess().getRangeKeyword_1()); 
            }
            match(input,43,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeOperationAccess().getRangeKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeOperation__Group__1__Impl"


    // $ANTLR start "rule__RangeOperation__Group__2"
    // InternalLegoLang.g:4523:1: rule__RangeOperation__Group__2 : rule__RangeOperation__Group__2__Impl rule__RangeOperation__Group__3 ;
    public final void rule__RangeOperation__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4527:1: ( rule__RangeOperation__Group__2__Impl rule__RangeOperation__Group__3 )
            // InternalLegoLang.g:4528:2: rule__RangeOperation__Group__2__Impl rule__RangeOperation__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__RangeOperation__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RangeOperation__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeOperation__Group__2"


    // $ANTLR start "rule__RangeOperation__Group__2__Impl"
    // InternalLegoLang.g:4535:1: rule__RangeOperation__Group__2__Impl : ( '(' ) ;
    public final void rule__RangeOperation__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4539:1: ( ( '(' ) )
            // InternalLegoLang.g:4540:1: ( '(' )
            {
            // InternalLegoLang.g:4540:1: ( '(' )
            // InternalLegoLang.g:4541:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeOperationAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeOperationAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeOperation__Group__2__Impl"


    // $ANTLR start "rule__RangeOperation__Group__3"
    // InternalLegoLang.g:4550:1: rule__RangeOperation__Group__3 : rule__RangeOperation__Group__3__Impl rule__RangeOperation__Group__4 ;
    public final void rule__RangeOperation__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4554:1: ( rule__RangeOperation__Group__3__Impl rule__RangeOperation__Group__4 )
            // InternalLegoLang.g:4555:2: rule__RangeOperation__Group__3__Impl rule__RangeOperation__Group__4
            {
            pushFollow(FOLLOW_17);
            rule__RangeOperation__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RangeOperation__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeOperation__Group__3"


    // $ANTLR start "rule__RangeOperation__Group__3__Impl"
    // InternalLegoLang.g:4562:1: rule__RangeOperation__Group__3__Impl : ( ( rule__RangeOperation__LasersensorAssignment_3 ) ) ;
    public final void rule__RangeOperation__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4566:1: ( ( ( rule__RangeOperation__LasersensorAssignment_3 ) ) )
            // InternalLegoLang.g:4567:1: ( ( rule__RangeOperation__LasersensorAssignment_3 ) )
            {
            // InternalLegoLang.g:4567:1: ( ( rule__RangeOperation__LasersensorAssignment_3 ) )
            // InternalLegoLang.g:4568:2: ( rule__RangeOperation__LasersensorAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeOperationAccess().getLasersensorAssignment_3()); 
            }
            // InternalLegoLang.g:4569:2: ( rule__RangeOperation__LasersensorAssignment_3 )
            // InternalLegoLang.g:4569:3: rule__RangeOperation__LasersensorAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__RangeOperation__LasersensorAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeOperationAccess().getLasersensorAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeOperation__Group__3__Impl"


    // $ANTLR start "rule__RangeOperation__Group__4"
    // InternalLegoLang.g:4577:1: rule__RangeOperation__Group__4 : rule__RangeOperation__Group__4__Impl ;
    public final void rule__RangeOperation__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4581:1: ( rule__RangeOperation__Group__4__Impl )
            // InternalLegoLang.g:4582:2: rule__RangeOperation__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RangeOperation__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeOperation__Group__4"


    // $ANTLR start "rule__RangeOperation__Group__4__Impl"
    // InternalLegoLang.g:4588:1: rule__RangeOperation__Group__4__Impl : ( ')' ) ;
    public final void rule__RangeOperation__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4592:1: ( ( ')' ) )
            // InternalLegoLang.g:4593:1: ( ')' )
            {
            // InternalLegoLang.g:4593:1: ( ')' )
            // InternalLegoLang.g:4594:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeOperationAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeOperationAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeOperation__Group__4__Impl"


    // $ANTLR start "rule__XGPSOperation__Group__0"
    // InternalLegoLang.g:4604:1: rule__XGPSOperation__Group__0 : rule__XGPSOperation__Group__0__Impl rule__XGPSOperation__Group__1 ;
    public final void rule__XGPSOperation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4608:1: ( rule__XGPSOperation__Group__0__Impl rule__XGPSOperation__Group__1 )
            // InternalLegoLang.g:4609:2: rule__XGPSOperation__Group__0__Impl rule__XGPSOperation__Group__1
            {
            pushFollow(FOLLOW_25);
            rule__XGPSOperation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XGPSOperation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XGPSOperation__Group__0"


    // $ANTLR start "rule__XGPSOperation__Group__0__Impl"
    // InternalLegoLang.g:4616:1: rule__XGPSOperation__Group__0__Impl : ( 'get' ) ;
    public final void rule__XGPSOperation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4620:1: ( ( 'get' ) )
            // InternalLegoLang.g:4621:1: ( 'get' )
            {
            // InternalLegoLang.g:4621:1: ( 'get' )
            // InternalLegoLang.g:4622:2: 'get'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXGPSOperationAccess().getGetKeyword_0()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXGPSOperationAccess().getGetKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XGPSOperation__Group__0__Impl"


    // $ANTLR start "rule__XGPSOperation__Group__1"
    // InternalLegoLang.g:4631:1: rule__XGPSOperation__Group__1 : rule__XGPSOperation__Group__1__Impl rule__XGPSOperation__Group__2 ;
    public final void rule__XGPSOperation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4635:1: ( rule__XGPSOperation__Group__1__Impl rule__XGPSOperation__Group__2 )
            // InternalLegoLang.g:4636:2: rule__XGPSOperation__Group__1__Impl rule__XGPSOperation__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__XGPSOperation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XGPSOperation__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XGPSOperation__Group__1"


    // $ANTLR start "rule__XGPSOperation__Group__1__Impl"
    // InternalLegoLang.g:4643:1: rule__XGPSOperation__Group__1__Impl : ( 'x' ) ;
    public final void rule__XGPSOperation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4647:1: ( ( 'x' ) )
            // InternalLegoLang.g:4648:1: ( 'x' )
            {
            // InternalLegoLang.g:4648:1: ( 'x' )
            // InternalLegoLang.g:4649:2: 'x'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXGPSOperationAccess().getXKeyword_1()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXGPSOperationAccess().getXKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XGPSOperation__Group__1__Impl"


    // $ANTLR start "rule__XGPSOperation__Group__2"
    // InternalLegoLang.g:4658:1: rule__XGPSOperation__Group__2 : rule__XGPSOperation__Group__2__Impl rule__XGPSOperation__Group__3 ;
    public final void rule__XGPSOperation__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4662:1: ( rule__XGPSOperation__Group__2__Impl rule__XGPSOperation__Group__3 )
            // InternalLegoLang.g:4663:2: rule__XGPSOperation__Group__2__Impl rule__XGPSOperation__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__XGPSOperation__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XGPSOperation__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XGPSOperation__Group__2"


    // $ANTLR start "rule__XGPSOperation__Group__2__Impl"
    // InternalLegoLang.g:4670:1: rule__XGPSOperation__Group__2__Impl : ( '(' ) ;
    public final void rule__XGPSOperation__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4674:1: ( ( '(' ) )
            // InternalLegoLang.g:4675:1: ( '(' )
            {
            // InternalLegoLang.g:4675:1: ( '(' )
            // InternalLegoLang.g:4676:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXGPSOperationAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXGPSOperationAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XGPSOperation__Group__2__Impl"


    // $ANTLR start "rule__XGPSOperation__Group__3"
    // InternalLegoLang.g:4685:1: rule__XGPSOperation__Group__3 : rule__XGPSOperation__Group__3__Impl rule__XGPSOperation__Group__4 ;
    public final void rule__XGPSOperation__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4689:1: ( rule__XGPSOperation__Group__3__Impl rule__XGPSOperation__Group__4 )
            // InternalLegoLang.g:4690:2: rule__XGPSOperation__Group__3__Impl rule__XGPSOperation__Group__4
            {
            pushFollow(FOLLOW_17);
            rule__XGPSOperation__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XGPSOperation__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XGPSOperation__Group__3"


    // $ANTLR start "rule__XGPSOperation__Group__3__Impl"
    // InternalLegoLang.g:4697:1: rule__XGPSOperation__Group__3__Impl : ( ( rule__XGPSOperation__GpssensorAssignment_3 ) ) ;
    public final void rule__XGPSOperation__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4701:1: ( ( ( rule__XGPSOperation__GpssensorAssignment_3 ) ) )
            // InternalLegoLang.g:4702:1: ( ( rule__XGPSOperation__GpssensorAssignment_3 ) )
            {
            // InternalLegoLang.g:4702:1: ( ( rule__XGPSOperation__GpssensorAssignment_3 ) )
            // InternalLegoLang.g:4703:2: ( rule__XGPSOperation__GpssensorAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXGPSOperationAccess().getGpssensorAssignment_3()); 
            }
            // InternalLegoLang.g:4704:2: ( rule__XGPSOperation__GpssensorAssignment_3 )
            // InternalLegoLang.g:4704:3: rule__XGPSOperation__GpssensorAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__XGPSOperation__GpssensorAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXGPSOperationAccess().getGpssensorAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XGPSOperation__Group__3__Impl"


    // $ANTLR start "rule__XGPSOperation__Group__4"
    // InternalLegoLang.g:4712:1: rule__XGPSOperation__Group__4 : rule__XGPSOperation__Group__4__Impl ;
    public final void rule__XGPSOperation__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4716:1: ( rule__XGPSOperation__Group__4__Impl )
            // InternalLegoLang.g:4717:2: rule__XGPSOperation__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XGPSOperation__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XGPSOperation__Group__4"


    // $ANTLR start "rule__XGPSOperation__Group__4__Impl"
    // InternalLegoLang.g:4723:1: rule__XGPSOperation__Group__4__Impl : ( ')' ) ;
    public final void rule__XGPSOperation__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4727:1: ( ( ')' ) )
            // InternalLegoLang.g:4728:1: ( ')' )
            {
            // InternalLegoLang.g:4728:1: ( ')' )
            // InternalLegoLang.g:4729:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXGPSOperationAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXGPSOperationAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XGPSOperation__Group__4__Impl"


    // $ANTLR start "rule__YGPSOperation__Group__0"
    // InternalLegoLang.g:4739:1: rule__YGPSOperation__Group__0 : rule__YGPSOperation__Group__0__Impl rule__YGPSOperation__Group__1 ;
    public final void rule__YGPSOperation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4743:1: ( rule__YGPSOperation__Group__0__Impl rule__YGPSOperation__Group__1 )
            // InternalLegoLang.g:4744:2: rule__YGPSOperation__Group__0__Impl rule__YGPSOperation__Group__1
            {
            pushFollow(FOLLOW_26);
            rule__YGPSOperation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__YGPSOperation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__YGPSOperation__Group__0"


    // $ANTLR start "rule__YGPSOperation__Group__0__Impl"
    // InternalLegoLang.g:4751:1: rule__YGPSOperation__Group__0__Impl : ( 'get' ) ;
    public final void rule__YGPSOperation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4755:1: ( ( 'get' ) )
            // InternalLegoLang.g:4756:1: ( 'get' )
            {
            // InternalLegoLang.g:4756:1: ( 'get' )
            // InternalLegoLang.g:4757:2: 'get'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getYGPSOperationAccess().getGetKeyword_0()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getYGPSOperationAccess().getGetKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__YGPSOperation__Group__0__Impl"


    // $ANTLR start "rule__YGPSOperation__Group__1"
    // InternalLegoLang.g:4766:1: rule__YGPSOperation__Group__1 : rule__YGPSOperation__Group__1__Impl rule__YGPSOperation__Group__2 ;
    public final void rule__YGPSOperation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4770:1: ( rule__YGPSOperation__Group__1__Impl rule__YGPSOperation__Group__2 )
            // InternalLegoLang.g:4771:2: rule__YGPSOperation__Group__1__Impl rule__YGPSOperation__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__YGPSOperation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__YGPSOperation__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__YGPSOperation__Group__1"


    // $ANTLR start "rule__YGPSOperation__Group__1__Impl"
    // InternalLegoLang.g:4778:1: rule__YGPSOperation__Group__1__Impl : ( 'y' ) ;
    public final void rule__YGPSOperation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4782:1: ( ( 'y' ) )
            // InternalLegoLang.g:4783:1: ( 'y' )
            {
            // InternalLegoLang.g:4783:1: ( 'y' )
            // InternalLegoLang.g:4784:2: 'y'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getYGPSOperationAccess().getYKeyword_1()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getYGPSOperationAccess().getYKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__YGPSOperation__Group__1__Impl"


    // $ANTLR start "rule__YGPSOperation__Group__2"
    // InternalLegoLang.g:4793:1: rule__YGPSOperation__Group__2 : rule__YGPSOperation__Group__2__Impl rule__YGPSOperation__Group__3 ;
    public final void rule__YGPSOperation__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4797:1: ( rule__YGPSOperation__Group__2__Impl rule__YGPSOperation__Group__3 )
            // InternalLegoLang.g:4798:2: rule__YGPSOperation__Group__2__Impl rule__YGPSOperation__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__YGPSOperation__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__YGPSOperation__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__YGPSOperation__Group__2"


    // $ANTLR start "rule__YGPSOperation__Group__2__Impl"
    // InternalLegoLang.g:4805:1: rule__YGPSOperation__Group__2__Impl : ( '(' ) ;
    public final void rule__YGPSOperation__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4809:1: ( ( '(' ) )
            // InternalLegoLang.g:4810:1: ( '(' )
            {
            // InternalLegoLang.g:4810:1: ( '(' )
            // InternalLegoLang.g:4811:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getYGPSOperationAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getYGPSOperationAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__YGPSOperation__Group__2__Impl"


    // $ANTLR start "rule__YGPSOperation__Group__3"
    // InternalLegoLang.g:4820:1: rule__YGPSOperation__Group__3 : rule__YGPSOperation__Group__3__Impl rule__YGPSOperation__Group__4 ;
    public final void rule__YGPSOperation__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4824:1: ( rule__YGPSOperation__Group__3__Impl rule__YGPSOperation__Group__4 )
            // InternalLegoLang.g:4825:2: rule__YGPSOperation__Group__3__Impl rule__YGPSOperation__Group__4
            {
            pushFollow(FOLLOW_17);
            rule__YGPSOperation__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__YGPSOperation__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__YGPSOperation__Group__3"


    // $ANTLR start "rule__YGPSOperation__Group__3__Impl"
    // InternalLegoLang.g:4832:1: rule__YGPSOperation__Group__3__Impl : ( ( rule__YGPSOperation__GpssensorAssignment_3 ) ) ;
    public final void rule__YGPSOperation__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4836:1: ( ( ( rule__YGPSOperation__GpssensorAssignment_3 ) ) )
            // InternalLegoLang.g:4837:1: ( ( rule__YGPSOperation__GpssensorAssignment_3 ) )
            {
            // InternalLegoLang.g:4837:1: ( ( rule__YGPSOperation__GpssensorAssignment_3 ) )
            // InternalLegoLang.g:4838:2: ( rule__YGPSOperation__GpssensorAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getYGPSOperationAccess().getGpssensorAssignment_3()); 
            }
            // InternalLegoLang.g:4839:2: ( rule__YGPSOperation__GpssensorAssignment_3 )
            // InternalLegoLang.g:4839:3: rule__YGPSOperation__GpssensorAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__YGPSOperation__GpssensorAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getYGPSOperationAccess().getGpssensorAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__YGPSOperation__Group__3__Impl"


    // $ANTLR start "rule__YGPSOperation__Group__4"
    // InternalLegoLang.g:4847:1: rule__YGPSOperation__Group__4 : rule__YGPSOperation__Group__4__Impl ;
    public final void rule__YGPSOperation__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4851:1: ( rule__YGPSOperation__Group__4__Impl )
            // InternalLegoLang.g:4852:2: rule__YGPSOperation__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__YGPSOperation__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__YGPSOperation__Group__4"


    // $ANTLR start "rule__YGPSOperation__Group__4__Impl"
    // InternalLegoLang.g:4858:1: rule__YGPSOperation__Group__4__Impl : ( ')' ) ;
    public final void rule__YGPSOperation__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4862:1: ( ( ')' ) )
            // InternalLegoLang.g:4863:1: ( ')' )
            {
            // InternalLegoLang.g:4863:1: ( ')' )
            // InternalLegoLang.g:4864:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getYGPSOperationAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getYGPSOperationAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__YGPSOperation__Group__4__Impl"


    // $ANTLR start "rule__AngleOperation__Group__0"
    // InternalLegoLang.g:4874:1: rule__AngleOperation__Group__0 : rule__AngleOperation__Group__0__Impl rule__AngleOperation__Group__1 ;
    public final void rule__AngleOperation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4878:1: ( rule__AngleOperation__Group__0__Impl rule__AngleOperation__Group__1 )
            // InternalLegoLang.g:4879:2: rule__AngleOperation__Group__0__Impl rule__AngleOperation__Group__1
            {
            pushFollow(FOLLOW_27);
            rule__AngleOperation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AngleOperation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AngleOperation__Group__0"


    // $ANTLR start "rule__AngleOperation__Group__0__Impl"
    // InternalLegoLang.g:4886:1: rule__AngleOperation__Group__0__Impl : ( 'get' ) ;
    public final void rule__AngleOperation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4890:1: ( ( 'get' ) )
            // InternalLegoLang.g:4891:1: ( 'get' )
            {
            // InternalLegoLang.g:4891:1: ( 'get' )
            // InternalLegoLang.g:4892:2: 'get'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAngleOperationAccess().getGetKeyword_0()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAngleOperationAccess().getGetKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AngleOperation__Group__0__Impl"


    // $ANTLR start "rule__AngleOperation__Group__1"
    // InternalLegoLang.g:4901:1: rule__AngleOperation__Group__1 : rule__AngleOperation__Group__1__Impl rule__AngleOperation__Group__2 ;
    public final void rule__AngleOperation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4905:1: ( rule__AngleOperation__Group__1__Impl rule__AngleOperation__Group__2 )
            // InternalLegoLang.g:4906:2: rule__AngleOperation__Group__1__Impl rule__AngleOperation__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__AngleOperation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AngleOperation__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AngleOperation__Group__1"


    // $ANTLR start "rule__AngleOperation__Group__1__Impl"
    // InternalLegoLang.g:4913:1: rule__AngleOperation__Group__1__Impl : ( 'angle' ) ;
    public final void rule__AngleOperation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4917:1: ( ( 'angle' ) )
            // InternalLegoLang.g:4918:1: ( 'angle' )
            {
            // InternalLegoLang.g:4918:1: ( 'angle' )
            // InternalLegoLang.g:4919:2: 'angle'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAngleOperationAccess().getAngleKeyword_1()); 
            }
            match(input,46,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAngleOperationAccess().getAngleKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AngleOperation__Group__1__Impl"


    // $ANTLR start "rule__AngleOperation__Group__2"
    // InternalLegoLang.g:4928:1: rule__AngleOperation__Group__2 : rule__AngleOperation__Group__2__Impl rule__AngleOperation__Group__3 ;
    public final void rule__AngleOperation__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4932:1: ( rule__AngleOperation__Group__2__Impl rule__AngleOperation__Group__3 )
            // InternalLegoLang.g:4933:2: rule__AngleOperation__Group__2__Impl rule__AngleOperation__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__AngleOperation__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AngleOperation__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AngleOperation__Group__2"


    // $ANTLR start "rule__AngleOperation__Group__2__Impl"
    // InternalLegoLang.g:4940:1: rule__AngleOperation__Group__2__Impl : ( '(' ) ;
    public final void rule__AngleOperation__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4944:1: ( ( '(' ) )
            // InternalLegoLang.g:4945:1: ( '(' )
            {
            // InternalLegoLang.g:4945:1: ( '(' )
            // InternalLegoLang.g:4946:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAngleOperationAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAngleOperationAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AngleOperation__Group__2__Impl"


    // $ANTLR start "rule__AngleOperation__Group__3"
    // InternalLegoLang.g:4955:1: rule__AngleOperation__Group__3 : rule__AngleOperation__Group__3__Impl rule__AngleOperation__Group__4 ;
    public final void rule__AngleOperation__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4959:1: ( rule__AngleOperation__Group__3__Impl rule__AngleOperation__Group__4 )
            // InternalLegoLang.g:4960:2: rule__AngleOperation__Group__3__Impl rule__AngleOperation__Group__4
            {
            pushFollow(FOLLOW_17);
            rule__AngleOperation__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AngleOperation__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AngleOperation__Group__3"


    // $ANTLR start "rule__AngleOperation__Group__3__Impl"
    // InternalLegoLang.g:4967:1: rule__AngleOperation__Group__3__Impl : ( ( rule__AngleOperation__GyrosensorAssignment_3 ) ) ;
    public final void rule__AngleOperation__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4971:1: ( ( ( rule__AngleOperation__GyrosensorAssignment_3 ) ) )
            // InternalLegoLang.g:4972:1: ( ( rule__AngleOperation__GyrosensorAssignment_3 ) )
            {
            // InternalLegoLang.g:4972:1: ( ( rule__AngleOperation__GyrosensorAssignment_3 ) )
            // InternalLegoLang.g:4973:2: ( rule__AngleOperation__GyrosensorAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAngleOperationAccess().getGyrosensorAssignment_3()); 
            }
            // InternalLegoLang.g:4974:2: ( rule__AngleOperation__GyrosensorAssignment_3 )
            // InternalLegoLang.g:4974:3: rule__AngleOperation__GyrosensorAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__AngleOperation__GyrosensorAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAngleOperationAccess().getGyrosensorAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AngleOperation__Group__3__Impl"


    // $ANTLR start "rule__AngleOperation__Group__4"
    // InternalLegoLang.g:4982:1: rule__AngleOperation__Group__4 : rule__AngleOperation__Group__4__Impl ;
    public final void rule__AngleOperation__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4986:1: ( rule__AngleOperation__Group__4__Impl )
            // InternalLegoLang.g:4987:2: rule__AngleOperation__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AngleOperation__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AngleOperation__Group__4"


    // $ANTLR start "rule__AngleOperation__Group__4__Impl"
    // InternalLegoLang.g:4993:1: rule__AngleOperation__Group__4__Impl : ( ')' ) ;
    public final void rule__AngleOperation__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4997:1: ( ( ')' ) )
            // InternalLegoLang.g:4998:1: ( ')' )
            {
            // InternalLegoLang.g:4998:1: ( ')' )
            // InternalLegoLang.g:4999:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAngleOperationAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAngleOperationAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AngleOperation__Group__4__Impl"


    // $ANTLR start "rule__DistanceOperation__Group__0"
    // InternalLegoLang.g:5009:1: rule__DistanceOperation__Group__0 : rule__DistanceOperation__Group__0__Impl rule__DistanceOperation__Group__1 ;
    public final void rule__DistanceOperation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5013:1: ( rule__DistanceOperation__Group__0__Impl rule__DistanceOperation__Group__1 )
            // InternalLegoLang.g:5014:2: rule__DistanceOperation__Group__0__Impl rule__DistanceOperation__Group__1
            {
            pushFollow(FOLLOW_28);
            rule__DistanceOperation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DistanceOperation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DistanceOperation__Group__0"


    // $ANTLR start "rule__DistanceOperation__Group__0__Impl"
    // InternalLegoLang.g:5021:1: rule__DistanceOperation__Group__0__Impl : ( 'get' ) ;
    public final void rule__DistanceOperation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5025:1: ( ( 'get' ) )
            // InternalLegoLang.g:5026:1: ( 'get' )
            {
            // InternalLegoLang.g:5026:1: ( 'get' )
            // InternalLegoLang.g:5027:2: 'get'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDistanceOperationAccess().getGetKeyword_0()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDistanceOperationAccess().getGetKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DistanceOperation__Group__0__Impl"


    // $ANTLR start "rule__DistanceOperation__Group__1"
    // InternalLegoLang.g:5036:1: rule__DistanceOperation__Group__1 : rule__DistanceOperation__Group__1__Impl rule__DistanceOperation__Group__2 ;
    public final void rule__DistanceOperation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5040:1: ( rule__DistanceOperation__Group__1__Impl rule__DistanceOperation__Group__2 )
            // InternalLegoLang.g:5041:2: rule__DistanceOperation__Group__1__Impl rule__DistanceOperation__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__DistanceOperation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DistanceOperation__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DistanceOperation__Group__1"


    // $ANTLR start "rule__DistanceOperation__Group__1__Impl"
    // InternalLegoLang.g:5048:1: rule__DistanceOperation__Group__1__Impl : ( 'distance' ) ;
    public final void rule__DistanceOperation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5052:1: ( ( 'distance' ) )
            // InternalLegoLang.g:5053:1: ( 'distance' )
            {
            // InternalLegoLang.g:5053:1: ( 'distance' )
            // InternalLegoLang.g:5054:2: 'distance'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDistanceOperationAccess().getDistanceKeyword_1()); 
            }
            match(input,47,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDistanceOperationAccess().getDistanceKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DistanceOperation__Group__1__Impl"


    // $ANTLR start "rule__DistanceOperation__Group__2"
    // InternalLegoLang.g:5063:1: rule__DistanceOperation__Group__2 : rule__DistanceOperation__Group__2__Impl rule__DistanceOperation__Group__3 ;
    public final void rule__DistanceOperation__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5067:1: ( rule__DistanceOperation__Group__2__Impl rule__DistanceOperation__Group__3 )
            // InternalLegoLang.g:5068:2: rule__DistanceOperation__Group__2__Impl rule__DistanceOperation__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__DistanceOperation__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DistanceOperation__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DistanceOperation__Group__2"


    // $ANTLR start "rule__DistanceOperation__Group__2__Impl"
    // InternalLegoLang.g:5075:1: rule__DistanceOperation__Group__2__Impl : ( '(' ) ;
    public final void rule__DistanceOperation__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5079:1: ( ( '(' ) )
            // InternalLegoLang.g:5080:1: ( '(' )
            {
            // InternalLegoLang.g:5080:1: ( '(' )
            // InternalLegoLang.g:5081:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDistanceOperationAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDistanceOperationAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DistanceOperation__Group__2__Impl"


    // $ANTLR start "rule__DistanceOperation__Group__3"
    // InternalLegoLang.g:5090:1: rule__DistanceOperation__Group__3 : rule__DistanceOperation__Group__3__Impl rule__DistanceOperation__Group__4 ;
    public final void rule__DistanceOperation__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5094:1: ( rule__DistanceOperation__Group__3__Impl rule__DistanceOperation__Group__4 )
            // InternalLegoLang.g:5095:2: rule__DistanceOperation__Group__3__Impl rule__DistanceOperation__Group__4
            {
            pushFollow(FOLLOW_17);
            rule__DistanceOperation__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DistanceOperation__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DistanceOperation__Group__3"


    // $ANTLR start "rule__DistanceOperation__Group__3__Impl"
    // InternalLegoLang.g:5102:1: rule__DistanceOperation__Group__3__Impl : ( ( rule__DistanceOperation__UltrasonicsensorAssignment_3 ) ) ;
    public final void rule__DistanceOperation__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5106:1: ( ( ( rule__DistanceOperation__UltrasonicsensorAssignment_3 ) ) )
            // InternalLegoLang.g:5107:1: ( ( rule__DistanceOperation__UltrasonicsensorAssignment_3 ) )
            {
            // InternalLegoLang.g:5107:1: ( ( rule__DistanceOperation__UltrasonicsensorAssignment_3 ) )
            // InternalLegoLang.g:5108:2: ( rule__DistanceOperation__UltrasonicsensorAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDistanceOperationAccess().getUltrasonicsensorAssignment_3()); 
            }
            // InternalLegoLang.g:5109:2: ( rule__DistanceOperation__UltrasonicsensorAssignment_3 )
            // InternalLegoLang.g:5109:3: rule__DistanceOperation__UltrasonicsensorAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__DistanceOperation__UltrasonicsensorAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDistanceOperationAccess().getUltrasonicsensorAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DistanceOperation__Group__3__Impl"


    // $ANTLR start "rule__DistanceOperation__Group__4"
    // InternalLegoLang.g:5117:1: rule__DistanceOperation__Group__4 : rule__DistanceOperation__Group__4__Impl ;
    public final void rule__DistanceOperation__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5121:1: ( rule__DistanceOperation__Group__4__Impl )
            // InternalLegoLang.g:5122:2: rule__DistanceOperation__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DistanceOperation__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DistanceOperation__Group__4"


    // $ANTLR start "rule__DistanceOperation__Group__4__Impl"
    // InternalLegoLang.g:5128:1: rule__DistanceOperation__Group__4__Impl : ( ')' ) ;
    public final void rule__DistanceOperation__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5132:1: ( ( ')' ) )
            // InternalLegoLang.g:5133:1: ( ')' )
            {
            // InternalLegoLang.g:5133:1: ( ')' )
            // InternalLegoLang.g:5134:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDistanceOperationAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDistanceOperationAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DistanceOperation__Group__4__Impl"


    // $ANTLR start "rule__And__Group__0"
    // InternalLegoLang.g:5144:1: rule__And__Group__0 : rule__And__Group__0__Impl rule__And__Group__1 ;
    public final void rule__And__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5148:1: ( rule__And__Group__0__Impl rule__And__Group__1 )
            // InternalLegoLang.g:5149:2: rule__And__Group__0__Impl rule__And__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__And__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__And__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__0"


    // $ANTLR start "rule__And__Group__0__Impl"
    // InternalLegoLang.g:5156:1: rule__And__Group__0__Impl : ( () ) ;
    public final void rule__And__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5160:1: ( ( () ) )
            // InternalLegoLang.g:5161:1: ( () )
            {
            // InternalLegoLang.g:5161:1: ( () )
            // InternalLegoLang.g:5162:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getAndAction_0()); 
            }
            // InternalLegoLang.g:5163:2: ()
            // InternalLegoLang.g:5163:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getAndAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__0__Impl"


    // $ANTLR start "rule__And__Group__1"
    // InternalLegoLang.g:5171:1: rule__And__Group__1 : rule__And__Group__1__Impl rule__And__Group__2 ;
    public final void rule__And__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5175:1: ( rule__And__Group__1__Impl rule__And__Group__2 )
            // InternalLegoLang.g:5176:2: rule__And__Group__1__Impl rule__And__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__And__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__And__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__1"


    // $ANTLR start "rule__And__Group__1__Impl"
    // InternalLegoLang.g:5183:1: rule__And__Group__1__Impl : ( '(' ) ;
    public final void rule__And__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5187:1: ( ( '(' ) )
            // InternalLegoLang.g:5188:1: ( '(' )
            {
            // InternalLegoLang.g:5188:1: ( '(' )
            // InternalLegoLang.g:5189:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__1__Impl"


    // $ANTLR start "rule__And__Group__2"
    // InternalLegoLang.g:5198:1: rule__And__Group__2 : rule__And__Group__2__Impl rule__And__Group__3 ;
    public final void rule__And__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5202:1: ( rule__And__Group__2__Impl rule__And__Group__3 )
            // InternalLegoLang.g:5203:2: rule__And__Group__2__Impl rule__And__Group__3
            {
            pushFollow(FOLLOW_29);
            rule__And__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__And__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__2"


    // $ANTLR start "rule__And__Group__2__Impl"
    // InternalLegoLang.g:5210:1: rule__And__Group__2__Impl : ( ( rule__And__LeftAssignment_2 ) ) ;
    public final void rule__And__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5214:1: ( ( ( rule__And__LeftAssignment_2 ) ) )
            // InternalLegoLang.g:5215:1: ( ( rule__And__LeftAssignment_2 ) )
            {
            // InternalLegoLang.g:5215:1: ( ( rule__And__LeftAssignment_2 ) )
            // InternalLegoLang.g:5216:2: ( rule__And__LeftAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getLeftAssignment_2()); 
            }
            // InternalLegoLang.g:5217:2: ( rule__And__LeftAssignment_2 )
            // InternalLegoLang.g:5217:3: rule__And__LeftAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__And__LeftAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getLeftAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__2__Impl"


    // $ANTLR start "rule__And__Group__3"
    // InternalLegoLang.g:5225:1: rule__And__Group__3 : rule__And__Group__3__Impl rule__And__Group__4 ;
    public final void rule__And__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5229:1: ( rule__And__Group__3__Impl rule__And__Group__4 )
            // InternalLegoLang.g:5230:2: rule__And__Group__3__Impl rule__And__Group__4
            {
            pushFollow(FOLLOW_29);
            rule__And__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__And__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__3"


    // $ANTLR start "rule__And__Group__3__Impl"
    // InternalLegoLang.g:5237:1: rule__And__Group__3__Impl : ( ( rule__And__Group_3__0 )? ) ;
    public final void rule__And__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5241:1: ( ( ( rule__And__Group_3__0 )? ) )
            // InternalLegoLang.g:5242:1: ( ( rule__And__Group_3__0 )? )
            {
            // InternalLegoLang.g:5242:1: ( ( rule__And__Group_3__0 )? )
            // InternalLegoLang.g:5243:2: ( rule__And__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getGroup_3()); 
            }
            // InternalLegoLang.g:5244:2: ( rule__And__Group_3__0 )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==48) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // InternalLegoLang.g:5244:3: rule__And__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__And__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__3__Impl"


    // $ANTLR start "rule__And__Group__4"
    // InternalLegoLang.g:5252:1: rule__And__Group__4 : rule__And__Group__4__Impl ;
    public final void rule__And__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5256:1: ( rule__And__Group__4__Impl )
            // InternalLegoLang.g:5257:2: rule__And__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__And__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__4"


    // $ANTLR start "rule__And__Group__4__Impl"
    // InternalLegoLang.g:5263:1: rule__And__Group__4__Impl : ( ')' ) ;
    public final void rule__And__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5267:1: ( ( ')' ) )
            // InternalLegoLang.g:5268:1: ( ')' )
            {
            // InternalLegoLang.g:5268:1: ( ')' )
            // InternalLegoLang.g:5269:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__4__Impl"


    // $ANTLR start "rule__And__Group_3__0"
    // InternalLegoLang.g:5279:1: rule__And__Group_3__0 : rule__And__Group_3__0__Impl rule__And__Group_3__1 ;
    public final void rule__And__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5283:1: ( rule__And__Group_3__0__Impl rule__And__Group_3__1 )
            // InternalLegoLang.g:5284:2: rule__And__Group_3__0__Impl rule__And__Group_3__1
            {
            pushFollow(FOLLOW_9);
            rule__And__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__And__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_3__0"


    // $ANTLR start "rule__And__Group_3__0__Impl"
    // InternalLegoLang.g:5291:1: rule__And__Group_3__0__Impl : ( 'and' ) ;
    public final void rule__And__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5295:1: ( ( 'and' ) )
            // InternalLegoLang.g:5296:1: ( 'and' )
            {
            // InternalLegoLang.g:5296:1: ( 'and' )
            // InternalLegoLang.g:5297:2: 'and'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getAndKeyword_3_0()); 
            }
            match(input,48,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getAndKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_3__0__Impl"


    // $ANTLR start "rule__And__Group_3__1"
    // InternalLegoLang.g:5306:1: rule__And__Group_3__1 : rule__And__Group_3__1__Impl ;
    public final void rule__And__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5310:1: ( rule__And__Group_3__1__Impl )
            // InternalLegoLang.g:5311:2: rule__And__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__And__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_3__1"


    // $ANTLR start "rule__And__Group_3__1__Impl"
    // InternalLegoLang.g:5317:1: rule__And__Group_3__1__Impl : ( ( rule__And__RightAssignment_3_1 ) ) ;
    public final void rule__And__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5321:1: ( ( ( rule__And__RightAssignment_3_1 ) ) )
            // InternalLegoLang.g:5322:1: ( ( rule__And__RightAssignment_3_1 ) )
            {
            // InternalLegoLang.g:5322:1: ( ( rule__And__RightAssignment_3_1 ) )
            // InternalLegoLang.g:5323:2: ( rule__And__RightAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getRightAssignment_3_1()); 
            }
            // InternalLegoLang.g:5324:2: ( rule__And__RightAssignment_3_1 )
            // InternalLegoLang.g:5324:3: rule__And__RightAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__And__RightAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getRightAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_3__1__Impl"


    // $ANTLR start "rule__Or__Group__0"
    // InternalLegoLang.g:5333:1: rule__Or__Group__0 : rule__Or__Group__0__Impl rule__Or__Group__1 ;
    public final void rule__Or__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5337:1: ( rule__Or__Group__0__Impl rule__Or__Group__1 )
            // InternalLegoLang.g:5338:2: rule__Or__Group__0__Impl rule__Or__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__Or__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Or__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__0"


    // $ANTLR start "rule__Or__Group__0__Impl"
    // InternalLegoLang.g:5345:1: rule__Or__Group__0__Impl : ( () ) ;
    public final void rule__Or__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5349:1: ( ( () ) )
            // InternalLegoLang.g:5350:1: ( () )
            {
            // InternalLegoLang.g:5350:1: ( () )
            // InternalLegoLang.g:5351:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getOrAction_0()); 
            }
            // InternalLegoLang.g:5352:2: ()
            // InternalLegoLang.g:5352:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getOrAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__0__Impl"


    // $ANTLR start "rule__Or__Group__1"
    // InternalLegoLang.g:5360:1: rule__Or__Group__1 : rule__Or__Group__1__Impl rule__Or__Group__2 ;
    public final void rule__Or__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5364:1: ( rule__Or__Group__1__Impl rule__Or__Group__2 )
            // InternalLegoLang.g:5365:2: rule__Or__Group__1__Impl rule__Or__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__Or__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Or__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__1"


    // $ANTLR start "rule__Or__Group__1__Impl"
    // InternalLegoLang.g:5372:1: rule__Or__Group__1__Impl : ( '(' ) ;
    public final void rule__Or__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5376:1: ( ( '(' ) )
            // InternalLegoLang.g:5377:1: ( '(' )
            {
            // InternalLegoLang.g:5377:1: ( '(' )
            // InternalLegoLang.g:5378:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__1__Impl"


    // $ANTLR start "rule__Or__Group__2"
    // InternalLegoLang.g:5387:1: rule__Or__Group__2 : rule__Or__Group__2__Impl rule__Or__Group__3 ;
    public final void rule__Or__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5391:1: ( rule__Or__Group__2__Impl rule__Or__Group__3 )
            // InternalLegoLang.g:5392:2: rule__Or__Group__2__Impl rule__Or__Group__3
            {
            pushFollow(FOLLOW_30);
            rule__Or__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Or__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__2"


    // $ANTLR start "rule__Or__Group__2__Impl"
    // InternalLegoLang.g:5399:1: rule__Or__Group__2__Impl : ( ( rule__Or__LeftAssignment_2 ) ) ;
    public final void rule__Or__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5403:1: ( ( ( rule__Or__LeftAssignment_2 ) ) )
            // InternalLegoLang.g:5404:1: ( ( rule__Or__LeftAssignment_2 ) )
            {
            // InternalLegoLang.g:5404:1: ( ( rule__Or__LeftAssignment_2 ) )
            // InternalLegoLang.g:5405:2: ( rule__Or__LeftAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getLeftAssignment_2()); 
            }
            // InternalLegoLang.g:5406:2: ( rule__Or__LeftAssignment_2 )
            // InternalLegoLang.g:5406:3: rule__Or__LeftAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Or__LeftAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getLeftAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__2__Impl"


    // $ANTLR start "rule__Or__Group__3"
    // InternalLegoLang.g:5414:1: rule__Or__Group__3 : rule__Or__Group__3__Impl rule__Or__Group__4 ;
    public final void rule__Or__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5418:1: ( rule__Or__Group__3__Impl rule__Or__Group__4 )
            // InternalLegoLang.g:5419:2: rule__Or__Group__3__Impl rule__Or__Group__4
            {
            pushFollow(FOLLOW_30);
            rule__Or__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Or__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__3"


    // $ANTLR start "rule__Or__Group__3__Impl"
    // InternalLegoLang.g:5426:1: rule__Or__Group__3__Impl : ( ( rule__Or__Group_3__0 )? ) ;
    public final void rule__Or__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5430:1: ( ( ( rule__Or__Group_3__0 )? ) )
            // InternalLegoLang.g:5431:1: ( ( rule__Or__Group_3__0 )? )
            {
            // InternalLegoLang.g:5431:1: ( ( rule__Or__Group_3__0 )? )
            // InternalLegoLang.g:5432:2: ( rule__Or__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getGroup_3()); 
            }
            // InternalLegoLang.g:5433:2: ( rule__Or__Group_3__0 )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==49) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // InternalLegoLang.g:5433:3: rule__Or__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Or__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__3__Impl"


    // $ANTLR start "rule__Or__Group__4"
    // InternalLegoLang.g:5441:1: rule__Or__Group__4 : rule__Or__Group__4__Impl ;
    public final void rule__Or__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5445:1: ( rule__Or__Group__4__Impl )
            // InternalLegoLang.g:5446:2: rule__Or__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Or__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__4"


    // $ANTLR start "rule__Or__Group__4__Impl"
    // InternalLegoLang.g:5452:1: rule__Or__Group__4__Impl : ( ')' ) ;
    public final void rule__Or__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5456:1: ( ( ')' ) )
            // InternalLegoLang.g:5457:1: ( ')' )
            {
            // InternalLegoLang.g:5457:1: ( ')' )
            // InternalLegoLang.g:5458:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__4__Impl"


    // $ANTLR start "rule__Or__Group_3__0"
    // InternalLegoLang.g:5468:1: rule__Or__Group_3__0 : rule__Or__Group_3__0__Impl rule__Or__Group_3__1 ;
    public final void rule__Or__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5472:1: ( rule__Or__Group_3__0__Impl rule__Or__Group_3__1 )
            // InternalLegoLang.g:5473:2: rule__Or__Group_3__0__Impl rule__Or__Group_3__1
            {
            pushFollow(FOLLOW_9);
            rule__Or__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Or__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_3__0"


    // $ANTLR start "rule__Or__Group_3__0__Impl"
    // InternalLegoLang.g:5480:1: rule__Or__Group_3__0__Impl : ( 'or' ) ;
    public final void rule__Or__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5484:1: ( ( 'or' ) )
            // InternalLegoLang.g:5485:1: ( 'or' )
            {
            // InternalLegoLang.g:5485:1: ( 'or' )
            // InternalLegoLang.g:5486:2: 'or'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getOrKeyword_3_0()); 
            }
            match(input,49,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getOrKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_3__0__Impl"


    // $ANTLR start "rule__Or__Group_3__1"
    // InternalLegoLang.g:5495:1: rule__Or__Group_3__1 : rule__Or__Group_3__1__Impl ;
    public final void rule__Or__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5499:1: ( rule__Or__Group_3__1__Impl )
            // InternalLegoLang.g:5500:2: rule__Or__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Or__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_3__1"


    // $ANTLR start "rule__Or__Group_3__1__Impl"
    // InternalLegoLang.g:5506:1: rule__Or__Group_3__1__Impl : ( ( rule__Or__RightAssignment_3_1 ) ) ;
    public final void rule__Or__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5510:1: ( ( ( rule__Or__RightAssignment_3_1 ) ) )
            // InternalLegoLang.g:5511:1: ( ( rule__Or__RightAssignment_3_1 ) )
            {
            // InternalLegoLang.g:5511:1: ( ( rule__Or__RightAssignment_3_1 ) )
            // InternalLegoLang.g:5512:2: ( rule__Or__RightAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getRightAssignment_3_1()); 
            }
            // InternalLegoLang.g:5513:2: ( rule__Or__RightAssignment_3_1 )
            // InternalLegoLang.g:5513:3: rule__Or__RightAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Or__RightAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getRightAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_3__1__Impl"


    // $ANTLR start "rule__ConditionEtat__Group__0"
    // InternalLegoLang.g:5522:1: rule__ConditionEtat__Group__0 : rule__ConditionEtat__Group__0__Impl rule__ConditionEtat__Group__1 ;
    public final void rule__ConditionEtat__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5526:1: ( rule__ConditionEtat__Group__0__Impl rule__ConditionEtat__Group__1 )
            // InternalLegoLang.g:5527:2: rule__ConditionEtat__Group__0__Impl rule__ConditionEtat__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__ConditionEtat__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConditionEtat__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group__0"


    // $ANTLR start "rule__ConditionEtat__Group__0__Impl"
    // InternalLegoLang.g:5534:1: rule__ConditionEtat__Group__0__Impl : ( 'if' ) ;
    public final void rule__ConditionEtat__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5538:1: ( ( 'if' ) )
            // InternalLegoLang.g:5539:1: ( 'if' )
            {
            // InternalLegoLang.g:5539:1: ( 'if' )
            // InternalLegoLang.g:5540:2: 'if'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionEtatAccess().getIfKeyword_0()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionEtatAccess().getIfKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group__0__Impl"


    // $ANTLR start "rule__ConditionEtat__Group__1"
    // InternalLegoLang.g:5549:1: rule__ConditionEtat__Group__1 : rule__ConditionEtat__Group__1__Impl rule__ConditionEtat__Group__2 ;
    public final void rule__ConditionEtat__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5553:1: ( rule__ConditionEtat__Group__1__Impl rule__ConditionEtat__Group__2 )
            // InternalLegoLang.g:5554:2: rule__ConditionEtat__Group__1__Impl rule__ConditionEtat__Group__2
            {
            pushFollow(FOLLOW_5);
            rule__ConditionEtat__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConditionEtat__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group__1"


    // $ANTLR start "rule__ConditionEtat__Group__1__Impl"
    // InternalLegoLang.g:5561:1: rule__ConditionEtat__Group__1__Impl : ( ( rule__ConditionEtat__ConditionAssignment_1 ) ) ;
    public final void rule__ConditionEtat__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5565:1: ( ( ( rule__ConditionEtat__ConditionAssignment_1 ) ) )
            // InternalLegoLang.g:5566:1: ( ( rule__ConditionEtat__ConditionAssignment_1 ) )
            {
            // InternalLegoLang.g:5566:1: ( ( rule__ConditionEtat__ConditionAssignment_1 ) )
            // InternalLegoLang.g:5567:2: ( rule__ConditionEtat__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionEtatAccess().getConditionAssignment_1()); 
            }
            // InternalLegoLang.g:5568:2: ( rule__ConditionEtat__ConditionAssignment_1 )
            // InternalLegoLang.g:5568:3: rule__ConditionEtat__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ConditionEtat__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionEtatAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group__1__Impl"


    // $ANTLR start "rule__ConditionEtat__Group__2"
    // InternalLegoLang.g:5576:1: rule__ConditionEtat__Group__2 : rule__ConditionEtat__Group__2__Impl rule__ConditionEtat__Group__3 ;
    public final void rule__ConditionEtat__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5580:1: ( rule__ConditionEtat__Group__2__Impl rule__ConditionEtat__Group__3 )
            // InternalLegoLang.g:5581:2: rule__ConditionEtat__Group__2__Impl rule__ConditionEtat__Group__3
            {
            pushFollow(FOLLOW_31);
            rule__ConditionEtat__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConditionEtat__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group__2"


    // $ANTLR start "rule__ConditionEtat__Group__2__Impl"
    // InternalLegoLang.g:5588:1: rule__ConditionEtat__Group__2__Impl : ( '{' ) ;
    public final void rule__ConditionEtat__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5592:1: ( ( '{' ) )
            // InternalLegoLang.g:5593:1: ( '{' )
            {
            // InternalLegoLang.g:5593:1: ( '{' )
            // InternalLegoLang.g:5594:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionEtatAccess().getLeftCurlyBracketKeyword_2()); 
            }
            match(input,16,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionEtatAccess().getLeftCurlyBracketKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group__2__Impl"


    // $ANTLR start "rule__ConditionEtat__Group__3"
    // InternalLegoLang.g:5603:1: rule__ConditionEtat__Group__3 : rule__ConditionEtat__Group__3__Impl rule__ConditionEtat__Group__4 ;
    public final void rule__ConditionEtat__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5607:1: ( rule__ConditionEtat__Group__3__Impl rule__ConditionEtat__Group__4 )
            // InternalLegoLang.g:5608:2: rule__ConditionEtat__Group__3__Impl rule__ConditionEtat__Group__4
            {
            pushFollow(FOLLOW_31);
            rule__ConditionEtat__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConditionEtat__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group__3"


    // $ANTLR start "rule__ConditionEtat__Group__3__Impl"
    // InternalLegoLang.g:5615:1: rule__ConditionEtat__Group__3__Impl : ( ( rule__ConditionEtat__ThenAssignment_3 )* ) ;
    public final void rule__ConditionEtat__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5619:1: ( ( ( rule__ConditionEtat__ThenAssignment_3 )* ) )
            // InternalLegoLang.g:5620:1: ( ( rule__ConditionEtat__ThenAssignment_3 )* )
            {
            // InternalLegoLang.g:5620:1: ( ( rule__ConditionEtat__ThenAssignment_3 )* )
            // InternalLegoLang.g:5621:2: ( rule__ConditionEtat__ThenAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionEtatAccess().getThenAssignment_3()); 
            }
            // InternalLegoLang.g:5622:2: ( rule__ConditionEtat__ThenAssignment_3 )*
            loop20:
            do {
                int alt20=2;
                int LA20_0 = input.LA(1);

                if ( ((LA20_0>=RULE_ID && LA20_0<=RULE_STRING)||(LA20_0>=11 && LA20_0<=14)||LA20_0==19||LA20_0==21||(LA20_0>=23 && LA20_0<=31)||LA20_0==33||LA20_0==36||(LA20_0>=40 && LA20_0<=41)||LA20_0==50||(LA20_0>=52 && LA20_0<=53)||LA20_0==55||(LA20_0>=67 && LA20_0<=68)||(LA20_0>=70 && LA20_0<=72)) ) {
                    alt20=1;
                }


                switch (alt20) {
            	case 1 :
            	    // InternalLegoLang.g:5622:3: rule__ConditionEtat__ThenAssignment_3
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__ConditionEtat__ThenAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop20;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionEtatAccess().getThenAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group__3__Impl"


    // $ANTLR start "rule__ConditionEtat__Group__4"
    // InternalLegoLang.g:5630:1: rule__ConditionEtat__Group__4 : rule__ConditionEtat__Group__4__Impl rule__ConditionEtat__Group__5 ;
    public final void rule__ConditionEtat__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5634:1: ( rule__ConditionEtat__Group__4__Impl rule__ConditionEtat__Group__5 )
            // InternalLegoLang.g:5635:2: rule__ConditionEtat__Group__4__Impl rule__ConditionEtat__Group__5
            {
            pushFollow(FOLLOW_32);
            rule__ConditionEtat__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConditionEtat__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group__4"


    // $ANTLR start "rule__ConditionEtat__Group__4__Impl"
    // InternalLegoLang.g:5642:1: rule__ConditionEtat__Group__4__Impl : ( '}' ) ;
    public final void rule__ConditionEtat__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5646:1: ( ( '}' ) )
            // InternalLegoLang.g:5647:1: ( '}' )
            {
            // InternalLegoLang.g:5647:1: ( '}' )
            // InternalLegoLang.g:5648:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionEtatAccess().getRightCurlyBracketKeyword_4()); 
            }
            match(input,18,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionEtatAccess().getRightCurlyBracketKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group__4__Impl"


    // $ANTLR start "rule__ConditionEtat__Group__5"
    // InternalLegoLang.g:5657:1: rule__ConditionEtat__Group__5 : rule__ConditionEtat__Group__5__Impl ;
    public final void rule__ConditionEtat__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5661:1: ( rule__ConditionEtat__Group__5__Impl )
            // InternalLegoLang.g:5662:2: rule__ConditionEtat__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConditionEtat__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group__5"


    // $ANTLR start "rule__ConditionEtat__Group__5__Impl"
    // InternalLegoLang.g:5668:1: rule__ConditionEtat__Group__5__Impl : ( ( rule__ConditionEtat__Group_5__0 )? ) ;
    public final void rule__ConditionEtat__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5672:1: ( ( ( rule__ConditionEtat__Group_5__0 )? ) )
            // InternalLegoLang.g:5673:1: ( ( rule__ConditionEtat__Group_5__0 )? )
            {
            // InternalLegoLang.g:5673:1: ( ( rule__ConditionEtat__Group_5__0 )? )
            // InternalLegoLang.g:5674:2: ( rule__ConditionEtat__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionEtatAccess().getGroup_5()); 
            }
            // InternalLegoLang.g:5675:2: ( rule__ConditionEtat__Group_5__0 )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==51) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // InternalLegoLang.g:5675:3: rule__ConditionEtat__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConditionEtat__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionEtatAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group__5__Impl"


    // $ANTLR start "rule__ConditionEtat__Group_5__0"
    // InternalLegoLang.g:5684:1: rule__ConditionEtat__Group_5__0 : rule__ConditionEtat__Group_5__0__Impl rule__ConditionEtat__Group_5__1 ;
    public final void rule__ConditionEtat__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5688:1: ( rule__ConditionEtat__Group_5__0__Impl rule__ConditionEtat__Group_5__1 )
            // InternalLegoLang.g:5689:2: rule__ConditionEtat__Group_5__0__Impl rule__ConditionEtat__Group_5__1
            {
            pushFollow(FOLLOW_33);
            rule__ConditionEtat__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConditionEtat__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group_5__0"


    // $ANTLR start "rule__ConditionEtat__Group_5__0__Impl"
    // InternalLegoLang.g:5696:1: rule__ConditionEtat__Group_5__0__Impl : ( 'else{' ) ;
    public final void rule__ConditionEtat__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5700:1: ( ( 'else{' ) )
            // InternalLegoLang.g:5701:1: ( 'else{' )
            {
            // InternalLegoLang.g:5701:1: ( 'else{' )
            // InternalLegoLang.g:5702:2: 'else{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionEtatAccess().getElseKeyword_5_0()); 
            }
            match(input,51,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionEtatAccess().getElseKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group_5__0__Impl"


    // $ANTLR start "rule__ConditionEtat__Group_5__1"
    // InternalLegoLang.g:5711:1: rule__ConditionEtat__Group_5__1 : rule__ConditionEtat__Group_5__1__Impl rule__ConditionEtat__Group_5__2 ;
    public final void rule__ConditionEtat__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5715:1: ( rule__ConditionEtat__Group_5__1__Impl rule__ConditionEtat__Group_5__2 )
            // InternalLegoLang.g:5716:2: rule__ConditionEtat__Group_5__1__Impl rule__ConditionEtat__Group_5__2
            {
            pushFollow(FOLLOW_34);
            rule__ConditionEtat__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConditionEtat__Group_5__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group_5__1"


    // $ANTLR start "rule__ConditionEtat__Group_5__1__Impl"
    // InternalLegoLang.g:5723:1: rule__ConditionEtat__Group_5__1__Impl : ( ( rule__ConditionEtat__ElseAssignment_5_1 ) ) ;
    public final void rule__ConditionEtat__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5727:1: ( ( ( rule__ConditionEtat__ElseAssignment_5_1 ) ) )
            // InternalLegoLang.g:5728:1: ( ( rule__ConditionEtat__ElseAssignment_5_1 ) )
            {
            // InternalLegoLang.g:5728:1: ( ( rule__ConditionEtat__ElseAssignment_5_1 ) )
            // InternalLegoLang.g:5729:2: ( rule__ConditionEtat__ElseAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionEtatAccess().getElseAssignment_5_1()); 
            }
            // InternalLegoLang.g:5730:2: ( rule__ConditionEtat__ElseAssignment_5_1 )
            // InternalLegoLang.g:5730:3: rule__ConditionEtat__ElseAssignment_5_1
            {
            pushFollow(FOLLOW_2);
            rule__ConditionEtat__ElseAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionEtatAccess().getElseAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group_5__1__Impl"


    // $ANTLR start "rule__ConditionEtat__Group_5__2"
    // InternalLegoLang.g:5738:1: rule__ConditionEtat__Group_5__2 : rule__ConditionEtat__Group_5__2__Impl ;
    public final void rule__ConditionEtat__Group_5__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5742:1: ( rule__ConditionEtat__Group_5__2__Impl )
            // InternalLegoLang.g:5743:2: rule__ConditionEtat__Group_5__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConditionEtat__Group_5__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group_5__2"


    // $ANTLR start "rule__ConditionEtat__Group_5__2__Impl"
    // InternalLegoLang.g:5749:1: rule__ConditionEtat__Group_5__2__Impl : ( '}' ) ;
    public final void rule__ConditionEtat__Group_5__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5753:1: ( ( '}' ) )
            // InternalLegoLang.g:5754:1: ( '}' )
            {
            // InternalLegoLang.g:5754:1: ( '}' )
            // InternalLegoLang.g:5755:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionEtatAccess().getRightCurlyBracketKeyword_5_2()); 
            }
            match(input,18,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionEtatAccess().getRightCurlyBracketKeyword_5_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group_5__2__Impl"


    // $ANTLR start "rule__WhileLoop__Group__0"
    // InternalLegoLang.g:5765:1: rule__WhileLoop__Group__0 : rule__WhileLoop__Group__0__Impl rule__WhileLoop__Group__1 ;
    public final void rule__WhileLoop__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5769:1: ( rule__WhileLoop__Group__0__Impl rule__WhileLoop__Group__1 )
            // InternalLegoLang.g:5770:2: rule__WhileLoop__Group__0__Impl rule__WhileLoop__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__WhileLoop__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WhileLoop__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileLoop__Group__0"


    // $ANTLR start "rule__WhileLoop__Group__0__Impl"
    // InternalLegoLang.g:5777:1: rule__WhileLoop__Group__0__Impl : ( 'while' ) ;
    public final void rule__WhileLoop__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5781:1: ( ( 'while' ) )
            // InternalLegoLang.g:5782:1: ( 'while' )
            {
            // InternalLegoLang.g:5782:1: ( 'while' )
            // InternalLegoLang.g:5783:2: 'while'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileLoopAccess().getWhileKeyword_0()); 
            }
            match(input,52,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileLoopAccess().getWhileKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileLoop__Group__0__Impl"


    // $ANTLR start "rule__WhileLoop__Group__1"
    // InternalLegoLang.g:5792:1: rule__WhileLoop__Group__1 : rule__WhileLoop__Group__1__Impl rule__WhileLoop__Group__2 ;
    public final void rule__WhileLoop__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5796:1: ( rule__WhileLoop__Group__1__Impl rule__WhileLoop__Group__2 )
            // InternalLegoLang.g:5797:2: rule__WhileLoop__Group__1__Impl rule__WhileLoop__Group__2
            {
            pushFollow(FOLLOW_5);
            rule__WhileLoop__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WhileLoop__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileLoop__Group__1"


    // $ANTLR start "rule__WhileLoop__Group__1__Impl"
    // InternalLegoLang.g:5804:1: rule__WhileLoop__Group__1__Impl : ( ( rule__WhileLoop__LoopConditionAssignment_1 ) ) ;
    public final void rule__WhileLoop__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5808:1: ( ( ( rule__WhileLoop__LoopConditionAssignment_1 ) ) )
            // InternalLegoLang.g:5809:1: ( ( rule__WhileLoop__LoopConditionAssignment_1 ) )
            {
            // InternalLegoLang.g:5809:1: ( ( rule__WhileLoop__LoopConditionAssignment_1 ) )
            // InternalLegoLang.g:5810:2: ( rule__WhileLoop__LoopConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileLoopAccess().getLoopConditionAssignment_1()); 
            }
            // InternalLegoLang.g:5811:2: ( rule__WhileLoop__LoopConditionAssignment_1 )
            // InternalLegoLang.g:5811:3: rule__WhileLoop__LoopConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__WhileLoop__LoopConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileLoopAccess().getLoopConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileLoop__Group__1__Impl"


    // $ANTLR start "rule__WhileLoop__Group__2"
    // InternalLegoLang.g:5819:1: rule__WhileLoop__Group__2 : rule__WhileLoop__Group__2__Impl rule__WhileLoop__Group__3 ;
    public final void rule__WhileLoop__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5823:1: ( rule__WhileLoop__Group__2__Impl rule__WhileLoop__Group__3 )
            // InternalLegoLang.g:5824:2: rule__WhileLoop__Group__2__Impl rule__WhileLoop__Group__3
            {
            pushFollow(FOLLOW_31);
            rule__WhileLoop__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WhileLoop__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileLoop__Group__2"


    // $ANTLR start "rule__WhileLoop__Group__2__Impl"
    // InternalLegoLang.g:5831:1: rule__WhileLoop__Group__2__Impl : ( '{' ) ;
    public final void rule__WhileLoop__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5835:1: ( ( '{' ) )
            // InternalLegoLang.g:5836:1: ( '{' )
            {
            // InternalLegoLang.g:5836:1: ( '{' )
            // InternalLegoLang.g:5837:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileLoopAccess().getLeftCurlyBracketKeyword_2()); 
            }
            match(input,16,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileLoopAccess().getLeftCurlyBracketKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileLoop__Group__2__Impl"


    // $ANTLR start "rule__WhileLoop__Group__3"
    // InternalLegoLang.g:5846:1: rule__WhileLoop__Group__3 : rule__WhileLoop__Group__3__Impl rule__WhileLoop__Group__4 ;
    public final void rule__WhileLoop__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5850:1: ( rule__WhileLoop__Group__3__Impl rule__WhileLoop__Group__4 )
            // InternalLegoLang.g:5851:2: rule__WhileLoop__Group__3__Impl rule__WhileLoop__Group__4
            {
            pushFollow(FOLLOW_31);
            rule__WhileLoop__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WhileLoop__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileLoop__Group__3"


    // $ANTLR start "rule__WhileLoop__Group__3__Impl"
    // InternalLegoLang.g:5858:1: rule__WhileLoop__Group__3__Impl : ( ( rule__WhileLoop__StatementAssignment_3 )* ) ;
    public final void rule__WhileLoop__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5862:1: ( ( ( rule__WhileLoop__StatementAssignment_3 )* ) )
            // InternalLegoLang.g:5863:1: ( ( rule__WhileLoop__StatementAssignment_3 )* )
            {
            // InternalLegoLang.g:5863:1: ( ( rule__WhileLoop__StatementAssignment_3 )* )
            // InternalLegoLang.g:5864:2: ( rule__WhileLoop__StatementAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileLoopAccess().getStatementAssignment_3()); 
            }
            // InternalLegoLang.g:5865:2: ( rule__WhileLoop__StatementAssignment_3 )*
            loop22:
            do {
                int alt22=2;
                int LA22_0 = input.LA(1);

                if ( ((LA22_0>=RULE_ID && LA22_0<=RULE_STRING)||(LA22_0>=11 && LA22_0<=14)||LA22_0==19||LA22_0==21||(LA22_0>=23 && LA22_0<=31)||LA22_0==33||LA22_0==36||(LA22_0>=40 && LA22_0<=41)||LA22_0==50||(LA22_0>=52 && LA22_0<=53)||LA22_0==55||(LA22_0>=67 && LA22_0<=68)||(LA22_0>=70 && LA22_0<=72)) ) {
                    alt22=1;
                }


                switch (alt22) {
            	case 1 :
            	    // InternalLegoLang.g:5865:3: rule__WhileLoop__StatementAssignment_3
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__WhileLoop__StatementAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop22;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileLoopAccess().getStatementAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileLoop__Group__3__Impl"


    // $ANTLR start "rule__WhileLoop__Group__4"
    // InternalLegoLang.g:5873:1: rule__WhileLoop__Group__4 : rule__WhileLoop__Group__4__Impl ;
    public final void rule__WhileLoop__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5877:1: ( rule__WhileLoop__Group__4__Impl )
            // InternalLegoLang.g:5878:2: rule__WhileLoop__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WhileLoop__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileLoop__Group__4"


    // $ANTLR start "rule__WhileLoop__Group__4__Impl"
    // InternalLegoLang.g:5884:1: rule__WhileLoop__Group__4__Impl : ( '}' ) ;
    public final void rule__WhileLoop__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5888:1: ( ( '}' ) )
            // InternalLegoLang.g:5889:1: ( '}' )
            {
            // InternalLegoLang.g:5889:1: ( '}' )
            // InternalLegoLang.g:5890:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileLoopAccess().getRightCurlyBracketKeyword_4()); 
            }
            match(input,18,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileLoopAccess().getRightCurlyBracketKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileLoop__Group__4__Impl"


    // $ANTLR start "rule__MethodePrint__Group__0"
    // InternalLegoLang.g:5900:1: rule__MethodePrint__Group__0 : rule__MethodePrint__Group__0__Impl rule__MethodePrint__Group__1 ;
    public final void rule__MethodePrint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5904:1: ( rule__MethodePrint__Group__0__Impl rule__MethodePrint__Group__1 )
            // InternalLegoLang.g:5905:2: rule__MethodePrint__Group__0__Impl rule__MethodePrint__Group__1
            {
            pushFollow(FOLLOW_35);
            rule__MethodePrint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MethodePrint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodePrint__Group__0"


    // $ANTLR start "rule__MethodePrint__Group__0__Impl"
    // InternalLegoLang.g:5912:1: rule__MethodePrint__Group__0__Impl : ( () ) ;
    public final void rule__MethodePrint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5916:1: ( ( () ) )
            // InternalLegoLang.g:5917:1: ( () )
            {
            // InternalLegoLang.g:5917:1: ( () )
            // InternalLegoLang.g:5918:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodePrintAccess().getMethodePrintAction_0()); 
            }
            // InternalLegoLang.g:5919:2: ()
            // InternalLegoLang.g:5919:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodePrintAccess().getMethodePrintAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodePrint__Group__0__Impl"


    // $ANTLR start "rule__MethodePrint__Group__1"
    // InternalLegoLang.g:5927:1: rule__MethodePrint__Group__1 : rule__MethodePrint__Group__1__Impl rule__MethodePrint__Group__2 ;
    public final void rule__MethodePrint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5931:1: ( rule__MethodePrint__Group__1__Impl rule__MethodePrint__Group__2 )
            // InternalLegoLang.g:5932:2: rule__MethodePrint__Group__1__Impl rule__MethodePrint__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__MethodePrint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MethodePrint__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodePrint__Group__1"


    // $ANTLR start "rule__MethodePrint__Group__1__Impl"
    // InternalLegoLang.g:5939:1: rule__MethodePrint__Group__1__Impl : ( 'print(' ) ;
    public final void rule__MethodePrint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5943:1: ( ( 'print(' ) )
            // InternalLegoLang.g:5944:1: ( 'print(' )
            {
            // InternalLegoLang.g:5944:1: ( 'print(' )
            // InternalLegoLang.g:5945:2: 'print('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodePrintAccess().getPrintKeyword_1()); 
            }
            match(input,53,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodePrintAccess().getPrintKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodePrint__Group__1__Impl"


    // $ANTLR start "rule__MethodePrint__Group__2"
    // InternalLegoLang.g:5954:1: rule__MethodePrint__Group__2 : rule__MethodePrint__Group__2__Impl rule__MethodePrint__Group__3 ;
    public final void rule__MethodePrint__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5958:1: ( rule__MethodePrint__Group__2__Impl rule__MethodePrint__Group__3 )
            // InternalLegoLang.g:5959:2: rule__MethodePrint__Group__2__Impl rule__MethodePrint__Group__3
            {
            pushFollow(FOLLOW_36);
            rule__MethodePrint__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MethodePrint__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodePrint__Group__2"


    // $ANTLR start "rule__MethodePrint__Group__2__Impl"
    // InternalLegoLang.g:5966:1: rule__MethodePrint__Group__2__Impl : ( ( rule__MethodePrint__ExpressionAssignment_2 ) ) ;
    public final void rule__MethodePrint__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5970:1: ( ( ( rule__MethodePrint__ExpressionAssignment_2 ) ) )
            // InternalLegoLang.g:5971:1: ( ( rule__MethodePrint__ExpressionAssignment_2 ) )
            {
            // InternalLegoLang.g:5971:1: ( ( rule__MethodePrint__ExpressionAssignment_2 ) )
            // InternalLegoLang.g:5972:2: ( rule__MethodePrint__ExpressionAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodePrintAccess().getExpressionAssignment_2()); 
            }
            // InternalLegoLang.g:5973:2: ( rule__MethodePrint__ExpressionAssignment_2 )
            // InternalLegoLang.g:5973:3: rule__MethodePrint__ExpressionAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__MethodePrint__ExpressionAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodePrintAccess().getExpressionAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodePrint__Group__2__Impl"


    // $ANTLR start "rule__MethodePrint__Group__3"
    // InternalLegoLang.g:5981:1: rule__MethodePrint__Group__3 : rule__MethodePrint__Group__3__Impl rule__MethodePrint__Group__4 ;
    public final void rule__MethodePrint__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5985:1: ( rule__MethodePrint__Group__3__Impl rule__MethodePrint__Group__4 )
            // InternalLegoLang.g:5986:2: rule__MethodePrint__Group__3__Impl rule__MethodePrint__Group__4
            {
            pushFollow(FOLLOW_36);
            rule__MethodePrint__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MethodePrint__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodePrint__Group__3"


    // $ANTLR start "rule__MethodePrint__Group__3__Impl"
    // InternalLegoLang.g:5993:1: rule__MethodePrint__Group__3__Impl : ( ( rule__MethodePrint__Group_3__0 )* ) ;
    public final void rule__MethodePrint__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5997:1: ( ( ( rule__MethodePrint__Group_3__0 )* ) )
            // InternalLegoLang.g:5998:1: ( ( rule__MethodePrint__Group_3__0 )* )
            {
            // InternalLegoLang.g:5998:1: ( ( rule__MethodePrint__Group_3__0 )* )
            // InternalLegoLang.g:5999:2: ( rule__MethodePrint__Group_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodePrintAccess().getGroup_3()); 
            }
            // InternalLegoLang.g:6000:2: ( rule__MethodePrint__Group_3__0 )*
            loop23:
            do {
                int alt23=2;
                int LA23_0 = input.LA(1);

                if ( (LA23_0==54) ) {
                    alt23=1;
                }


                switch (alt23) {
            	case 1 :
            	    // InternalLegoLang.g:6000:3: rule__MethodePrint__Group_3__0
            	    {
            	    pushFollow(FOLLOW_37);
            	    rule__MethodePrint__Group_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop23;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodePrintAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodePrint__Group__3__Impl"


    // $ANTLR start "rule__MethodePrint__Group__4"
    // InternalLegoLang.g:6008:1: rule__MethodePrint__Group__4 : rule__MethodePrint__Group__4__Impl ;
    public final void rule__MethodePrint__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6012:1: ( rule__MethodePrint__Group__4__Impl )
            // InternalLegoLang.g:6013:2: rule__MethodePrint__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MethodePrint__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodePrint__Group__4"


    // $ANTLR start "rule__MethodePrint__Group__4__Impl"
    // InternalLegoLang.g:6019:1: rule__MethodePrint__Group__4__Impl : ( ')' ) ;
    public final void rule__MethodePrint__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6023:1: ( ( ')' ) )
            // InternalLegoLang.g:6024:1: ( ')' )
            {
            // InternalLegoLang.g:6024:1: ( ')' )
            // InternalLegoLang.g:6025:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodePrintAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodePrintAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodePrint__Group__4__Impl"


    // $ANTLR start "rule__MethodePrint__Group_3__0"
    // InternalLegoLang.g:6035:1: rule__MethodePrint__Group_3__0 : rule__MethodePrint__Group_3__0__Impl rule__MethodePrint__Group_3__1 ;
    public final void rule__MethodePrint__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6039:1: ( rule__MethodePrint__Group_3__0__Impl rule__MethodePrint__Group_3__1 )
            // InternalLegoLang.g:6040:2: rule__MethodePrint__Group_3__0__Impl rule__MethodePrint__Group_3__1
            {
            pushFollow(FOLLOW_9);
            rule__MethodePrint__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MethodePrint__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodePrint__Group_3__0"


    // $ANTLR start "rule__MethodePrint__Group_3__0__Impl"
    // InternalLegoLang.g:6047:1: rule__MethodePrint__Group_3__0__Impl : ( ',' ) ;
    public final void rule__MethodePrint__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6051:1: ( ( ',' ) )
            // InternalLegoLang.g:6052:1: ( ',' )
            {
            // InternalLegoLang.g:6052:1: ( ',' )
            // InternalLegoLang.g:6053:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodePrintAccess().getCommaKeyword_3_0()); 
            }
            match(input,54,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodePrintAccess().getCommaKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodePrint__Group_3__0__Impl"


    // $ANTLR start "rule__MethodePrint__Group_3__1"
    // InternalLegoLang.g:6062:1: rule__MethodePrint__Group_3__1 : rule__MethodePrint__Group_3__1__Impl ;
    public final void rule__MethodePrint__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6066:1: ( rule__MethodePrint__Group_3__1__Impl )
            // InternalLegoLang.g:6067:2: rule__MethodePrint__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MethodePrint__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodePrint__Group_3__1"


    // $ANTLR start "rule__MethodePrint__Group_3__1__Impl"
    // InternalLegoLang.g:6073:1: rule__MethodePrint__Group_3__1__Impl : ( ( rule__MethodePrint__ExpressionAssignment_3_1 ) ) ;
    public final void rule__MethodePrint__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6077:1: ( ( ( rule__MethodePrint__ExpressionAssignment_3_1 ) ) )
            // InternalLegoLang.g:6078:1: ( ( rule__MethodePrint__ExpressionAssignment_3_1 ) )
            {
            // InternalLegoLang.g:6078:1: ( ( rule__MethodePrint__ExpressionAssignment_3_1 ) )
            // InternalLegoLang.g:6079:2: ( rule__MethodePrint__ExpressionAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodePrintAccess().getExpressionAssignment_3_1()); 
            }
            // InternalLegoLang.g:6080:2: ( rule__MethodePrint__ExpressionAssignment_3_1 )
            // InternalLegoLang.g:6080:3: rule__MethodePrint__ExpressionAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__MethodePrint__ExpressionAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodePrintAccess().getExpressionAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodePrint__Group_3__1__Impl"


    // $ANTLR start "rule__Substraction__Group__0"
    // InternalLegoLang.g:6089:1: rule__Substraction__Group__0 : rule__Substraction__Group__0__Impl rule__Substraction__Group__1 ;
    public final void rule__Substraction__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6093:1: ( rule__Substraction__Group__0__Impl rule__Substraction__Group__1 )
            // InternalLegoLang.g:6094:2: rule__Substraction__Group__0__Impl rule__Substraction__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__Substraction__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Substraction__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Substraction__Group__0"


    // $ANTLR start "rule__Substraction__Group__0__Impl"
    // InternalLegoLang.g:6101:1: rule__Substraction__Group__0__Impl : ( '(' ) ;
    public final void rule__Substraction__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6105:1: ( ( '(' ) )
            // InternalLegoLang.g:6106:1: ( '(' )
            {
            // InternalLegoLang.g:6106:1: ( '(' )
            // InternalLegoLang.g:6107:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubstractionAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubstractionAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Substraction__Group__0__Impl"


    // $ANTLR start "rule__Substraction__Group__1"
    // InternalLegoLang.g:6116:1: rule__Substraction__Group__1 : rule__Substraction__Group__1__Impl rule__Substraction__Group__2 ;
    public final void rule__Substraction__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6120:1: ( rule__Substraction__Group__1__Impl rule__Substraction__Group__2 )
            // InternalLegoLang.g:6121:2: rule__Substraction__Group__1__Impl rule__Substraction__Group__2
            {
            pushFollow(FOLLOW_38);
            rule__Substraction__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Substraction__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Substraction__Group__1"


    // $ANTLR start "rule__Substraction__Group__1__Impl"
    // InternalLegoLang.g:6128:1: rule__Substraction__Group__1__Impl : ( ( rule__Substraction__LeftAssignment_1 ) ) ;
    public final void rule__Substraction__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6132:1: ( ( ( rule__Substraction__LeftAssignment_1 ) ) )
            // InternalLegoLang.g:6133:1: ( ( rule__Substraction__LeftAssignment_1 ) )
            {
            // InternalLegoLang.g:6133:1: ( ( rule__Substraction__LeftAssignment_1 ) )
            // InternalLegoLang.g:6134:2: ( rule__Substraction__LeftAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubstractionAccess().getLeftAssignment_1()); 
            }
            // InternalLegoLang.g:6135:2: ( rule__Substraction__LeftAssignment_1 )
            // InternalLegoLang.g:6135:3: rule__Substraction__LeftAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Substraction__LeftAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubstractionAccess().getLeftAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Substraction__Group__1__Impl"


    // $ANTLR start "rule__Substraction__Group__2"
    // InternalLegoLang.g:6143:1: rule__Substraction__Group__2 : rule__Substraction__Group__2__Impl rule__Substraction__Group__3 ;
    public final void rule__Substraction__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6147:1: ( rule__Substraction__Group__2__Impl rule__Substraction__Group__3 )
            // InternalLegoLang.g:6148:2: rule__Substraction__Group__2__Impl rule__Substraction__Group__3
            {
            pushFollow(FOLLOW_9);
            rule__Substraction__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Substraction__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Substraction__Group__2"


    // $ANTLR start "rule__Substraction__Group__2__Impl"
    // InternalLegoLang.g:6155:1: rule__Substraction__Group__2__Impl : ( '-' ) ;
    public final void rule__Substraction__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6159:1: ( ( '-' ) )
            // InternalLegoLang.g:6160:1: ( '-' )
            {
            // InternalLegoLang.g:6160:1: ( '-' )
            // InternalLegoLang.g:6161:2: '-'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubstractionAccess().getHyphenMinusKeyword_2()); 
            }
            match(input,55,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubstractionAccess().getHyphenMinusKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Substraction__Group__2__Impl"


    // $ANTLR start "rule__Substraction__Group__3"
    // InternalLegoLang.g:6170:1: rule__Substraction__Group__3 : rule__Substraction__Group__3__Impl rule__Substraction__Group__4 ;
    public final void rule__Substraction__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6174:1: ( rule__Substraction__Group__3__Impl rule__Substraction__Group__4 )
            // InternalLegoLang.g:6175:2: rule__Substraction__Group__3__Impl rule__Substraction__Group__4
            {
            pushFollow(FOLLOW_17);
            rule__Substraction__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Substraction__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Substraction__Group__3"


    // $ANTLR start "rule__Substraction__Group__3__Impl"
    // InternalLegoLang.g:6182:1: rule__Substraction__Group__3__Impl : ( ( rule__Substraction__RightAssignment_3 ) ) ;
    public final void rule__Substraction__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6186:1: ( ( ( rule__Substraction__RightAssignment_3 ) ) )
            // InternalLegoLang.g:6187:1: ( ( rule__Substraction__RightAssignment_3 ) )
            {
            // InternalLegoLang.g:6187:1: ( ( rule__Substraction__RightAssignment_3 ) )
            // InternalLegoLang.g:6188:2: ( rule__Substraction__RightAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubstractionAccess().getRightAssignment_3()); 
            }
            // InternalLegoLang.g:6189:2: ( rule__Substraction__RightAssignment_3 )
            // InternalLegoLang.g:6189:3: rule__Substraction__RightAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Substraction__RightAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubstractionAccess().getRightAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Substraction__Group__3__Impl"


    // $ANTLR start "rule__Substraction__Group__4"
    // InternalLegoLang.g:6197:1: rule__Substraction__Group__4 : rule__Substraction__Group__4__Impl ;
    public final void rule__Substraction__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6201:1: ( rule__Substraction__Group__4__Impl )
            // InternalLegoLang.g:6202:2: rule__Substraction__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Substraction__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Substraction__Group__4"


    // $ANTLR start "rule__Substraction__Group__4__Impl"
    // InternalLegoLang.g:6208:1: rule__Substraction__Group__4__Impl : ( ')' ) ;
    public final void rule__Substraction__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6212:1: ( ( ')' ) )
            // InternalLegoLang.g:6213:1: ( ')' )
            {
            // InternalLegoLang.g:6213:1: ( ')' )
            // InternalLegoLang.g:6214:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubstractionAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubstractionAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Substraction__Group__4__Impl"


    // $ANTLR start "rule__Addition__Group__0"
    // InternalLegoLang.g:6224:1: rule__Addition__Group__0 : rule__Addition__Group__0__Impl rule__Addition__Group__1 ;
    public final void rule__Addition__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6228:1: ( rule__Addition__Group__0__Impl rule__Addition__Group__1 )
            // InternalLegoLang.g:6229:2: rule__Addition__Group__0__Impl rule__Addition__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__Addition__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Addition__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group__0"


    // $ANTLR start "rule__Addition__Group__0__Impl"
    // InternalLegoLang.g:6236:1: rule__Addition__Group__0__Impl : ( '(' ) ;
    public final void rule__Addition__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6240:1: ( ( '(' ) )
            // InternalLegoLang.g:6241:1: ( '(' )
            {
            // InternalLegoLang.g:6241:1: ( '(' )
            // InternalLegoLang.g:6242:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditionAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditionAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group__0__Impl"


    // $ANTLR start "rule__Addition__Group__1"
    // InternalLegoLang.g:6251:1: rule__Addition__Group__1 : rule__Addition__Group__1__Impl rule__Addition__Group__2 ;
    public final void rule__Addition__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6255:1: ( rule__Addition__Group__1__Impl rule__Addition__Group__2 )
            // InternalLegoLang.g:6256:2: rule__Addition__Group__1__Impl rule__Addition__Group__2
            {
            pushFollow(FOLLOW_39);
            rule__Addition__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Addition__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group__1"


    // $ANTLR start "rule__Addition__Group__1__Impl"
    // InternalLegoLang.g:6263:1: rule__Addition__Group__1__Impl : ( ( rule__Addition__LeftAssignment_1 ) ) ;
    public final void rule__Addition__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6267:1: ( ( ( rule__Addition__LeftAssignment_1 ) ) )
            // InternalLegoLang.g:6268:1: ( ( rule__Addition__LeftAssignment_1 ) )
            {
            // InternalLegoLang.g:6268:1: ( ( rule__Addition__LeftAssignment_1 ) )
            // InternalLegoLang.g:6269:2: ( rule__Addition__LeftAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditionAccess().getLeftAssignment_1()); 
            }
            // InternalLegoLang.g:6270:2: ( rule__Addition__LeftAssignment_1 )
            // InternalLegoLang.g:6270:3: rule__Addition__LeftAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Addition__LeftAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditionAccess().getLeftAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group__1__Impl"


    // $ANTLR start "rule__Addition__Group__2"
    // InternalLegoLang.g:6278:1: rule__Addition__Group__2 : rule__Addition__Group__2__Impl rule__Addition__Group__3 ;
    public final void rule__Addition__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6282:1: ( rule__Addition__Group__2__Impl rule__Addition__Group__3 )
            // InternalLegoLang.g:6283:2: rule__Addition__Group__2__Impl rule__Addition__Group__3
            {
            pushFollow(FOLLOW_9);
            rule__Addition__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Addition__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group__2"


    // $ANTLR start "rule__Addition__Group__2__Impl"
    // InternalLegoLang.g:6290:1: rule__Addition__Group__2__Impl : ( '+' ) ;
    public final void rule__Addition__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6294:1: ( ( '+' ) )
            // InternalLegoLang.g:6295:1: ( '+' )
            {
            // InternalLegoLang.g:6295:1: ( '+' )
            // InternalLegoLang.g:6296:2: '+'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditionAccess().getPlusSignKeyword_2()); 
            }
            match(input,56,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditionAccess().getPlusSignKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group__2__Impl"


    // $ANTLR start "rule__Addition__Group__3"
    // InternalLegoLang.g:6305:1: rule__Addition__Group__3 : rule__Addition__Group__3__Impl rule__Addition__Group__4 ;
    public final void rule__Addition__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6309:1: ( rule__Addition__Group__3__Impl rule__Addition__Group__4 )
            // InternalLegoLang.g:6310:2: rule__Addition__Group__3__Impl rule__Addition__Group__4
            {
            pushFollow(FOLLOW_17);
            rule__Addition__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Addition__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group__3"


    // $ANTLR start "rule__Addition__Group__3__Impl"
    // InternalLegoLang.g:6317:1: rule__Addition__Group__3__Impl : ( ( rule__Addition__RightAssignment_3 ) ) ;
    public final void rule__Addition__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6321:1: ( ( ( rule__Addition__RightAssignment_3 ) ) )
            // InternalLegoLang.g:6322:1: ( ( rule__Addition__RightAssignment_3 ) )
            {
            // InternalLegoLang.g:6322:1: ( ( rule__Addition__RightAssignment_3 ) )
            // InternalLegoLang.g:6323:2: ( rule__Addition__RightAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditionAccess().getRightAssignment_3()); 
            }
            // InternalLegoLang.g:6324:2: ( rule__Addition__RightAssignment_3 )
            // InternalLegoLang.g:6324:3: rule__Addition__RightAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Addition__RightAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditionAccess().getRightAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group__3__Impl"


    // $ANTLR start "rule__Addition__Group__4"
    // InternalLegoLang.g:6332:1: rule__Addition__Group__4 : rule__Addition__Group__4__Impl ;
    public final void rule__Addition__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6336:1: ( rule__Addition__Group__4__Impl )
            // InternalLegoLang.g:6337:2: rule__Addition__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Addition__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group__4"


    // $ANTLR start "rule__Addition__Group__4__Impl"
    // InternalLegoLang.g:6343:1: rule__Addition__Group__4__Impl : ( ')' ) ;
    public final void rule__Addition__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6347:1: ( ( ')' ) )
            // InternalLegoLang.g:6348:1: ( ')' )
            {
            // InternalLegoLang.g:6348:1: ( ')' )
            // InternalLegoLang.g:6349:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditionAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditionAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group__4__Impl"


    // $ANTLR start "rule__Multiplication__Group__0"
    // InternalLegoLang.g:6359:1: rule__Multiplication__Group__0 : rule__Multiplication__Group__0__Impl rule__Multiplication__Group__1 ;
    public final void rule__Multiplication__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6363:1: ( rule__Multiplication__Group__0__Impl rule__Multiplication__Group__1 )
            // InternalLegoLang.g:6364:2: rule__Multiplication__Group__0__Impl rule__Multiplication__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__Multiplication__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Multiplication__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group__0"


    // $ANTLR start "rule__Multiplication__Group__0__Impl"
    // InternalLegoLang.g:6371:1: rule__Multiplication__Group__0__Impl : ( '(' ) ;
    public final void rule__Multiplication__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6375:1: ( ( '(' ) )
            // InternalLegoLang.g:6376:1: ( '(' )
            {
            // InternalLegoLang.g:6376:1: ( '(' )
            // InternalLegoLang.g:6377:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicationAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicationAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group__0__Impl"


    // $ANTLR start "rule__Multiplication__Group__1"
    // InternalLegoLang.g:6386:1: rule__Multiplication__Group__1 : rule__Multiplication__Group__1__Impl rule__Multiplication__Group__2 ;
    public final void rule__Multiplication__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6390:1: ( rule__Multiplication__Group__1__Impl rule__Multiplication__Group__2 )
            // InternalLegoLang.g:6391:2: rule__Multiplication__Group__1__Impl rule__Multiplication__Group__2
            {
            pushFollow(FOLLOW_40);
            rule__Multiplication__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Multiplication__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group__1"


    // $ANTLR start "rule__Multiplication__Group__1__Impl"
    // InternalLegoLang.g:6398:1: rule__Multiplication__Group__1__Impl : ( ( rule__Multiplication__LeftAssignment_1 ) ) ;
    public final void rule__Multiplication__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6402:1: ( ( ( rule__Multiplication__LeftAssignment_1 ) ) )
            // InternalLegoLang.g:6403:1: ( ( rule__Multiplication__LeftAssignment_1 ) )
            {
            // InternalLegoLang.g:6403:1: ( ( rule__Multiplication__LeftAssignment_1 ) )
            // InternalLegoLang.g:6404:2: ( rule__Multiplication__LeftAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicationAccess().getLeftAssignment_1()); 
            }
            // InternalLegoLang.g:6405:2: ( rule__Multiplication__LeftAssignment_1 )
            // InternalLegoLang.g:6405:3: rule__Multiplication__LeftAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Multiplication__LeftAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicationAccess().getLeftAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group__1__Impl"


    // $ANTLR start "rule__Multiplication__Group__2"
    // InternalLegoLang.g:6413:1: rule__Multiplication__Group__2 : rule__Multiplication__Group__2__Impl rule__Multiplication__Group__3 ;
    public final void rule__Multiplication__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6417:1: ( rule__Multiplication__Group__2__Impl rule__Multiplication__Group__3 )
            // InternalLegoLang.g:6418:2: rule__Multiplication__Group__2__Impl rule__Multiplication__Group__3
            {
            pushFollow(FOLLOW_9);
            rule__Multiplication__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Multiplication__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group__2"


    // $ANTLR start "rule__Multiplication__Group__2__Impl"
    // InternalLegoLang.g:6425:1: rule__Multiplication__Group__2__Impl : ( '*' ) ;
    public final void rule__Multiplication__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6429:1: ( ( '*' ) )
            // InternalLegoLang.g:6430:1: ( '*' )
            {
            // InternalLegoLang.g:6430:1: ( '*' )
            // InternalLegoLang.g:6431:2: '*'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicationAccess().getAsteriskKeyword_2()); 
            }
            match(input,57,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicationAccess().getAsteriskKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group__2__Impl"


    // $ANTLR start "rule__Multiplication__Group__3"
    // InternalLegoLang.g:6440:1: rule__Multiplication__Group__3 : rule__Multiplication__Group__3__Impl rule__Multiplication__Group__4 ;
    public final void rule__Multiplication__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6444:1: ( rule__Multiplication__Group__3__Impl rule__Multiplication__Group__4 )
            // InternalLegoLang.g:6445:2: rule__Multiplication__Group__3__Impl rule__Multiplication__Group__4
            {
            pushFollow(FOLLOW_17);
            rule__Multiplication__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Multiplication__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group__3"


    // $ANTLR start "rule__Multiplication__Group__3__Impl"
    // InternalLegoLang.g:6452:1: rule__Multiplication__Group__3__Impl : ( ( rule__Multiplication__RightAssignment_3 ) ) ;
    public final void rule__Multiplication__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6456:1: ( ( ( rule__Multiplication__RightAssignment_3 ) ) )
            // InternalLegoLang.g:6457:1: ( ( rule__Multiplication__RightAssignment_3 ) )
            {
            // InternalLegoLang.g:6457:1: ( ( rule__Multiplication__RightAssignment_3 ) )
            // InternalLegoLang.g:6458:2: ( rule__Multiplication__RightAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicationAccess().getRightAssignment_3()); 
            }
            // InternalLegoLang.g:6459:2: ( rule__Multiplication__RightAssignment_3 )
            // InternalLegoLang.g:6459:3: rule__Multiplication__RightAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Multiplication__RightAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicationAccess().getRightAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group__3__Impl"


    // $ANTLR start "rule__Multiplication__Group__4"
    // InternalLegoLang.g:6467:1: rule__Multiplication__Group__4 : rule__Multiplication__Group__4__Impl ;
    public final void rule__Multiplication__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6471:1: ( rule__Multiplication__Group__4__Impl )
            // InternalLegoLang.g:6472:2: rule__Multiplication__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Multiplication__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group__4"


    // $ANTLR start "rule__Multiplication__Group__4__Impl"
    // InternalLegoLang.g:6478:1: rule__Multiplication__Group__4__Impl : ( ')' ) ;
    public final void rule__Multiplication__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6482:1: ( ( ')' ) )
            // InternalLegoLang.g:6483:1: ( ')' )
            {
            // InternalLegoLang.g:6483:1: ( ')' )
            // InternalLegoLang.g:6484:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicationAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicationAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group__4__Impl"


    // $ANTLR start "rule__Division__Group__0"
    // InternalLegoLang.g:6494:1: rule__Division__Group__0 : rule__Division__Group__0__Impl rule__Division__Group__1 ;
    public final void rule__Division__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6498:1: ( rule__Division__Group__0__Impl rule__Division__Group__1 )
            // InternalLegoLang.g:6499:2: rule__Division__Group__0__Impl rule__Division__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__Division__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Division__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Division__Group__0"


    // $ANTLR start "rule__Division__Group__0__Impl"
    // InternalLegoLang.g:6506:1: rule__Division__Group__0__Impl : ( '(' ) ;
    public final void rule__Division__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6510:1: ( ( '(' ) )
            // InternalLegoLang.g:6511:1: ( '(' )
            {
            // InternalLegoLang.g:6511:1: ( '(' )
            // InternalLegoLang.g:6512:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDivisionAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDivisionAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Division__Group__0__Impl"


    // $ANTLR start "rule__Division__Group__1"
    // InternalLegoLang.g:6521:1: rule__Division__Group__1 : rule__Division__Group__1__Impl rule__Division__Group__2 ;
    public final void rule__Division__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6525:1: ( rule__Division__Group__1__Impl rule__Division__Group__2 )
            // InternalLegoLang.g:6526:2: rule__Division__Group__1__Impl rule__Division__Group__2
            {
            pushFollow(FOLLOW_41);
            rule__Division__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Division__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Division__Group__1"


    // $ANTLR start "rule__Division__Group__1__Impl"
    // InternalLegoLang.g:6533:1: rule__Division__Group__1__Impl : ( ( rule__Division__LeftAssignment_1 ) ) ;
    public final void rule__Division__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6537:1: ( ( ( rule__Division__LeftAssignment_1 ) ) )
            // InternalLegoLang.g:6538:1: ( ( rule__Division__LeftAssignment_1 ) )
            {
            // InternalLegoLang.g:6538:1: ( ( rule__Division__LeftAssignment_1 ) )
            // InternalLegoLang.g:6539:2: ( rule__Division__LeftAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDivisionAccess().getLeftAssignment_1()); 
            }
            // InternalLegoLang.g:6540:2: ( rule__Division__LeftAssignment_1 )
            // InternalLegoLang.g:6540:3: rule__Division__LeftAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Division__LeftAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDivisionAccess().getLeftAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Division__Group__1__Impl"


    // $ANTLR start "rule__Division__Group__2"
    // InternalLegoLang.g:6548:1: rule__Division__Group__2 : rule__Division__Group__2__Impl rule__Division__Group__3 ;
    public final void rule__Division__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6552:1: ( rule__Division__Group__2__Impl rule__Division__Group__3 )
            // InternalLegoLang.g:6553:2: rule__Division__Group__2__Impl rule__Division__Group__3
            {
            pushFollow(FOLLOW_9);
            rule__Division__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Division__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Division__Group__2"


    // $ANTLR start "rule__Division__Group__2__Impl"
    // InternalLegoLang.g:6560:1: rule__Division__Group__2__Impl : ( '/' ) ;
    public final void rule__Division__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6564:1: ( ( '/' ) )
            // InternalLegoLang.g:6565:1: ( '/' )
            {
            // InternalLegoLang.g:6565:1: ( '/' )
            // InternalLegoLang.g:6566:2: '/'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDivisionAccess().getSolidusKeyword_2()); 
            }
            match(input,58,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDivisionAccess().getSolidusKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Division__Group__2__Impl"


    // $ANTLR start "rule__Division__Group__3"
    // InternalLegoLang.g:6575:1: rule__Division__Group__3 : rule__Division__Group__3__Impl rule__Division__Group__4 ;
    public final void rule__Division__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6579:1: ( rule__Division__Group__3__Impl rule__Division__Group__4 )
            // InternalLegoLang.g:6580:2: rule__Division__Group__3__Impl rule__Division__Group__4
            {
            pushFollow(FOLLOW_17);
            rule__Division__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Division__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Division__Group__3"


    // $ANTLR start "rule__Division__Group__3__Impl"
    // InternalLegoLang.g:6587:1: rule__Division__Group__3__Impl : ( ( rule__Division__RightAssignment_3 ) ) ;
    public final void rule__Division__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6591:1: ( ( ( rule__Division__RightAssignment_3 ) ) )
            // InternalLegoLang.g:6592:1: ( ( rule__Division__RightAssignment_3 ) )
            {
            // InternalLegoLang.g:6592:1: ( ( rule__Division__RightAssignment_3 ) )
            // InternalLegoLang.g:6593:2: ( rule__Division__RightAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDivisionAccess().getRightAssignment_3()); 
            }
            // InternalLegoLang.g:6594:2: ( rule__Division__RightAssignment_3 )
            // InternalLegoLang.g:6594:3: rule__Division__RightAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Division__RightAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDivisionAccess().getRightAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Division__Group__3__Impl"


    // $ANTLR start "rule__Division__Group__4"
    // InternalLegoLang.g:6602:1: rule__Division__Group__4 : rule__Division__Group__4__Impl ;
    public final void rule__Division__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6606:1: ( rule__Division__Group__4__Impl )
            // InternalLegoLang.g:6607:2: rule__Division__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Division__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Division__Group__4"


    // $ANTLR start "rule__Division__Group__4__Impl"
    // InternalLegoLang.g:6613:1: rule__Division__Group__4__Impl : ( ')' ) ;
    public final void rule__Division__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6617:1: ( ( ')' ) )
            // InternalLegoLang.g:6618:1: ( ')' )
            {
            // InternalLegoLang.g:6618:1: ( ')' )
            // InternalLegoLang.g:6619:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDivisionAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDivisionAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Division__Group__4__Impl"


    // $ANTLR start "rule__GT__Group__0"
    // InternalLegoLang.g:6629:1: rule__GT__Group__0 : rule__GT__Group__0__Impl rule__GT__Group__1 ;
    public final void rule__GT__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6633:1: ( rule__GT__Group__0__Impl rule__GT__Group__1 )
            // InternalLegoLang.g:6634:2: rule__GT__Group__0__Impl rule__GT__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__GT__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GT__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GT__Group__0"


    // $ANTLR start "rule__GT__Group__0__Impl"
    // InternalLegoLang.g:6641:1: rule__GT__Group__0__Impl : ( '(' ) ;
    public final void rule__GT__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6645:1: ( ( '(' ) )
            // InternalLegoLang.g:6646:1: ( '(' )
            {
            // InternalLegoLang.g:6646:1: ( '(' )
            // InternalLegoLang.g:6647:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GT__Group__0__Impl"


    // $ANTLR start "rule__GT__Group__1"
    // InternalLegoLang.g:6656:1: rule__GT__Group__1 : rule__GT__Group__1__Impl rule__GT__Group__2 ;
    public final void rule__GT__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6660:1: ( rule__GT__Group__1__Impl rule__GT__Group__2 )
            // InternalLegoLang.g:6661:2: rule__GT__Group__1__Impl rule__GT__Group__2
            {
            pushFollow(FOLLOW_42);
            rule__GT__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GT__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GT__Group__1"


    // $ANTLR start "rule__GT__Group__1__Impl"
    // InternalLegoLang.g:6668:1: rule__GT__Group__1__Impl : ( ( rule__GT__LeftAssignment_1 ) ) ;
    public final void rule__GT__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6672:1: ( ( ( rule__GT__LeftAssignment_1 ) ) )
            // InternalLegoLang.g:6673:1: ( ( rule__GT__LeftAssignment_1 ) )
            {
            // InternalLegoLang.g:6673:1: ( ( rule__GT__LeftAssignment_1 ) )
            // InternalLegoLang.g:6674:2: ( rule__GT__LeftAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTAccess().getLeftAssignment_1()); 
            }
            // InternalLegoLang.g:6675:2: ( rule__GT__LeftAssignment_1 )
            // InternalLegoLang.g:6675:3: rule__GT__LeftAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__GT__LeftAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTAccess().getLeftAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GT__Group__1__Impl"


    // $ANTLR start "rule__GT__Group__2"
    // InternalLegoLang.g:6683:1: rule__GT__Group__2 : rule__GT__Group__2__Impl rule__GT__Group__3 ;
    public final void rule__GT__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6687:1: ( rule__GT__Group__2__Impl rule__GT__Group__3 )
            // InternalLegoLang.g:6688:2: rule__GT__Group__2__Impl rule__GT__Group__3
            {
            pushFollow(FOLLOW_9);
            rule__GT__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GT__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GT__Group__2"


    // $ANTLR start "rule__GT__Group__2__Impl"
    // InternalLegoLang.g:6695:1: rule__GT__Group__2__Impl : ( '>' ) ;
    public final void rule__GT__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6699:1: ( ( '>' ) )
            // InternalLegoLang.g:6700:1: ( '>' )
            {
            // InternalLegoLang.g:6700:1: ( '>' )
            // InternalLegoLang.g:6701:2: '>'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTAccess().getGreaterThanSignKeyword_2()); 
            }
            match(input,59,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTAccess().getGreaterThanSignKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GT__Group__2__Impl"


    // $ANTLR start "rule__GT__Group__3"
    // InternalLegoLang.g:6710:1: rule__GT__Group__3 : rule__GT__Group__3__Impl rule__GT__Group__4 ;
    public final void rule__GT__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6714:1: ( rule__GT__Group__3__Impl rule__GT__Group__4 )
            // InternalLegoLang.g:6715:2: rule__GT__Group__3__Impl rule__GT__Group__4
            {
            pushFollow(FOLLOW_17);
            rule__GT__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GT__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GT__Group__3"


    // $ANTLR start "rule__GT__Group__3__Impl"
    // InternalLegoLang.g:6722:1: rule__GT__Group__3__Impl : ( ( rule__GT__RightAssignment_3 ) ) ;
    public final void rule__GT__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6726:1: ( ( ( rule__GT__RightAssignment_3 ) ) )
            // InternalLegoLang.g:6727:1: ( ( rule__GT__RightAssignment_3 ) )
            {
            // InternalLegoLang.g:6727:1: ( ( rule__GT__RightAssignment_3 ) )
            // InternalLegoLang.g:6728:2: ( rule__GT__RightAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTAccess().getRightAssignment_3()); 
            }
            // InternalLegoLang.g:6729:2: ( rule__GT__RightAssignment_3 )
            // InternalLegoLang.g:6729:3: rule__GT__RightAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__GT__RightAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTAccess().getRightAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GT__Group__3__Impl"


    // $ANTLR start "rule__GT__Group__4"
    // InternalLegoLang.g:6737:1: rule__GT__Group__4 : rule__GT__Group__4__Impl ;
    public final void rule__GT__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6741:1: ( rule__GT__Group__4__Impl )
            // InternalLegoLang.g:6742:2: rule__GT__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GT__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GT__Group__4"


    // $ANTLR start "rule__GT__Group__4__Impl"
    // InternalLegoLang.g:6748:1: rule__GT__Group__4__Impl : ( ')' ) ;
    public final void rule__GT__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6752:1: ( ( ')' ) )
            // InternalLegoLang.g:6753:1: ( ')' )
            {
            // InternalLegoLang.g:6753:1: ( ')' )
            // InternalLegoLang.g:6754:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GT__Group__4__Impl"


    // $ANTLR start "rule__LT__Group__0"
    // InternalLegoLang.g:6764:1: rule__LT__Group__0 : rule__LT__Group__0__Impl rule__LT__Group__1 ;
    public final void rule__LT__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6768:1: ( rule__LT__Group__0__Impl rule__LT__Group__1 )
            // InternalLegoLang.g:6769:2: rule__LT__Group__0__Impl rule__LT__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__LT__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LT__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LT__Group__0"


    // $ANTLR start "rule__LT__Group__0__Impl"
    // InternalLegoLang.g:6776:1: rule__LT__Group__0__Impl : ( '(' ) ;
    public final void rule__LT__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6780:1: ( ( '(' ) )
            // InternalLegoLang.g:6781:1: ( '(' )
            {
            // InternalLegoLang.g:6781:1: ( '(' )
            // InternalLegoLang.g:6782:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LT__Group__0__Impl"


    // $ANTLR start "rule__LT__Group__1"
    // InternalLegoLang.g:6791:1: rule__LT__Group__1 : rule__LT__Group__1__Impl rule__LT__Group__2 ;
    public final void rule__LT__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6795:1: ( rule__LT__Group__1__Impl rule__LT__Group__2 )
            // InternalLegoLang.g:6796:2: rule__LT__Group__1__Impl rule__LT__Group__2
            {
            pushFollow(FOLLOW_43);
            rule__LT__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LT__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LT__Group__1"


    // $ANTLR start "rule__LT__Group__1__Impl"
    // InternalLegoLang.g:6803:1: rule__LT__Group__1__Impl : ( ( rule__LT__LeftAssignment_1 ) ) ;
    public final void rule__LT__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6807:1: ( ( ( rule__LT__LeftAssignment_1 ) ) )
            // InternalLegoLang.g:6808:1: ( ( rule__LT__LeftAssignment_1 ) )
            {
            // InternalLegoLang.g:6808:1: ( ( rule__LT__LeftAssignment_1 ) )
            // InternalLegoLang.g:6809:2: ( rule__LT__LeftAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTAccess().getLeftAssignment_1()); 
            }
            // InternalLegoLang.g:6810:2: ( rule__LT__LeftAssignment_1 )
            // InternalLegoLang.g:6810:3: rule__LT__LeftAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__LT__LeftAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTAccess().getLeftAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LT__Group__1__Impl"


    // $ANTLR start "rule__LT__Group__2"
    // InternalLegoLang.g:6818:1: rule__LT__Group__2 : rule__LT__Group__2__Impl rule__LT__Group__3 ;
    public final void rule__LT__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6822:1: ( rule__LT__Group__2__Impl rule__LT__Group__3 )
            // InternalLegoLang.g:6823:2: rule__LT__Group__2__Impl rule__LT__Group__3
            {
            pushFollow(FOLLOW_9);
            rule__LT__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LT__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LT__Group__2"


    // $ANTLR start "rule__LT__Group__2__Impl"
    // InternalLegoLang.g:6830:1: rule__LT__Group__2__Impl : ( '<' ) ;
    public final void rule__LT__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6834:1: ( ( '<' ) )
            // InternalLegoLang.g:6835:1: ( '<' )
            {
            // InternalLegoLang.g:6835:1: ( '<' )
            // InternalLegoLang.g:6836:2: '<'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTAccess().getLessThanSignKeyword_2()); 
            }
            match(input,60,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTAccess().getLessThanSignKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LT__Group__2__Impl"


    // $ANTLR start "rule__LT__Group__3"
    // InternalLegoLang.g:6845:1: rule__LT__Group__3 : rule__LT__Group__3__Impl rule__LT__Group__4 ;
    public final void rule__LT__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6849:1: ( rule__LT__Group__3__Impl rule__LT__Group__4 )
            // InternalLegoLang.g:6850:2: rule__LT__Group__3__Impl rule__LT__Group__4
            {
            pushFollow(FOLLOW_17);
            rule__LT__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LT__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LT__Group__3"


    // $ANTLR start "rule__LT__Group__3__Impl"
    // InternalLegoLang.g:6857:1: rule__LT__Group__3__Impl : ( ( rule__LT__RightAssignment_3 ) ) ;
    public final void rule__LT__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6861:1: ( ( ( rule__LT__RightAssignment_3 ) ) )
            // InternalLegoLang.g:6862:1: ( ( rule__LT__RightAssignment_3 ) )
            {
            // InternalLegoLang.g:6862:1: ( ( rule__LT__RightAssignment_3 ) )
            // InternalLegoLang.g:6863:2: ( rule__LT__RightAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTAccess().getRightAssignment_3()); 
            }
            // InternalLegoLang.g:6864:2: ( rule__LT__RightAssignment_3 )
            // InternalLegoLang.g:6864:3: rule__LT__RightAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__LT__RightAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTAccess().getRightAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LT__Group__3__Impl"


    // $ANTLR start "rule__LT__Group__4"
    // InternalLegoLang.g:6872:1: rule__LT__Group__4 : rule__LT__Group__4__Impl ;
    public final void rule__LT__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6876:1: ( rule__LT__Group__4__Impl )
            // InternalLegoLang.g:6877:2: rule__LT__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LT__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LT__Group__4"


    // $ANTLR start "rule__LT__Group__4__Impl"
    // InternalLegoLang.g:6883:1: rule__LT__Group__4__Impl : ( ')' ) ;
    public final void rule__LT__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6887:1: ( ( ')' ) )
            // InternalLegoLang.g:6888:1: ( ')' )
            {
            // InternalLegoLang.g:6888:1: ( ')' )
            // InternalLegoLang.g:6889:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LT__Group__4__Impl"


    // $ANTLR start "rule__Equal__Group__0"
    // InternalLegoLang.g:6899:1: rule__Equal__Group__0 : rule__Equal__Group__0__Impl rule__Equal__Group__1 ;
    public final void rule__Equal__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6903:1: ( rule__Equal__Group__0__Impl rule__Equal__Group__1 )
            // InternalLegoLang.g:6904:2: rule__Equal__Group__0__Impl rule__Equal__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__Equal__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Equal__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equal__Group__0"


    // $ANTLR start "rule__Equal__Group__0__Impl"
    // InternalLegoLang.g:6911:1: rule__Equal__Group__0__Impl : ( '(' ) ;
    public final void rule__Equal__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6915:1: ( ( '(' ) )
            // InternalLegoLang.g:6916:1: ( '(' )
            {
            // InternalLegoLang.g:6916:1: ( '(' )
            // InternalLegoLang.g:6917:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equal__Group__0__Impl"


    // $ANTLR start "rule__Equal__Group__1"
    // InternalLegoLang.g:6926:1: rule__Equal__Group__1 : rule__Equal__Group__1__Impl rule__Equal__Group__2 ;
    public final void rule__Equal__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6930:1: ( rule__Equal__Group__1__Impl rule__Equal__Group__2 )
            // InternalLegoLang.g:6931:2: rule__Equal__Group__1__Impl rule__Equal__Group__2
            {
            pushFollow(FOLLOW_44);
            rule__Equal__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Equal__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equal__Group__1"


    // $ANTLR start "rule__Equal__Group__1__Impl"
    // InternalLegoLang.g:6938:1: rule__Equal__Group__1__Impl : ( ( rule__Equal__LeftAssignment_1 ) ) ;
    public final void rule__Equal__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6942:1: ( ( ( rule__Equal__LeftAssignment_1 ) ) )
            // InternalLegoLang.g:6943:1: ( ( rule__Equal__LeftAssignment_1 ) )
            {
            // InternalLegoLang.g:6943:1: ( ( rule__Equal__LeftAssignment_1 ) )
            // InternalLegoLang.g:6944:2: ( rule__Equal__LeftAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualAccess().getLeftAssignment_1()); 
            }
            // InternalLegoLang.g:6945:2: ( rule__Equal__LeftAssignment_1 )
            // InternalLegoLang.g:6945:3: rule__Equal__LeftAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Equal__LeftAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualAccess().getLeftAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equal__Group__1__Impl"


    // $ANTLR start "rule__Equal__Group__2"
    // InternalLegoLang.g:6953:1: rule__Equal__Group__2 : rule__Equal__Group__2__Impl rule__Equal__Group__3 ;
    public final void rule__Equal__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6957:1: ( rule__Equal__Group__2__Impl rule__Equal__Group__3 )
            // InternalLegoLang.g:6958:2: rule__Equal__Group__2__Impl rule__Equal__Group__3
            {
            pushFollow(FOLLOW_9);
            rule__Equal__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Equal__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equal__Group__2"


    // $ANTLR start "rule__Equal__Group__2__Impl"
    // InternalLegoLang.g:6965:1: rule__Equal__Group__2__Impl : ( '==' ) ;
    public final void rule__Equal__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6969:1: ( ( '==' ) )
            // InternalLegoLang.g:6970:1: ( '==' )
            {
            // InternalLegoLang.g:6970:1: ( '==' )
            // InternalLegoLang.g:6971:2: '=='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualAccess().getEqualsSignEqualsSignKeyword_2()); 
            }
            match(input,61,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualAccess().getEqualsSignEqualsSignKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equal__Group__2__Impl"


    // $ANTLR start "rule__Equal__Group__3"
    // InternalLegoLang.g:6980:1: rule__Equal__Group__3 : rule__Equal__Group__3__Impl rule__Equal__Group__4 ;
    public final void rule__Equal__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6984:1: ( rule__Equal__Group__3__Impl rule__Equal__Group__4 )
            // InternalLegoLang.g:6985:2: rule__Equal__Group__3__Impl rule__Equal__Group__4
            {
            pushFollow(FOLLOW_17);
            rule__Equal__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Equal__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equal__Group__3"


    // $ANTLR start "rule__Equal__Group__3__Impl"
    // InternalLegoLang.g:6992:1: rule__Equal__Group__3__Impl : ( ( rule__Equal__RightAssignment_3 ) ) ;
    public final void rule__Equal__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6996:1: ( ( ( rule__Equal__RightAssignment_3 ) ) )
            // InternalLegoLang.g:6997:1: ( ( rule__Equal__RightAssignment_3 ) )
            {
            // InternalLegoLang.g:6997:1: ( ( rule__Equal__RightAssignment_3 ) )
            // InternalLegoLang.g:6998:2: ( rule__Equal__RightAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualAccess().getRightAssignment_3()); 
            }
            // InternalLegoLang.g:6999:2: ( rule__Equal__RightAssignment_3 )
            // InternalLegoLang.g:6999:3: rule__Equal__RightAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Equal__RightAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualAccess().getRightAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equal__Group__3__Impl"


    // $ANTLR start "rule__Equal__Group__4"
    // InternalLegoLang.g:7007:1: rule__Equal__Group__4 : rule__Equal__Group__4__Impl ;
    public final void rule__Equal__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7011:1: ( rule__Equal__Group__4__Impl )
            // InternalLegoLang.g:7012:2: rule__Equal__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Equal__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equal__Group__4"


    // $ANTLR start "rule__Equal__Group__4__Impl"
    // InternalLegoLang.g:7018:1: rule__Equal__Group__4__Impl : ( ')' ) ;
    public final void rule__Equal__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7022:1: ( ( ')' ) )
            // InternalLegoLang.g:7023:1: ( ')' )
            {
            // InternalLegoLang.g:7023:1: ( ')' )
            // InternalLegoLang.g:7024:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equal__Group__4__Impl"


    // $ANTLR start "rule__Different__Group__0"
    // InternalLegoLang.g:7034:1: rule__Different__Group__0 : rule__Different__Group__0__Impl rule__Different__Group__1 ;
    public final void rule__Different__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7038:1: ( rule__Different__Group__0__Impl rule__Different__Group__1 )
            // InternalLegoLang.g:7039:2: rule__Different__Group__0__Impl rule__Different__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__Different__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Different__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Different__Group__0"


    // $ANTLR start "rule__Different__Group__0__Impl"
    // InternalLegoLang.g:7046:1: rule__Different__Group__0__Impl : ( '(' ) ;
    public final void rule__Different__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7050:1: ( ( '(' ) )
            // InternalLegoLang.g:7051:1: ( '(' )
            {
            // InternalLegoLang.g:7051:1: ( '(' )
            // InternalLegoLang.g:7052:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDifferentAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDifferentAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Different__Group__0__Impl"


    // $ANTLR start "rule__Different__Group__1"
    // InternalLegoLang.g:7061:1: rule__Different__Group__1 : rule__Different__Group__1__Impl rule__Different__Group__2 ;
    public final void rule__Different__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7065:1: ( rule__Different__Group__1__Impl rule__Different__Group__2 )
            // InternalLegoLang.g:7066:2: rule__Different__Group__1__Impl rule__Different__Group__2
            {
            pushFollow(FOLLOW_45);
            rule__Different__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Different__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Different__Group__1"


    // $ANTLR start "rule__Different__Group__1__Impl"
    // InternalLegoLang.g:7073:1: rule__Different__Group__1__Impl : ( ( rule__Different__LeftAssignment_1 ) ) ;
    public final void rule__Different__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7077:1: ( ( ( rule__Different__LeftAssignment_1 ) ) )
            // InternalLegoLang.g:7078:1: ( ( rule__Different__LeftAssignment_1 ) )
            {
            // InternalLegoLang.g:7078:1: ( ( rule__Different__LeftAssignment_1 ) )
            // InternalLegoLang.g:7079:2: ( rule__Different__LeftAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDifferentAccess().getLeftAssignment_1()); 
            }
            // InternalLegoLang.g:7080:2: ( rule__Different__LeftAssignment_1 )
            // InternalLegoLang.g:7080:3: rule__Different__LeftAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Different__LeftAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDifferentAccess().getLeftAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Different__Group__1__Impl"


    // $ANTLR start "rule__Different__Group__2"
    // InternalLegoLang.g:7088:1: rule__Different__Group__2 : rule__Different__Group__2__Impl rule__Different__Group__3 ;
    public final void rule__Different__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7092:1: ( rule__Different__Group__2__Impl rule__Different__Group__3 )
            // InternalLegoLang.g:7093:2: rule__Different__Group__2__Impl rule__Different__Group__3
            {
            pushFollow(FOLLOW_9);
            rule__Different__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Different__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Different__Group__2"


    // $ANTLR start "rule__Different__Group__2__Impl"
    // InternalLegoLang.g:7100:1: rule__Different__Group__2__Impl : ( '!=' ) ;
    public final void rule__Different__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7104:1: ( ( '!=' ) )
            // InternalLegoLang.g:7105:1: ( '!=' )
            {
            // InternalLegoLang.g:7105:1: ( '!=' )
            // InternalLegoLang.g:7106:2: '!='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDifferentAccess().getExclamationMarkEqualsSignKeyword_2()); 
            }
            match(input,62,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDifferentAccess().getExclamationMarkEqualsSignKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Different__Group__2__Impl"


    // $ANTLR start "rule__Different__Group__3"
    // InternalLegoLang.g:7115:1: rule__Different__Group__3 : rule__Different__Group__3__Impl rule__Different__Group__4 ;
    public final void rule__Different__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7119:1: ( rule__Different__Group__3__Impl rule__Different__Group__4 )
            // InternalLegoLang.g:7120:2: rule__Different__Group__3__Impl rule__Different__Group__4
            {
            pushFollow(FOLLOW_17);
            rule__Different__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Different__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Different__Group__3"


    // $ANTLR start "rule__Different__Group__3__Impl"
    // InternalLegoLang.g:7127:1: rule__Different__Group__3__Impl : ( ( rule__Different__RightAssignment_3 ) ) ;
    public final void rule__Different__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7131:1: ( ( ( rule__Different__RightAssignment_3 ) ) )
            // InternalLegoLang.g:7132:1: ( ( rule__Different__RightAssignment_3 ) )
            {
            // InternalLegoLang.g:7132:1: ( ( rule__Different__RightAssignment_3 ) )
            // InternalLegoLang.g:7133:2: ( rule__Different__RightAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDifferentAccess().getRightAssignment_3()); 
            }
            // InternalLegoLang.g:7134:2: ( rule__Different__RightAssignment_3 )
            // InternalLegoLang.g:7134:3: rule__Different__RightAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Different__RightAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDifferentAccess().getRightAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Different__Group__3__Impl"


    // $ANTLR start "rule__Different__Group__4"
    // InternalLegoLang.g:7142:1: rule__Different__Group__4 : rule__Different__Group__4__Impl ;
    public final void rule__Different__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7146:1: ( rule__Different__Group__4__Impl )
            // InternalLegoLang.g:7147:2: rule__Different__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Different__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Different__Group__4"


    // $ANTLR start "rule__Different__Group__4__Impl"
    // InternalLegoLang.g:7153:1: rule__Different__Group__4__Impl : ( ')' ) ;
    public final void rule__Different__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7157:1: ( ( ')' ) )
            // InternalLegoLang.g:7158:1: ( ')' )
            {
            // InternalLegoLang.g:7158:1: ( ')' )
            // InternalLegoLang.g:7159:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDifferentAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDifferentAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Different__Group__4__Impl"


    // $ANTLR start "rule__LTorEqual__Group__0"
    // InternalLegoLang.g:7169:1: rule__LTorEqual__Group__0 : rule__LTorEqual__Group__0__Impl rule__LTorEqual__Group__1 ;
    public final void rule__LTorEqual__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7173:1: ( rule__LTorEqual__Group__0__Impl rule__LTorEqual__Group__1 )
            // InternalLegoLang.g:7174:2: rule__LTorEqual__Group__0__Impl rule__LTorEqual__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__LTorEqual__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LTorEqual__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTorEqual__Group__0"


    // $ANTLR start "rule__LTorEqual__Group__0__Impl"
    // InternalLegoLang.g:7181:1: rule__LTorEqual__Group__0__Impl : ( '(' ) ;
    public final void rule__LTorEqual__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7185:1: ( ( '(' ) )
            // InternalLegoLang.g:7186:1: ( '(' )
            {
            // InternalLegoLang.g:7186:1: ( '(' )
            // InternalLegoLang.g:7187:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTorEqualAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTorEqualAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTorEqual__Group__0__Impl"


    // $ANTLR start "rule__LTorEqual__Group__1"
    // InternalLegoLang.g:7196:1: rule__LTorEqual__Group__1 : rule__LTorEqual__Group__1__Impl rule__LTorEqual__Group__2 ;
    public final void rule__LTorEqual__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7200:1: ( rule__LTorEqual__Group__1__Impl rule__LTorEqual__Group__2 )
            // InternalLegoLang.g:7201:2: rule__LTorEqual__Group__1__Impl rule__LTorEqual__Group__2
            {
            pushFollow(FOLLOW_46);
            rule__LTorEqual__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LTorEqual__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTorEqual__Group__1"


    // $ANTLR start "rule__LTorEqual__Group__1__Impl"
    // InternalLegoLang.g:7208:1: rule__LTorEqual__Group__1__Impl : ( ( rule__LTorEqual__LeftAssignment_1 ) ) ;
    public final void rule__LTorEqual__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7212:1: ( ( ( rule__LTorEqual__LeftAssignment_1 ) ) )
            // InternalLegoLang.g:7213:1: ( ( rule__LTorEqual__LeftAssignment_1 ) )
            {
            // InternalLegoLang.g:7213:1: ( ( rule__LTorEqual__LeftAssignment_1 ) )
            // InternalLegoLang.g:7214:2: ( rule__LTorEqual__LeftAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTorEqualAccess().getLeftAssignment_1()); 
            }
            // InternalLegoLang.g:7215:2: ( rule__LTorEqual__LeftAssignment_1 )
            // InternalLegoLang.g:7215:3: rule__LTorEqual__LeftAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__LTorEqual__LeftAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTorEqualAccess().getLeftAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTorEqual__Group__1__Impl"


    // $ANTLR start "rule__LTorEqual__Group__2"
    // InternalLegoLang.g:7223:1: rule__LTorEqual__Group__2 : rule__LTorEqual__Group__2__Impl rule__LTorEqual__Group__3 ;
    public final void rule__LTorEqual__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7227:1: ( rule__LTorEqual__Group__2__Impl rule__LTorEqual__Group__3 )
            // InternalLegoLang.g:7228:2: rule__LTorEqual__Group__2__Impl rule__LTorEqual__Group__3
            {
            pushFollow(FOLLOW_9);
            rule__LTorEqual__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LTorEqual__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTorEqual__Group__2"


    // $ANTLR start "rule__LTorEqual__Group__2__Impl"
    // InternalLegoLang.g:7235:1: rule__LTorEqual__Group__2__Impl : ( '<=' ) ;
    public final void rule__LTorEqual__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7239:1: ( ( '<=' ) )
            // InternalLegoLang.g:7240:1: ( '<=' )
            {
            // InternalLegoLang.g:7240:1: ( '<=' )
            // InternalLegoLang.g:7241:2: '<='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTorEqualAccess().getLessThanSignEqualsSignKeyword_2()); 
            }
            match(input,63,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTorEqualAccess().getLessThanSignEqualsSignKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTorEqual__Group__2__Impl"


    // $ANTLR start "rule__LTorEqual__Group__3"
    // InternalLegoLang.g:7250:1: rule__LTorEqual__Group__3 : rule__LTorEqual__Group__3__Impl rule__LTorEqual__Group__4 ;
    public final void rule__LTorEqual__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7254:1: ( rule__LTorEqual__Group__3__Impl rule__LTorEqual__Group__4 )
            // InternalLegoLang.g:7255:2: rule__LTorEqual__Group__3__Impl rule__LTorEqual__Group__4
            {
            pushFollow(FOLLOW_17);
            rule__LTorEqual__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LTorEqual__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTorEqual__Group__3"


    // $ANTLR start "rule__LTorEqual__Group__3__Impl"
    // InternalLegoLang.g:7262:1: rule__LTorEqual__Group__3__Impl : ( ( rule__LTorEqual__RightAssignment_3 ) ) ;
    public final void rule__LTorEqual__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7266:1: ( ( ( rule__LTorEqual__RightAssignment_3 ) ) )
            // InternalLegoLang.g:7267:1: ( ( rule__LTorEqual__RightAssignment_3 ) )
            {
            // InternalLegoLang.g:7267:1: ( ( rule__LTorEqual__RightAssignment_3 ) )
            // InternalLegoLang.g:7268:2: ( rule__LTorEqual__RightAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTorEqualAccess().getRightAssignment_3()); 
            }
            // InternalLegoLang.g:7269:2: ( rule__LTorEqual__RightAssignment_3 )
            // InternalLegoLang.g:7269:3: rule__LTorEqual__RightAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__LTorEqual__RightAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTorEqualAccess().getRightAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTorEqual__Group__3__Impl"


    // $ANTLR start "rule__LTorEqual__Group__4"
    // InternalLegoLang.g:7277:1: rule__LTorEqual__Group__4 : rule__LTorEqual__Group__4__Impl ;
    public final void rule__LTorEqual__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7281:1: ( rule__LTorEqual__Group__4__Impl )
            // InternalLegoLang.g:7282:2: rule__LTorEqual__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LTorEqual__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTorEqual__Group__4"


    // $ANTLR start "rule__LTorEqual__Group__4__Impl"
    // InternalLegoLang.g:7288:1: rule__LTorEqual__Group__4__Impl : ( ')' ) ;
    public final void rule__LTorEqual__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7292:1: ( ( ')' ) )
            // InternalLegoLang.g:7293:1: ( ')' )
            {
            // InternalLegoLang.g:7293:1: ( ')' )
            // InternalLegoLang.g:7294:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTorEqualAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTorEqualAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTorEqual__Group__4__Impl"


    // $ANTLR start "rule__GTorEqual__Group__0"
    // InternalLegoLang.g:7304:1: rule__GTorEqual__Group__0 : rule__GTorEqual__Group__0__Impl rule__GTorEqual__Group__1 ;
    public final void rule__GTorEqual__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7308:1: ( rule__GTorEqual__Group__0__Impl rule__GTorEqual__Group__1 )
            // InternalLegoLang.g:7309:2: rule__GTorEqual__Group__0__Impl rule__GTorEqual__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__GTorEqual__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GTorEqual__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GTorEqual__Group__0"


    // $ANTLR start "rule__GTorEqual__Group__0__Impl"
    // InternalLegoLang.g:7316:1: rule__GTorEqual__Group__0__Impl : ( '(' ) ;
    public final void rule__GTorEqual__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7320:1: ( ( '(' ) )
            // InternalLegoLang.g:7321:1: ( '(' )
            {
            // InternalLegoLang.g:7321:1: ( '(' )
            // InternalLegoLang.g:7322:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTorEqualAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTorEqualAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GTorEqual__Group__0__Impl"


    // $ANTLR start "rule__GTorEqual__Group__1"
    // InternalLegoLang.g:7331:1: rule__GTorEqual__Group__1 : rule__GTorEqual__Group__1__Impl rule__GTorEqual__Group__2 ;
    public final void rule__GTorEqual__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7335:1: ( rule__GTorEqual__Group__1__Impl rule__GTorEqual__Group__2 )
            // InternalLegoLang.g:7336:2: rule__GTorEqual__Group__1__Impl rule__GTorEqual__Group__2
            {
            pushFollow(FOLLOW_47);
            rule__GTorEqual__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GTorEqual__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GTorEqual__Group__1"


    // $ANTLR start "rule__GTorEqual__Group__1__Impl"
    // InternalLegoLang.g:7343:1: rule__GTorEqual__Group__1__Impl : ( ( rule__GTorEqual__LeftAssignment_1 ) ) ;
    public final void rule__GTorEqual__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7347:1: ( ( ( rule__GTorEqual__LeftAssignment_1 ) ) )
            // InternalLegoLang.g:7348:1: ( ( rule__GTorEqual__LeftAssignment_1 ) )
            {
            // InternalLegoLang.g:7348:1: ( ( rule__GTorEqual__LeftAssignment_1 ) )
            // InternalLegoLang.g:7349:2: ( rule__GTorEqual__LeftAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTorEqualAccess().getLeftAssignment_1()); 
            }
            // InternalLegoLang.g:7350:2: ( rule__GTorEqual__LeftAssignment_1 )
            // InternalLegoLang.g:7350:3: rule__GTorEqual__LeftAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__GTorEqual__LeftAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTorEqualAccess().getLeftAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GTorEqual__Group__1__Impl"


    // $ANTLR start "rule__GTorEqual__Group__2"
    // InternalLegoLang.g:7358:1: rule__GTorEqual__Group__2 : rule__GTorEqual__Group__2__Impl rule__GTorEqual__Group__3 ;
    public final void rule__GTorEqual__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7362:1: ( rule__GTorEqual__Group__2__Impl rule__GTorEqual__Group__3 )
            // InternalLegoLang.g:7363:2: rule__GTorEqual__Group__2__Impl rule__GTorEqual__Group__3
            {
            pushFollow(FOLLOW_9);
            rule__GTorEqual__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GTorEqual__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GTorEqual__Group__2"


    // $ANTLR start "rule__GTorEqual__Group__2__Impl"
    // InternalLegoLang.g:7370:1: rule__GTorEqual__Group__2__Impl : ( '>=' ) ;
    public final void rule__GTorEqual__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7374:1: ( ( '>=' ) )
            // InternalLegoLang.g:7375:1: ( '>=' )
            {
            // InternalLegoLang.g:7375:1: ( '>=' )
            // InternalLegoLang.g:7376:2: '>='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTorEqualAccess().getGreaterThanSignEqualsSignKeyword_2()); 
            }
            match(input,64,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTorEqualAccess().getGreaterThanSignEqualsSignKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GTorEqual__Group__2__Impl"


    // $ANTLR start "rule__GTorEqual__Group__3"
    // InternalLegoLang.g:7385:1: rule__GTorEqual__Group__3 : rule__GTorEqual__Group__3__Impl rule__GTorEqual__Group__4 ;
    public final void rule__GTorEqual__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7389:1: ( rule__GTorEqual__Group__3__Impl rule__GTorEqual__Group__4 )
            // InternalLegoLang.g:7390:2: rule__GTorEqual__Group__3__Impl rule__GTorEqual__Group__4
            {
            pushFollow(FOLLOW_17);
            rule__GTorEqual__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GTorEqual__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GTorEqual__Group__3"


    // $ANTLR start "rule__GTorEqual__Group__3__Impl"
    // InternalLegoLang.g:7397:1: rule__GTorEqual__Group__3__Impl : ( ( rule__GTorEqual__RightAssignment_3 ) ) ;
    public final void rule__GTorEqual__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7401:1: ( ( ( rule__GTorEqual__RightAssignment_3 ) ) )
            // InternalLegoLang.g:7402:1: ( ( rule__GTorEqual__RightAssignment_3 ) )
            {
            // InternalLegoLang.g:7402:1: ( ( rule__GTorEqual__RightAssignment_3 ) )
            // InternalLegoLang.g:7403:2: ( rule__GTorEqual__RightAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTorEqualAccess().getRightAssignment_3()); 
            }
            // InternalLegoLang.g:7404:2: ( rule__GTorEqual__RightAssignment_3 )
            // InternalLegoLang.g:7404:3: rule__GTorEqual__RightAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__GTorEqual__RightAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTorEqualAccess().getRightAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GTorEqual__Group__3__Impl"


    // $ANTLR start "rule__GTorEqual__Group__4"
    // InternalLegoLang.g:7412:1: rule__GTorEqual__Group__4 : rule__GTorEqual__Group__4__Impl ;
    public final void rule__GTorEqual__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7416:1: ( rule__GTorEqual__Group__4__Impl )
            // InternalLegoLang.g:7417:2: rule__GTorEqual__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GTorEqual__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GTorEqual__Group__4"


    // $ANTLR start "rule__GTorEqual__Group__4__Impl"
    // InternalLegoLang.g:7423:1: rule__GTorEqual__Group__4__Impl : ( ')' ) ;
    public final void rule__GTorEqual__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7427:1: ( ( ')' ) )
            // InternalLegoLang.g:7428:1: ( ')' )
            {
            // InternalLegoLang.g:7428:1: ( ')' )
            // InternalLegoLang.g:7429:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTorEqualAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTorEqualAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GTorEqual__Group__4__Impl"


    // $ANTLR start "rule__Assignement__Group__0"
    // InternalLegoLang.g:7439:1: rule__Assignement__Group__0 : rule__Assignement__Group__0__Impl rule__Assignement__Group__1 ;
    public final void rule__Assignement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7443:1: ( rule__Assignement__Group__0__Impl rule__Assignement__Group__1 )
            // InternalLegoLang.g:7444:2: rule__Assignement__Group__0__Impl rule__Assignement__Group__1
            {
            pushFollow(FOLLOW_48);
            rule__Assignement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Assignement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignement__Group__0"


    // $ANTLR start "rule__Assignement__Group__0__Impl"
    // InternalLegoLang.g:7451:1: rule__Assignement__Group__0__Impl : ( () ) ;
    public final void rule__Assignement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7455:1: ( ( () ) )
            // InternalLegoLang.g:7456:1: ( () )
            {
            // InternalLegoLang.g:7456:1: ( () )
            // InternalLegoLang.g:7457:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignementAccess().getAssignementAction_0()); 
            }
            // InternalLegoLang.g:7458:2: ()
            // InternalLegoLang.g:7458:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignementAccess().getAssignementAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignement__Group__0__Impl"


    // $ANTLR start "rule__Assignement__Group__1"
    // InternalLegoLang.g:7466:1: rule__Assignement__Group__1 : rule__Assignement__Group__1__Impl rule__Assignement__Group__2 ;
    public final void rule__Assignement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7470:1: ( rule__Assignement__Group__1__Impl rule__Assignement__Group__2 )
            // InternalLegoLang.g:7471:2: rule__Assignement__Group__1__Impl rule__Assignement__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__Assignement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Assignement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignement__Group__1"


    // $ANTLR start "rule__Assignement__Group__1__Impl"
    // InternalLegoLang.g:7478:1: rule__Assignement__Group__1__Impl : ( 'set' ) ;
    public final void rule__Assignement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7482:1: ( ( 'set' ) )
            // InternalLegoLang.g:7483:1: ( 'set' )
            {
            // InternalLegoLang.g:7483:1: ( 'set' )
            // InternalLegoLang.g:7484:2: 'set'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignementAccess().getSetKeyword_1()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignementAccess().getSetKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignement__Group__1__Impl"


    // $ANTLR start "rule__Assignement__Group__2"
    // InternalLegoLang.g:7493:1: rule__Assignement__Group__2 : rule__Assignement__Group__2__Impl rule__Assignement__Group__3 ;
    public final void rule__Assignement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7497:1: ( rule__Assignement__Group__2__Impl rule__Assignement__Group__3 )
            // InternalLegoLang.g:7498:2: rule__Assignement__Group__2__Impl rule__Assignement__Group__3
            {
            pushFollow(FOLLOW_18);
            rule__Assignement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Assignement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignement__Group__2"


    // $ANTLR start "rule__Assignement__Group__2__Impl"
    // InternalLegoLang.g:7505:1: rule__Assignement__Group__2__Impl : ( ( rule__Assignement__LeftAssignment_2 ) ) ;
    public final void rule__Assignement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7509:1: ( ( ( rule__Assignement__LeftAssignment_2 ) ) )
            // InternalLegoLang.g:7510:1: ( ( rule__Assignement__LeftAssignment_2 ) )
            {
            // InternalLegoLang.g:7510:1: ( ( rule__Assignement__LeftAssignment_2 ) )
            // InternalLegoLang.g:7511:2: ( rule__Assignement__LeftAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignementAccess().getLeftAssignment_2()); 
            }
            // InternalLegoLang.g:7512:2: ( rule__Assignement__LeftAssignment_2 )
            // InternalLegoLang.g:7512:3: rule__Assignement__LeftAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Assignement__LeftAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignementAccess().getLeftAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignement__Group__2__Impl"


    // $ANTLR start "rule__Assignement__Group__3"
    // InternalLegoLang.g:7520:1: rule__Assignement__Group__3 : rule__Assignement__Group__3__Impl rule__Assignement__Group__4 ;
    public final void rule__Assignement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7524:1: ( rule__Assignement__Group__3__Impl rule__Assignement__Group__4 )
            // InternalLegoLang.g:7525:2: rule__Assignement__Group__3__Impl rule__Assignement__Group__4
            {
            pushFollow(FOLLOW_9);
            rule__Assignement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Assignement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignement__Group__3"


    // $ANTLR start "rule__Assignement__Group__3__Impl"
    // InternalLegoLang.g:7532:1: rule__Assignement__Group__3__Impl : ( '=' ) ;
    public final void rule__Assignement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7536:1: ( ( '=' ) )
            // InternalLegoLang.g:7537:1: ( '=' )
            {
            // InternalLegoLang.g:7537:1: ( '=' )
            // InternalLegoLang.g:7538:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignementAccess().getEqualsSignKeyword_3()); 
            }
            match(input,35,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignementAccess().getEqualsSignKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignement__Group__3__Impl"


    // $ANTLR start "rule__Assignement__Group__4"
    // InternalLegoLang.g:7547:1: rule__Assignement__Group__4 : rule__Assignement__Group__4__Impl ;
    public final void rule__Assignement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7551:1: ( rule__Assignement__Group__4__Impl )
            // InternalLegoLang.g:7552:2: rule__Assignement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Assignement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignement__Group__4"


    // $ANTLR start "rule__Assignement__Group__4__Impl"
    // InternalLegoLang.g:7558:1: rule__Assignement__Group__4__Impl : ( ( rule__Assignement__RightAssignment_4 ) ) ;
    public final void rule__Assignement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7562:1: ( ( ( rule__Assignement__RightAssignment_4 ) ) )
            // InternalLegoLang.g:7563:1: ( ( rule__Assignement__RightAssignment_4 ) )
            {
            // InternalLegoLang.g:7563:1: ( ( rule__Assignement__RightAssignment_4 ) )
            // InternalLegoLang.g:7564:2: ( rule__Assignement__RightAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignementAccess().getRightAssignment_4()); 
            }
            // InternalLegoLang.g:7565:2: ( rule__Assignement__RightAssignment_4 )
            // InternalLegoLang.g:7565:3: rule__Assignement__RightAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__Assignement__RightAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignementAccess().getRightAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignement__Group__4__Impl"


    // $ANTLR start "rule__PlusEqual__Group__0"
    // InternalLegoLang.g:7574:1: rule__PlusEqual__Group__0 : rule__PlusEqual__Group__0__Impl rule__PlusEqual__Group__1 ;
    public final void rule__PlusEqual__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7578:1: ( rule__PlusEqual__Group__0__Impl rule__PlusEqual__Group__1 )
            // InternalLegoLang.g:7579:2: rule__PlusEqual__Group__0__Impl rule__PlusEqual__Group__1
            {
            pushFollow(FOLLOW_49);
            rule__PlusEqual__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PlusEqual__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusEqual__Group__0"


    // $ANTLR start "rule__PlusEqual__Group__0__Impl"
    // InternalLegoLang.g:7586:1: rule__PlusEqual__Group__0__Impl : ( () ) ;
    public final void rule__PlusEqual__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7590:1: ( ( () ) )
            // InternalLegoLang.g:7591:1: ( () )
            {
            // InternalLegoLang.g:7591:1: ( () )
            // InternalLegoLang.g:7592:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusEqualAccess().getPlusEqualAction_0()); 
            }
            // InternalLegoLang.g:7593:2: ()
            // InternalLegoLang.g:7593:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusEqualAccess().getPlusEqualAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusEqual__Group__0__Impl"


    // $ANTLR start "rule__PlusEqual__Group__1"
    // InternalLegoLang.g:7601:1: rule__PlusEqual__Group__1 : rule__PlusEqual__Group__1__Impl rule__PlusEqual__Group__2 ;
    public final void rule__PlusEqual__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7605:1: ( rule__PlusEqual__Group__1__Impl rule__PlusEqual__Group__2 )
            // InternalLegoLang.g:7606:2: rule__PlusEqual__Group__1__Impl rule__PlusEqual__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__PlusEqual__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PlusEqual__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusEqual__Group__1"


    // $ANTLR start "rule__PlusEqual__Group__1__Impl"
    // InternalLegoLang.g:7613:1: rule__PlusEqual__Group__1__Impl : ( '(' ) ;
    public final void rule__PlusEqual__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7617:1: ( ( '(' ) )
            // InternalLegoLang.g:7618:1: ( '(' )
            {
            // InternalLegoLang.g:7618:1: ( '(' )
            // InternalLegoLang.g:7619:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusEqualAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusEqualAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusEqual__Group__1__Impl"


    // $ANTLR start "rule__PlusEqual__Group__2"
    // InternalLegoLang.g:7628:1: rule__PlusEqual__Group__2 : rule__PlusEqual__Group__2__Impl rule__PlusEqual__Group__3 ;
    public final void rule__PlusEqual__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7632:1: ( rule__PlusEqual__Group__2__Impl rule__PlusEqual__Group__3 )
            // InternalLegoLang.g:7633:2: rule__PlusEqual__Group__2__Impl rule__PlusEqual__Group__3
            {
            pushFollow(FOLLOW_50);
            rule__PlusEqual__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PlusEqual__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusEqual__Group__2"


    // $ANTLR start "rule__PlusEqual__Group__2__Impl"
    // InternalLegoLang.g:7640:1: rule__PlusEqual__Group__2__Impl : ( ( rule__PlusEqual__LeftAssignment_2 ) ) ;
    public final void rule__PlusEqual__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7644:1: ( ( ( rule__PlusEqual__LeftAssignment_2 ) ) )
            // InternalLegoLang.g:7645:1: ( ( rule__PlusEqual__LeftAssignment_2 ) )
            {
            // InternalLegoLang.g:7645:1: ( ( rule__PlusEqual__LeftAssignment_2 ) )
            // InternalLegoLang.g:7646:2: ( rule__PlusEqual__LeftAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusEqualAccess().getLeftAssignment_2()); 
            }
            // InternalLegoLang.g:7647:2: ( rule__PlusEqual__LeftAssignment_2 )
            // InternalLegoLang.g:7647:3: rule__PlusEqual__LeftAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__PlusEqual__LeftAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusEqualAccess().getLeftAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusEqual__Group__2__Impl"


    // $ANTLR start "rule__PlusEqual__Group__3"
    // InternalLegoLang.g:7655:1: rule__PlusEqual__Group__3 : rule__PlusEqual__Group__3__Impl rule__PlusEqual__Group__4 ;
    public final void rule__PlusEqual__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7659:1: ( rule__PlusEqual__Group__3__Impl rule__PlusEqual__Group__4 )
            // InternalLegoLang.g:7660:2: rule__PlusEqual__Group__3__Impl rule__PlusEqual__Group__4
            {
            pushFollow(FOLLOW_9);
            rule__PlusEqual__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PlusEqual__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusEqual__Group__3"


    // $ANTLR start "rule__PlusEqual__Group__3__Impl"
    // InternalLegoLang.g:7667:1: rule__PlusEqual__Group__3__Impl : ( '+=' ) ;
    public final void rule__PlusEqual__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7671:1: ( ( '+=' ) )
            // InternalLegoLang.g:7672:1: ( '+=' )
            {
            // InternalLegoLang.g:7672:1: ( '+=' )
            // InternalLegoLang.g:7673:2: '+='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusEqualAccess().getPlusSignEqualsSignKeyword_3()); 
            }
            match(input,65,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusEqualAccess().getPlusSignEqualsSignKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusEqual__Group__3__Impl"


    // $ANTLR start "rule__PlusEqual__Group__4"
    // InternalLegoLang.g:7682:1: rule__PlusEqual__Group__4 : rule__PlusEqual__Group__4__Impl rule__PlusEqual__Group__5 ;
    public final void rule__PlusEqual__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7686:1: ( rule__PlusEqual__Group__4__Impl rule__PlusEqual__Group__5 )
            // InternalLegoLang.g:7687:2: rule__PlusEqual__Group__4__Impl rule__PlusEqual__Group__5
            {
            pushFollow(FOLLOW_17);
            rule__PlusEqual__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PlusEqual__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusEqual__Group__4"


    // $ANTLR start "rule__PlusEqual__Group__4__Impl"
    // InternalLegoLang.g:7694:1: rule__PlusEqual__Group__4__Impl : ( ( rule__PlusEqual__RightAssignment_4 ) ) ;
    public final void rule__PlusEqual__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7698:1: ( ( ( rule__PlusEqual__RightAssignment_4 ) ) )
            // InternalLegoLang.g:7699:1: ( ( rule__PlusEqual__RightAssignment_4 ) )
            {
            // InternalLegoLang.g:7699:1: ( ( rule__PlusEqual__RightAssignment_4 ) )
            // InternalLegoLang.g:7700:2: ( rule__PlusEqual__RightAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusEqualAccess().getRightAssignment_4()); 
            }
            // InternalLegoLang.g:7701:2: ( rule__PlusEqual__RightAssignment_4 )
            // InternalLegoLang.g:7701:3: rule__PlusEqual__RightAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__PlusEqual__RightAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusEqualAccess().getRightAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusEqual__Group__4__Impl"


    // $ANTLR start "rule__PlusEqual__Group__5"
    // InternalLegoLang.g:7709:1: rule__PlusEqual__Group__5 : rule__PlusEqual__Group__5__Impl ;
    public final void rule__PlusEqual__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7713:1: ( rule__PlusEqual__Group__5__Impl )
            // InternalLegoLang.g:7714:2: rule__PlusEqual__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PlusEqual__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusEqual__Group__5"


    // $ANTLR start "rule__PlusEqual__Group__5__Impl"
    // InternalLegoLang.g:7720:1: rule__PlusEqual__Group__5__Impl : ( ')' ) ;
    public final void rule__PlusEqual__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7724:1: ( ( ')' ) )
            // InternalLegoLang.g:7725:1: ( ')' )
            {
            // InternalLegoLang.g:7725:1: ( ')' )
            // InternalLegoLang.g:7726:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusEqualAccess().getRightParenthesisKeyword_5()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusEqualAccess().getRightParenthesisKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusEqual__Group__5__Impl"


    // $ANTLR start "rule__MinusEqual__Group__0"
    // InternalLegoLang.g:7736:1: rule__MinusEqual__Group__0 : rule__MinusEqual__Group__0__Impl rule__MinusEqual__Group__1 ;
    public final void rule__MinusEqual__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7740:1: ( rule__MinusEqual__Group__0__Impl rule__MinusEqual__Group__1 )
            // InternalLegoLang.g:7741:2: rule__MinusEqual__Group__0__Impl rule__MinusEqual__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__MinusEqual__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MinusEqual__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MinusEqual__Group__0"


    // $ANTLR start "rule__MinusEqual__Group__0__Impl"
    // InternalLegoLang.g:7748:1: rule__MinusEqual__Group__0__Impl : ( () ) ;
    public final void rule__MinusEqual__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7752:1: ( ( () ) )
            // InternalLegoLang.g:7753:1: ( () )
            {
            // InternalLegoLang.g:7753:1: ( () )
            // InternalLegoLang.g:7754:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMinusEqualAccess().getMinusEqualAction_0()); 
            }
            // InternalLegoLang.g:7755:2: ()
            // InternalLegoLang.g:7755:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMinusEqualAccess().getMinusEqualAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MinusEqual__Group__0__Impl"


    // $ANTLR start "rule__MinusEqual__Group__1"
    // InternalLegoLang.g:7763:1: rule__MinusEqual__Group__1 : rule__MinusEqual__Group__1__Impl rule__MinusEqual__Group__2 ;
    public final void rule__MinusEqual__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7767:1: ( rule__MinusEqual__Group__1__Impl rule__MinusEqual__Group__2 )
            // InternalLegoLang.g:7768:2: rule__MinusEqual__Group__1__Impl rule__MinusEqual__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__MinusEqual__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MinusEqual__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MinusEqual__Group__1"


    // $ANTLR start "rule__MinusEqual__Group__1__Impl"
    // InternalLegoLang.g:7775:1: rule__MinusEqual__Group__1__Impl : ( '(' ) ;
    public final void rule__MinusEqual__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7779:1: ( ( '(' ) )
            // InternalLegoLang.g:7780:1: ( '(' )
            {
            // InternalLegoLang.g:7780:1: ( '(' )
            // InternalLegoLang.g:7781:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMinusEqualAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMinusEqualAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MinusEqual__Group__1__Impl"


    // $ANTLR start "rule__MinusEqual__Group__2"
    // InternalLegoLang.g:7790:1: rule__MinusEqual__Group__2 : rule__MinusEqual__Group__2__Impl rule__MinusEqual__Group__3 ;
    public final void rule__MinusEqual__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7794:1: ( rule__MinusEqual__Group__2__Impl rule__MinusEqual__Group__3 )
            // InternalLegoLang.g:7795:2: rule__MinusEqual__Group__2__Impl rule__MinusEqual__Group__3
            {
            pushFollow(FOLLOW_51);
            rule__MinusEqual__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MinusEqual__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MinusEqual__Group__2"


    // $ANTLR start "rule__MinusEqual__Group__2__Impl"
    // InternalLegoLang.g:7802:1: rule__MinusEqual__Group__2__Impl : ( ( rule__MinusEqual__LeftAssignment_2 ) ) ;
    public final void rule__MinusEqual__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7806:1: ( ( ( rule__MinusEqual__LeftAssignment_2 ) ) )
            // InternalLegoLang.g:7807:1: ( ( rule__MinusEqual__LeftAssignment_2 ) )
            {
            // InternalLegoLang.g:7807:1: ( ( rule__MinusEqual__LeftAssignment_2 ) )
            // InternalLegoLang.g:7808:2: ( rule__MinusEqual__LeftAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMinusEqualAccess().getLeftAssignment_2()); 
            }
            // InternalLegoLang.g:7809:2: ( rule__MinusEqual__LeftAssignment_2 )
            // InternalLegoLang.g:7809:3: rule__MinusEqual__LeftAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__MinusEqual__LeftAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMinusEqualAccess().getLeftAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MinusEqual__Group__2__Impl"


    // $ANTLR start "rule__MinusEqual__Group__3"
    // InternalLegoLang.g:7817:1: rule__MinusEqual__Group__3 : rule__MinusEqual__Group__3__Impl rule__MinusEqual__Group__4 ;
    public final void rule__MinusEqual__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7821:1: ( rule__MinusEqual__Group__3__Impl rule__MinusEqual__Group__4 )
            // InternalLegoLang.g:7822:2: rule__MinusEqual__Group__3__Impl rule__MinusEqual__Group__4
            {
            pushFollow(FOLLOW_9);
            rule__MinusEqual__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MinusEqual__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MinusEqual__Group__3"


    // $ANTLR start "rule__MinusEqual__Group__3__Impl"
    // InternalLegoLang.g:7829:1: rule__MinusEqual__Group__3__Impl : ( '-=' ) ;
    public final void rule__MinusEqual__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7833:1: ( ( '-=' ) )
            // InternalLegoLang.g:7834:1: ( '-=' )
            {
            // InternalLegoLang.g:7834:1: ( '-=' )
            // InternalLegoLang.g:7835:2: '-='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMinusEqualAccess().getHyphenMinusEqualsSignKeyword_3()); 
            }
            match(input,66,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMinusEqualAccess().getHyphenMinusEqualsSignKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MinusEqual__Group__3__Impl"


    // $ANTLR start "rule__MinusEqual__Group__4"
    // InternalLegoLang.g:7844:1: rule__MinusEqual__Group__4 : rule__MinusEqual__Group__4__Impl rule__MinusEqual__Group__5 ;
    public final void rule__MinusEqual__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7848:1: ( rule__MinusEqual__Group__4__Impl rule__MinusEqual__Group__5 )
            // InternalLegoLang.g:7849:2: rule__MinusEqual__Group__4__Impl rule__MinusEqual__Group__5
            {
            pushFollow(FOLLOW_17);
            rule__MinusEqual__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MinusEqual__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MinusEqual__Group__4"


    // $ANTLR start "rule__MinusEqual__Group__4__Impl"
    // InternalLegoLang.g:7856:1: rule__MinusEqual__Group__4__Impl : ( ( rule__MinusEqual__RightAssignment_4 ) ) ;
    public final void rule__MinusEqual__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7860:1: ( ( ( rule__MinusEqual__RightAssignment_4 ) ) )
            // InternalLegoLang.g:7861:1: ( ( rule__MinusEqual__RightAssignment_4 ) )
            {
            // InternalLegoLang.g:7861:1: ( ( rule__MinusEqual__RightAssignment_4 ) )
            // InternalLegoLang.g:7862:2: ( rule__MinusEqual__RightAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMinusEqualAccess().getRightAssignment_4()); 
            }
            // InternalLegoLang.g:7863:2: ( rule__MinusEqual__RightAssignment_4 )
            // InternalLegoLang.g:7863:3: rule__MinusEqual__RightAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__MinusEqual__RightAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMinusEqualAccess().getRightAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MinusEqual__Group__4__Impl"


    // $ANTLR start "rule__MinusEqual__Group__5"
    // InternalLegoLang.g:7871:1: rule__MinusEqual__Group__5 : rule__MinusEqual__Group__5__Impl ;
    public final void rule__MinusEqual__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7875:1: ( rule__MinusEqual__Group__5__Impl )
            // InternalLegoLang.g:7876:2: rule__MinusEqual__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MinusEqual__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MinusEqual__Group__5"


    // $ANTLR start "rule__MinusEqual__Group__5__Impl"
    // InternalLegoLang.g:7882:1: rule__MinusEqual__Group__5__Impl : ( ')' ) ;
    public final void rule__MinusEqual__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7886:1: ( ( ')' ) )
            // InternalLegoLang.g:7887:1: ( ')' )
            {
            // InternalLegoLang.g:7887:1: ( ')' )
            // InternalLegoLang.g:7888:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMinusEqualAccess().getRightParenthesisKeyword_5()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMinusEqualAccess().getRightParenthesisKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MinusEqual__Group__5__Impl"


    // $ANTLR start "rule__UnInteger__Group__0"
    // InternalLegoLang.g:7898:1: rule__UnInteger__Group__0 : rule__UnInteger__Group__0__Impl rule__UnInteger__Group__1 ;
    public final void rule__UnInteger__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7902:1: ( rule__UnInteger__Group__0__Impl rule__UnInteger__Group__1 )
            // InternalLegoLang.g:7903:2: rule__UnInteger__Group__0__Impl rule__UnInteger__Group__1
            {
            pushFollow(FOLLOW_52);
            rule__UnInteger__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnInteger__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__Group__0"


    // $ANTLR start "rule__UnInteger__Group__0__Impl"
    // InternalLegoLang.g:7910:1: rule__UnInteger__Group__0__Impl : ( () ) ;
    public final void rule__UnInteger__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7914:1: ( ( () ) )
            // InternalLegoLang.g:7915:1: ( () )
            {
            // InternalLegoLang.g:7915:1: ( () )
            // InternalLegoLang.g:7916:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnIntegerAccess().getUnIntegerAction_0()); 
            }
            // InternalLegoLang.g:7917:2: ()
            // InternalLegoLang.g:7917:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnIntegerAccess().getUnIntegerAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__Group__0__Impl"


    // $ANTLR start "rule__UnInteger__Group__1"
    // InternalLegoLang.g:7925:1: rule__UnInteger__Group__1 : rule__UnInteger__Group__1__Impl rule__UnInteger__Group__2 ;
    public final void rule__UnInteger__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7929:1: ( rule__UnInteger__Group__1__Impl rule__UnInteger__Group__2 )
            // InternalLegoLang.g:7930:2: rule__UnInteger__Group__1__Impl rule__UnInteger__Group__2
            {
            pushFollow(FOLLOW_52);
            rule__UnInteger__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnInteger__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__Group__1"


    // $ANTLR start "rule__UnInteger__Group__1__Impl"
    // InternalLegoLang.g:7937:1: rule__UnInteger__Group__1__Impl : ( ( rule__UnInteger__IsConstAssignment_1 )? ) ;
    public final void rule__UnInteger__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7941:1: ( ( ( rule__UnInteger__IsConstAssignment_1 )? ) )
            // InternalLegoLang.g:7942:1: ( ( rule__UnInteger__IsConstAssignment_1 )? )
            {
            // InternalLegoLang.g:7942:1: ( ( rule__UnInteger__IsConstAssignment_1 )? )
            // InternalLegoLang.g:7943:2: ( rule__UnInteger__IsConstAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnIntegerAccess().getIsConstAssignment_1()); 
            }
            // InternalLegoLang.g:7944:2: ( rule__UnInteger__IsConstAssignment_1 )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==72) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // InternalLegoLang.g:7944:3: rule__UnInteger__IsConstAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnInteger__IsConstAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnIntegerAccess().getIsConstAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__Group__1__Impl"


    // $ANTLR start "rule__UnInteger__Group__2"
    // InternalLegoLang.g:7952:1: rule__UnInteger__Group__2 : rule__UnInteger__Group__2__Impl rule__UnInteger__Group__3 ;
    public final void rule__UnInteger__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7956:1: ( rule__UnInteger__Group__2__Impl rule__UnInteger__Group__3 )
            // InternalLegoLang.g:7957:2: rule__UnInteger__Group__2__Impl rule__UnInteger__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__UnInteger__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnInteger__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__Group__2"


    // $ANTLR start "rule__UnInteger__Group__2__Impl"
    // InternalLegoLang.g:7964:1: rule__UnInteger__Group__2__Impl : ( 'int' ) ;
    public final void rule__UnInteger__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7968:1: ( ( 'int' ) )
            // InternalLegoLang.g:7969:1: ( 'int' )
            {
            // InternalLegoLang.g:7969:1: ( 'int' )
            // InternalLegoLang.g:7970:2: 'int'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnIntegerAccess().getIntKeyword_2()); 
            }
            match(input,67,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnIntegerAccess().getIntKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__Group__2__Impl"


    // $ANTLR start "rule__UnInteger__Group__3"
    // InternalLegoLang.g:7979:1: rule__UnInteger__Group__3 : rule__UnInteger__Group__3__Impl rule__UnInteger__Group__4 ;
    public final void rule__UnInteger__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7983:1: ( rule__UnInteger__Group__3__Impl rule__UnInteger__Group__4 )
            // InternalLegoLang.g:7984:2: rule__UnInteger__Group__3__Impl rule__UnInteger__Group__4
            {
            pushFollow(FOLLOW_18);
            rule__UnInteger__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnInteger__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__Group__3"


    // $ANTLR start "rule__UnInteger__Group__3__Impl"
    // InternalLegoLang.g:7991:1: rule__UnInteger__Group__3__Impl : ( ( rule__UnInteger__NameAssignment_3 ) ) ;
    public final void rule__UnInteger__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7995:1: ( ( ( rule__UnInteger__NameAssignment_3 ) ) )
            // InternalLegoLang.g:7996:1: ( ( rule__UnInteger__NameAssignment_3 ) )
            {
            // InternalLegoLang.g:7996:1: ( ( rule__UnInteger__NameAssignment_3 ) )
            // InternalLegoLang.g:7997:2: ( rule__UnInteger__NameAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnIntegerAccess().getNameAssignment_3()); 
            }
            // InternalLegoLang.g:7998:2: ( rule__UnInteger__NameAssignment_3 )
            // InternalLegoLang.g:7998:3: rule__UnInteger__NameAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__UnInteger__NameAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnIntegerAccess().getNameAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__Group__3__Impl"


    // $ANTLR start "rule__UnInteger__Group__4"
    // InternalLegoLang.g:8006:1: rule__UnInteger__Group__4 : rule__UnInteger__Group__4__Impl ;
    public final void rule__UnInteger__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8010:1: ( rule__UnInteger__Group__4__Impl )
            // InternalLegoLang.g:8011:2: rule__UnInteger__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnInteger__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__Group__4"


    // $ANTLR start "rule__UnInteger__Group__4__Impl"
    // InternalLegoLang.g:8017:1: rule__UnInteger__Group__4__Impl : ( ( rule__UnInteger__Group_4__0 )? ) ;
    public final void rule__UnInteger__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8021:1: ( ( ( rule__UnInteger__Group_4__0 )? ) )
            // InternalLegoLang.g:8022:1: ( ( rule__UnInteger__Group_4__0 )? )
            {
            // InternalLegoLang.g:8022:1: ( ( rule__UnInteger__Group_4__0 )? )
            // InternalLegoLang.g:8023:2: ( rule__UnInteger__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnIntegerAccess().getGroup_4()); 
            }
            // InternalLegoLang.g:8024:2: ( rule__UnInteger__Group_4__0 )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==35) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // InternalLegoLang.g:8024:3: rule__UnInteger__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnInteger__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnIntegerAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__Group__4__Impl"


    // $ANTLR start "rule__UnInteger__Group_4__0"
    // InternalLegoLang.g:8033:1: rule__UnInteger__Group_4__0 : rule__UnInteger__Group_4__0__Impl rule__UnInteger__Group_4__1 ;
    public final void rule__UnInteger__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8037:1: ( rule__UnInteger__Group_4__0__Impl rule__UnInteger__Group_4__1 )
            // InternalLegoLang.g:8038:2: rule__UnInteger__Group_4__0__Impl rule__UnInteger__Group_4__1
            {
            pushFollow(FOLLOW_11);
            rule__UnInteger__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnInteger__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__Group_4__0"


    // $ANTLR start "rule__UnInteger__Group_4__0__Impl"
    // InternalLegoLang.g:8045:1: rule__UnInteger__Group_4__0__Impl : ( '=' ) ;
    public final void rule__UnInteger__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8049:1: ( ( '=' ) )
            // InternalLegoLang.g:8050:1: ( '=' )
            {
            // InternalLegoLang.g:8050:1: ( '=' )
            // InternalLegoLang.g:8051:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnIntegerAccess().getEqualsSignKeyword_4_0()); 
            }
            match(input,35,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnIntegerAccess().getEqualsSignKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__Group_4__0__Impl"


    // $ANTLR start "rule__UnInteger__Group_4__1"
    // InternalLegoLang.g:8060:1: rule__UnInteger__Group_4__1 : rule__UnInteger__Group_4__1__Impl ;
    public final void rule__UnInteger__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8064:1: ( rule__UnInteger__Group_4__1__Impl )
            // InternalLegoLang.g:8065:2: rule__UnInteger__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnInteger__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__Group_4__1"


    // $ANTLR start "rule__UnInteger__Group_4__1__Impl"
    // InternalLegoLang.g:8071:1: rule__UnInteger__Group_4__1__Impl : ( ( rule__UnInteger__InitialeValueAssignment_4_1 ) ) ;
    public final void rule__UnInteger__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8075:1: ( ( ( rule__UnInteger__InitialeValueAssignment_4_1 ) ) )
            // InternalLegoLang.g:8076:1: ( ( rule__UnInteger__InitialeValueAssignment_4_1 ) )
            {
            // InternalLegoLang.g:8076:1: ( ( rule__UnInteger__InitialeValueAssignment_4_1 ) )
            // InternalLegoLang.g:8077:2: ( rule__UnInteger__InitialeValueAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnIntegerAccess().getInitialeValueAssignment_4_1()); 
            }
            // InternalLegoLang.g:8078:2: ( rule__UnInteger__InitialeValueAssignment_4_1 )
            // InternalLegoLang.g:8078:3: rule__UnInteger__InitialeValueAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__UnInteger__InitialeValueAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnIntegerAccess().getInitialeValueAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__Group_4__1__Impl"


    // $ANTLR start "rule__UnDouble__Group__0"
    // InternalLegoLang.g:8087:1: rule__UnDouble__Group__0 : rule__UnDouble__Group__0__Impl rule__UnDouble__Group__1 ;
    public final void rule__UnDouble__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8091:1: ( rule__UnDouble__Group__0__Impl rule__UnDouble__Group__1 )
            // InternalLegoLang.g:8092:2: rule__UnDouble__Group__0__Impl rule__UnDouble__Group__1
            {
            pushFollow(FOLLOW_53);
            rule__UnDouble__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnDouble__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group__0"


    // $ANTLR start "rule__UnDouble__Group__0__Impl"
    // InternalLegoLang.g:8099:1: rule__UnDouble__Group__0__Impl : ( () ) ;
    public final void rule__UnDouble__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8103:1: ( ( () ) )
            // InternalLegoLang.g:8104:1: ( () )
            {
            // InternalLegoLang.g:8104:1: ( () )
            // InternalLegoLang.g:8105:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getUnDoubleAction_0()); 
            }
            // InternalLegoLang.g:8106:2: ()
            // InternalLegoLang.g:8106:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getUnDoubleAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group__0__Impl"


    // $ANTLR start "rule__UnDouble__Group__1"
    // InternalLegoLang.g:8114:1: rule__UnDouble__Group__1 : rule__UnDouble__Group__1__Impl rule__UnDouble__Group__2 ;
    public final void rule__UnDouble__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8118:1: ( rule__UnDouble__Group__1__Impl rule__UnDouble__Group__2 )
            // InternalLegoLang.g:8119:2: rule__UnDouble__Group__1__Impl rule__UnDouble__Group__2
            {
            pushFollow(FOLLOW_53);
            rule__UnDouble__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnDouble__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group__1"


    // $ANTLR start "rule__UnDouble__Group__1__Impl"
    // InternalLegoLang.g:8126:1: rule__UnDouble__Group__1__Impl : ( ( rule__UnDouble__IsConstAssignment_1 )? ) ;
    public final void rule__UnDouble__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8130:1: ( ( ( rule__UnDouble__IsConstAssignment_1 )? ) )
            // InternalLegoLang.g:8131:1: ( ( rule__UnDouble__IsConstAssignment_1 )? )
            {
            // InternalLegoLang.g:8131:1: ( ( rule__UnDouble__IsConstAssignment_1 )? )
            // InternalLegoLang.g:8132:2: ( rule__UnDouble__IsConstAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getIsConstAssignment_1()); 
            }
            // InternalLegoLang.g:8133:2: ( rule__UnDouble__IsConstAssignment_1 )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==72) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // InternalLegoLang.g:8133:3: rule__UnDouble__IsConstAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnDouble__IsConstAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getIsConstAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group__1__Impl"


    // $ANTLR start "rule__UnDouble__Group__2"
    // InternalLegoLang.g:8141:1: rule__UnDouble__Group__2 : rule__UnDouble__Group__2__Impl rule__UnDouble__Group__3 ;
    public final void rule__UnDouble__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8145:1: ( rule__UnDouble__Group__2__Impl rule__UnDouble__Group__3 )
            // InternalLegoLang.g:8146:2: rule__UnDouble__Group__2__Impl rule__UnDouble__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__UnDouble__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnDouble__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group__2"


    // $ANTLR start "rule__UnDouble__Group__2__Impl"
    // InternalLegoLang.g:8153:1: rule__UnDouble__Group__2__Impl : ( 'double' ) ;
    public final void rule__UnDouble__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8157:1: ( ( 'double' ) )
            // InternalLegoLang.g:8158:1: ( 'double' )
            {
            // InternalLegoLang.g:8158:1: ( 'double' )
            // InternalLegoLang.g:8159:2: 'double'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getDoubleKeyword_2()); 
            }
            match(input,68,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getDoubleKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group__2__Impl"


    // $ANTLR start "rule__UnDouble__Group__3"
    // InternalLegoLang.g:8168:1: rule__UnDouble__Group__3 : rule__UnDouble__Group__3__Impl rule__UnDouble__Group__4 ;
    public final void rule__UnDouble__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8172:1: ( rule__UnDouble__Group__3__Impl rule__UnDouble__Group__4 )
            // InternalLegoLang.g:8173:2: rule__UnDouble__Group__3__Impl rule__UnDouble__Group__4
            {
            pushFollow(FOLLOW_18);
            rule__UnDouble__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnDouble__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group__3"


    // $ANTLR start "rule__UnDouble__Group__3__Impl"
    // InternalLegoLang.g:8180:1: rule__UnDouble__Group__3__Impl : ( ( rule__UnDouble__NameAssignment_3 ) ) ;
    public final void rule__UnDouble__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8184:1: ( ( ( rule__UnDouble__NameAssignment_3 ) ) )
            // InternalLegoLang.g:8185:1: ( ( rule__UnDouble__NameAssignment_3 ) )
            {
            // InternalLegoLang.g:8185:1: ( ( rule__UnDouble__NameAssignment_3 ) )
            // InternalLegoLang.g:8186:2: ( rule__UnDouble__NameAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getNameAssignment_3()); 
            }
            // InternalLegoLang.g:8187:2: ( rule__UnDouble__NameAssignment_3 )
            // InternalLegoLang.g:8187:3: rule__UnDouble__NameAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__UnDouble__NameAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getNameAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group__3__Impl"


    // $ANTLR start "rule__UnDouble__Group__4"
    // InternalLegoLang.g:8195:1: rule__UnDouble__Group__4 : rule__UnDouble__Group__4__Impl ;
    public final void rule__UnDouble__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8199:1: ( rule__UnDouble__Group__4__Impl )
            // InternalLegoLang.g:8200:2: rule__UnDouble__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnDouble__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group__4"


    // $ANTLR start "rule__UnDouble__Group__4__Impl"
    // InternalLegoLang.g:8206:1: rule__UnDouble__Group__4__Impl : ( ( rule__UnDouble__Group_4__0 )? ) ;
    public final void rule__UnDouble__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8210:1: ( ( ( rule__UnDouble__Group_4__0 )? ) )
            // InternalLegoLang.g:8211:1: ( ( rule__UnDouble__Group_4__0 )? )
            {
            // InternalLegoLang.g:8211:1: ( ( rule__UnDouble__Group_4__0 )? )
            // InternalLegoLang.g:8212:2: ( rule__UnDouble__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getGroup_4()); 
            }
            // InternalLegoLang.g:8213:2: ( rule__UnDouble__Group_4__0 )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==35) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // InternalLegoLang.g:8213:3: rule__UnDouble__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnDouble__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group__4__Impl"


    // $ANTLR start "rule__UnDouble__Group_4__0"
    // InternalLegoLang.g:8222:1: rule__UnDouble__Group_4__0 : rule__UnDouble__Group_4__0__Impl rule__UnDouble__Group_4__1 ;
    public final void rule__UnDouble__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8226:1: ( rule__UnDouble__Group_4__0__Impl rule__UnDouble__Group_4__1 )
            // InternalLegoLang.g:8227:2: rule__UnDouble__Group_4__0__Impl rule__UnDouble__Group_4__1
            {
            pushFollow(FOLLOW_11);
            rule__UnDouble__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnDouble__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group_4__0"


    // $ANTLR start "rule__UnDouble__Group_4__0__Impl"
    // InternalLegoLang.g:8234:1: rule__UnDouble__Group_4__0__Impl : ( '=' ) ;
    public final void rule__UnDouble__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8238:1: ( ( '=' ) )
            // InternalLegoLang.g:8239:1: ( '=' )
            {
            // InternalLegoLang.g:8239:1: ( '=' )
            // InternalLegoLang.g:8240:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getEqualsSignKeyword_4_0()); 
            }
            match(input,35,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getEqualsSignKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group_4__0__Impl"


    // $ANTLR start "rule__UnDouble__Group_4__1"
    // InternalLegoLang.g:8249:1: rule__UnDouble__Group_4__1 : rule__UnDouble__Group_4__1__Impl rule__UnDouble__Group_4__2 ;
    public final void rule__UnDouble__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8253:1: ( rule__UnDouble__Group_4__1__Impl rule__UnDouble__Group_4__2 )
            // InternalLegoLang.g:8254:2: rule__UnDouble__Group_4__1__Impl rule__UnDouble__Group_4__2
            {
            pushFollow(FOLLOW_54);
            rule__UnDouble__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnDouble__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group_4__1"


    // $ANTLR start "rule__UnDouble__Group_4__1__Impl"
    // InternalLegoLang.g:8261:1: rule__UnDouble__Group_4__1__Impl : ( ( rule__UnDouble__InitialeValue1Assignment_4_1 ) ) ;
    public final void rule__UnDouble__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8265:1: ( ( ( rule__UnDouble__InitialeValue1Assignment_4_1 ) ) )
            // InternalLegoLang.g:8266:1: ( ( rule__UnDouble__InitialeValue1Assignment_4_1 ) )
            {
            // InternalLegoLang.g:8266:1: ( ( rule__UnDouble__InitialeValue1Assignment_4_1 ) )
            // InternalLegoLang.g:8267:2: ( rule__UnDouble__InitialeValue1Assignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getInitialeValue1Assignment_4_1()); 
            }
            // InternalLegoLang.g:8268:2: ( rule__UnDouble__InitialeValue1Assignment_4_1 )
            // InternalLegoLang.g:8268:3: rule__UnDouble__InitialeValue1Assignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__UnDouble__InitialeValue1Assignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getInitialeValue1Assignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group_4__1__Impl"


    // $ANTLR start "rule__UnDouble__Group_4__2"
    // InternalLegoLang.g:8276:1: rule__UnDouble__Group_4__2 : rule__UnDouble__Group_4__2__Impl rule__UnDouble__Group_4__3 ;
    public final void rule__UnDouble__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8280:1: ( rule__UnDouble__Group_4__2__Impl rule__UnDouble__Group_4__3 )
            // InternalLegoLang.g:8281:2: rule__UnDouble__Group_4__2__Impl rule__UnDouble__Group_4__3
            {
            pushFollow(FOLLOW_11);
            rule__UnDouble__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnDouble__Group_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group_4__2"


    // $ANTLR start "rule__UnDouble__Group_4__2__Impl"
    // InternalLegoLang.g:8288:1: rule__UnDouble__Group_4__2__Impl : ( '.' ) ;
    public final void rule__UnDouble__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8292:1: ( ( '.' ) )
            // InternalLegoLang.g:8293:1: ( '.' )
            {
            // InternalLegoLang.g:8293:1: ( '.' )
            // InternalLegoLang.g:8294:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getFullStopKeyword_4_2()); 
            }
            match(input,69,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getFullStopKeyword_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group_4__2__Impl"


    // $ANTLR start "rule__UnDouble__Group_4__3"
    // InternalLegoLang.g:8303:1: rule__UnDouble__Group_4__3 : rule__UnDouble__Group_4__3__Impl ;
    public final void rule__UnDouble__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8307:1: ( rule__UnDouble__Group_4__3__Impl )
            // InternalLegoLang.g:8308:2: rule__UnDouble__Group_4__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnDouble__Group_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group_4__3"


    // $ANTLR start "rule__UnDouble__Group_4__3__Impl"
    // InternalLegoLang.g:8314:1: rule__UnDouble__Group_4__3__Impl : ( ( rule__UnDouble__InitialeValue2Assignment_4_3 ) ) ;
    public final void rule__UnDouble__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8318:1: ( ( ( rule__UnDouble__InitialeValue2Assignment_4_3 ) ) )
            // InternalLegoLang.g:8319:1: ( ( rule__UnDouble__InitialeValue2Assignment_4_3 ) )
            {
            // InternalLegoLang.g:8319:1: ( ( rule__UnDouble__InitialeValue2Assignment_4_3 ) )
            // InternalLegoLang.g:8320:2: ( rule__UnDouble__InitialeValue2Assignment_4_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getInitialeValue2Assignment_4_3()); 
            }
            // InternalLegoLang.g:8321:2: ( rule__UnDouble__InitialeValue2Assignment_4_3 )
            // InternalLegoLang.g:8321:3: rule__UnDouble__InitialeValue2Assignment_4_3
            {
            pushFollow(FOLLOW_2);
            rule__UnDouble__InitialeValue2Assignment_4_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getInitialeValue2Assignment_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group_4__3__Impl"


    // $ANTLR start "rule__UnBoolean__Group__0"
    // InternalLegoLang.g:8330:1: rule__UnBoolean__Group__0 : rule__UnBoolean__Group__0__Impl rule__UnBoolean__Group__1 ;
    public final void rule__UnBoolean__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8334:1: ( rule__UnBoolean__Group__0__Impl rule__UnBoolean__Group__1 )
            // InternalLegoLang.g:8335:2: rule__UnBoolean__Group__0__Impl rule__UnBoolean__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__UnBoolean__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnBoolean__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__Group__0"


    // $ANTLR start "rule__UnBoolean__Group__0__Impl"
    // InternalLegoLang.g:8342:1: rule__UnBoolean__Group__0__Impl : ( () ) ;
    public final void rule__UnBoolean__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8346:1: ( ( () ) )
            // InternalLegoLang.g:8347:1: ( () )
            {
            // InternalLegoLang.g:8347:1: ( () )
            // InternalLegoLang.g:8348:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnBooleanAccess().getUnBooleanAction_0()); 
            }
            // InternalLegoLang.g:8349:2: ()
            // InternalLegoLang.g:8349:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnBooleanAccess().getUnBooleanAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__Group__0__Impl"


    // $ANTLR start "rule__UnBoolean__Group__1"
    // InternalLegoLang.g:8357:1: rule__UnBoolean__Group__1 : rule__UnBoolean__Group__1__Impl rule__UnBoolean__Group__2 ;
    public final void rule__UnBoolean__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8361:1: ( rule__UnBoolean__Group__1__Impl rule__UnBoolean__Group__2 )
            // InternalLegoLang.g:8362:2: rule__UnBoolean__Group__1__Impl rule__UnBoolean__Group__2
            {
            pushFollow(FOLLOW_55);
            rule__UnBoolean__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnBoolean__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__Group__1"


    // $ANTLR start "rule__UnBoolean__Group__1__Impl"
    // InternalLegoLang.g:8369:1: rule__UnBoolean__Group__1__Impl : ( ( rule__UnBoolean__IsConstAssignment_1 )? ) ;
    public final void rule__UnBoolean__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8373:1: ( ( ( rule__UnBoolean__IsConstAssignment_1 )? ) )
            // InternalLegoLang.g:8374:1: ( ( rule__UnBoolean__IsConstAssignment_1 )? )
            {
            // InternalLegoLang.g:8374:1: ( ( rule__UnBoolean__IsConstAssignment_1 )? )
            // InternalLegoLang.g:8375:2: ( rule__UnBoolean__IsConstAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnBooleanAccess().getIsConstAssignment_1()); 
            }
            // InternalLegoLang.g:8376:2: ( rule__UnBoolean__IsConstAssignment_1 )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==72) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // InternalLegoLang.g:8376:3: rule__UnBoolean__IsConstAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnBoolean__IsConstAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnBooleanAccess().getIsConstAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__Group__1__Impl"


    // $ANTLR start "rule__UnBoolean__Group__2"
    // InternalLegoLang.g:8384:1: rule__UnBoolean__Group__2 : rule__UnBoolean__Group__2__Impl rule__UnBoolean__Group__3 ;
    public final void rule__UnBoolean__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8388:1: ( rule__UnBoolean__Group__2__Impl rule__UnBoolean__Group__3 )
            // InternalLegoLang.g:8389:2: rule__UnBoolean__Group__2__Impl rule__UnBoolean__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__UnBoolean__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnBoolean__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__Group__2"


    // $ANTLR start "rule__UnBoolean__Group__2__Impl"
    // InternalLegoLang.g:8396:1: rule__UnBoolean__Group__2__Impl : ( 'bool' ) ;
    public final void rule__UnBoolean__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8400:1: ( ( 'bool' ) )
            // InternalLegoLang.g:8401:1: ( 'bool' )
            {
            // InternalLegoLang.g:8401:1: ( 'bool' )
            // InternalLegoLang.g:8402:2: 'bool'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnBooleanAccess().getBoolKeyword_2()); 
            }
            match(input,70,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnBooleanAccess().getBoolKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__Group__2__Impl"


    // $ANTLR start "rule__UnBoolean__Group__3"
    // InternalLegoLang.g:8411:1: rule__UnBoolean__Group__3 : rule__UnBoolean__Group__3__Impl rule__UnBoolean__Group__4 ;
    public final void rule__UnBoolean__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8415:1: ( rule__UnBoolean__Group__3__Impl rule__UnBoolean__Group__4 )
            // InternalLegoLang.g:8416:2: rule__UnBoolean__Group__3__Impl rule__UnBoolean__Group__4
            {
            pushFollow(FOLLOW_18);
            rule__UnBoolean__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnBoolean__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__Group__3"


    // $ANTLR start "rule__UnBoolean__Group__3__Impl"
    // InternalLegoLang.g:8423:1: rule__UnBoolean__Group__3__Impl : ( ( rule__UnBoolean__NameAssignment_3 ) ) ;
    public final void rule__UnBoolean__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8427:1: ( ( ( rule__UnBoolean__NameAssignment_3 ) ) )
            // InternalLegoLang.g:8428:1: ( ( rule__UnBoolean__NameAssignment_3 ) )
            {
            // InternalLegoLang.g:8428:1: ( ( rule__UnBoolean__NameAssignment_3 ) )
            // InternalLegoLang.g:8429:2: ( rule__UnBoolean__NameAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnBooleanAccess().getNameAssignment_3()); 
            }
            // InternalLegoLang.g:8430:2: ( rule__UnBoolean__NameAssignment_3 )
            // InternalLegoLang.g:8430:3: rule__UnBoolean__NameAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__UnBoolean__NameAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnBooleanAccess().getNameAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__Group__3__Impl"


    // $ANTLR start "rule__UnBoolean__Group__4"
    // InternalLegoLang.g:8438:1: rule__UnBoolean__Group__4 : rule__UnBoolean__Group__4__Impl ;
    public final void rule__UnBoolean__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8442:1: ( rule__UnBoolean__Group__4__Impl )
            // InternalLegoLang.g:8443:2: rule__UnBoolean__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnBoolean__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__Group__4"


    // $ANTLR start "rule__UnBoolean__Group__4__Impl"
    // InternalLegoLang.g:8449:1: rule__UnBoolean__Group__4__Impl : ( ( rule__UnBoolean__Group_4__0 )? ) ;
    public final void rule__UnBoolean__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8453:1: ( ( ( rule__UnBoolean__Group_4__0 )? ) )
            // InternalLegoLang.g:8454:1: ( ( rule__UnBoolean__Group_4__0 )? )
            {
            // InternalLegoLang.g:8454:1: ( ( rule__UnBoolean__Group_4__0 )? )
            // InternalLegoLang.g:8455:2: ( rule__UnBoolean__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnBooleanAccess().getGroup_4()); 
            }
            // InternalLegoLang.g:8456:2: ( rule__UnBoolean__Group_4__0 )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==35) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // InternalLegoLang.g:8456:3: rule__UnBoolean__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnBoolean__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnBooleanAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__Group__4__Impl"


    // $ANTLR start "rule__UnBoolean__Group_4__0"
    // InternalLegoLang.g:8465:1: rule__UnBoolean__Group_4__0 : rule__UnBoolean__Group_4__0__Impl rule__UnBoolean__Group_4__1 ;
    public final void rule__UnBoolean__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8469:1: ( rule__UnBoolean__Group_4__0__Impl rule__UnBoolean__Group_4__1 )
            // InternalLegoLang.g:8470:2: rule__UnBoolean__Group_4__0__Impl rule__UnBoolean__Group_4__1
            {
            pushFollow(FOLLOW_56);
            rule__UnBoolean__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnBoolean__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__Group_4__0"


    // $ANTLR start "rule__UnBoolean__Group_4__0__Impl"
    // InternalLegoLang.g:8477:1: rule__UnBoolean__Group_4__0__Impl : ( '=' ) ;
    public final void rule__UnBoolean__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8481:1: ( ( '=' ) )
            // InternalLegoLang.g:8482:1: ( '=' )
            {
            // InternalLegoLang.g:8482:1: ( '=' )
            // InternalLegoLang.g:8483:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnBooleanAccess().getEqualsSignKeyword_4_0()); 
            }
            match(input,35,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnBooleanAccess().getEqualsSignKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__Group_4__0__Impl"


    // $ANTLR start "rule__UnBoolean__Group_4__1"
    // InternalLegoLang.g:8492:1: rule__UnBoolean__Group_4__1 : rule__UnBoolean__Group_4__1__Impl ;
    public final void rule__UnBoolean__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8496:1: ( rule__UnBoolean__Group_4__1__Impl )
            // InternalLegoLang.g:8497:2: rule__UnBoolean__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnBoolean__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__Group_4__1"


    // $ANTLR start "rule__UnBoolean__Group_4__1__Impl"
    // InternalLegoLang.g:8503:1: rule__UnBoolean__Group_4__1__Impl : ( ( rule__UnBoolean__InitialeValueAssignment_4_1 ) ) ;
    public final void rule__UnBoolean__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8507:1: ( ( ( rule__UnBoolean__InitialeValueAssignment_4_1 ) ) )
            // InternalLegoLang.g:8508:1: ( ( rule__UnBoolean__InitialeValueAssignment_4_1 ) )
            {
            // InternalLegoLang.g:8508:1: ( ( rule__UnBoolean__InitialeValueAssignment_4_1 ) )
            // InternalLegoLang.g:8509:2: ( rule__UnBoolean__InitialeValueAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnBooleanAccess().getInitialeValueAssignment_4_1()); 
            }
            // InternalLegoLang.g:8510:2: ( rule__UnBoolean__InitialeValueAssignment_4_1 )
            // InternalLegoLang.g:8510:3: rule__UnBoolean__InitialeValueAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__UnBoolean__InitialeValueAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnBooleanAccess().getInitialeValueAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__Group_4__1__Impl"


    // $ANTLR start "rule__UnString__Group__0"
    // InternalLegoLang.g:8519:1: rule__UnString__Group__0 : rule__UnString__Group__0__Impl rule__UnString__Group__1 ;
    public final void rule__UnString__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8523:1: ( rule__UnString__Group__0__Impl rule__UnString__Group__1 )
            // InternalLegoLang.g:8524:2: rule__UnString__Group__0__Impl rule__UnString__Group__1
            {
            pushFollow(FOLLOW_57);
            rule__UnString__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnString__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__Group__0"


    // $ANTLR start "rule__UnString__Group__0__Impl"
    // InternalLegoLang.g:8531:1: rule__UnString__Group__0__Impl : ( () ) ;
    public final void rule__UnString__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8535:1: ( ( () ) )
            // InternalLegoLang.g:8536:1: ( () )
            {
            // InternalLegoLang.g:8536:1: ( () )
            // InternalLegoLang.g:8537:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnStringAccess().getUnStringAction_0()); 
            }
            // InternalLegoLang.g:8538:2: ()
            // InternalLegoLang.g:8538:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnStringAccess().getUnStringAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__Group__0__Impl"


    // $ANTLR start "rule__UnString__Group__1"
    // InternalLegoLang.g:8546:1: rule__UnString__Group__1 : rule__UnString__Group__1__Impl rule__UnString__Group__2 ;
    public final void rule__UnString__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8550:1: ( rule__UnString__Group__1__Impl rule__UnString__Group__2 )
            // InternalLegoLang.g:8551:2: rule__UnString__Group__1__Impl rule__UnString__Group__2
            {
            pushFollow(FOLLOW_57);
            rule__UnString__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnString__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__Group__1"


    // $ANTLR start "rule__UnString__Group__1__Impl"
    // InternalLegoLang.g:8558:1: rule__UnString__Group__1__Impl : ( ( rule__UnString__IsConstAssignment_1 )? ) ;
    public final void rule__UnString__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8562:1: ( ( ( rule__UnString__IsConstAssignment_1 )? ) )
            // InternalLegoLang.g:8563:1: ( ( rule__UnString__IsConstAssignment_1 )? )
            {
            // InternalLegoLang.g:8563:1: ( ( rule__UnString__IsConstAssignment_1 )? )
            // InternalLegoLang.g:8564:2: ( rule__UnString__IsConstAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnStringAccess().getIsConstAssignment_1()); 
            }
            // InternalLegoLang.g:8565:2: ( rule__UnString__IsConstAssignment_1 )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==72) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // InternalLegoLang.g:8565:3: rule__UnString__IsConstAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnString__IsConstAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnStringAccess().getIsConstAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__Group__1__Impl"


    // $ANTLR start "rule__UnString__Group__2"
    // InternalLegoLang.g:8573:1: rule__UnString__Group__2 : rule__UnString__Group__2__Impl rule__UnString__Group__3 ;
    public final void rule__UnString__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8577:1: ( rule__UnString__Group__2__Impl rule__UnString__Group__3 )
            // InternalLegoLang.g:8578:2: rule__UnString__Group__2__Impl rule__UnString__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__UnString__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnString__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__Group__2"


    // $ANTLR start "rule__UnString__Group__2__Impl"
    // InternalLegoLang.g:8585:1: rule__UnString__Group__2__Impl : ( 'string' ) ;
    public final void rule__UnString__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8589:1: ( ( 'string' ) )
            // InternalLegoLang.g:8590:1: ( 'string' )
            {
            // InternalLegoLang.g:8590:1: ( 'string' )
            // InternalLegoLang.g:8591:2: 'string'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnStringAccess().getStringKeyword_2()); 
            }
            match(input,71,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnStringAccess().getStringKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__Group__2__Impl"


    // $ANTLR start "rule__UnString__Group__3"
    // InternalLegoLang.g:8600:1: rule__UnString__Group__3 : rule__UnString__Group__3__Impl rule__UnString__Group__4 ;
    public final void rule__UnString__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8604:1: ( rule__UnString__Group__3__Impl rule__UnString__Group__4 )
            // InternalLegoLang.g:8605:2: rule__UnString__Group__3__Impl rule__UnString__Group__4
            {
            pushFollow(FOLLOW_18);
            rule__UnString__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnString__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__Group__3"


    // $ANTLR start "rule__UnString__Group__3__Impl"
    // InternalLegoLang.g:8612:1: rule__UnString__Group__3__Impl : ( ( rule__UnString__NameAssignment_3 ) ) ;
    public final void rule__UnString__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8616:1: ( ( ( rule__UnString__NameAssignment_3 ) ) )
            // InternalLegoLang.g:8617:1: ( ( rule__UnString__NameAssignment_3 ) )
            {
            // InternalLegoLang.g:8617:1: ( ( rule__UnString__NameAssignment_3 ) )
            // InternalLegoLang.g:8618:2: ( rule__UnString__NameAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnStringAccess().getNameAssignment_3()); 
            }
            // InternalLegoLang.g:8619:2: ( rule__UnString__NameAssignment_3 )
            // InternalLegoLang.g:8619:3: rule__UnString__NameAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__UnString__NameAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnStringAccess().getNameAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__Group__3__Impl"


    // $ANTLR start "rule__UnString__Group__4"
    // InternalLegoLang.g:8627:1: rule__UnString__Group__4 : rule__UnString__Group__4__Impl ;
    public final void rule__UnString__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8631:1: ( rule__UnString__Group__4__Impl )
            // InternalLegoLang.g:8632:2: rule__UnString__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnString__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__Group__4"


    // $ANTLR start "rule__UnString__Group__4__Impl"
    // InternalLegoLang.g:8638:1: rule__UnString__Group__4__Impl : ( ( rule__UnString__Group_4__0 )? ) ;
    public final void rule__UnString__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8642:1: ( ( ( rule__UnString__Group_4__0 )? ) )
            // InternalLegoLang.g:8643:1: ( ( rule__UnString__Group_4__0 )? )
            {
            // InternalLegoLang.g:8643:1: ( ( rule__UnString__Group_4__0 )? )
            // InternalLegoLang.g:8644:2: ( rule__UnString__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnStringAccess().getGroup_4()); 
            }
            // InternalLegoLang.g:8645:2: ( rule__UnString__Group_4__0 )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==35) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalLegoLang.g:8645:3: rule__UnString__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnString__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnStringAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__Group__4__Impl"


    // $ANTLR start "rule__UnString__Group_4__0"
    // InternalLegoLang.g:8654:1: rule__UnString__Group_4__0 : rule__UnString__Group_4__0__Impl rule__UnString__Group_4__1 ;
    public final void rule__UnString__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8658:1: ( rule__UnString__Group_4__0__Impl rule__UnString__Group_4__1 )
            // InternalLegoLang.g:8659:2: rule__UnString__Group_4__0__Impl rule__UnString__Group_4__1
            {
            pushFollow(FOLLOW_58);
            rule__UnString__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnString__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__Group_4__0"


    // $ANTLR start "rule__UnString__Group_4__0__Impl"
    // InternalLegoLang.g:8666:1: rule__UnString__Group_4__0__Impl : ( '=' ) ;
    public final void rule__UnString__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8670:1: ( ( '=' ) )
            // InternalLegoLang.g:8671:1: ( '=' )
            {
            // InternalLegoLang.g:8671:1: ( '=' )
            // InternalLegoLang.g:8672:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnStringAccess().getEqualsSignKeyword_4_0()); 
            }
            match(input,35,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnStringAccess().getEqualsSignKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__Group_4__0__Impl"


    // $ANTLR start "rule__UnString__Group_4__1"
    // InternalLegoLang.g:8681:1: rule__UnString__Group_4__1 : rule__UnString__Group_4__1__Impl ;
    public final void rule__UnString__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8685:1: ( rule__UnString__Group_4__1__Impl )
            // InternalLegoLang.g:8686:2: rule__UnString__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnString__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__Group_4__1"


    // $ANTLR start "rule__UnString__Group_4__1__Impl"
    // InternalLegoLang.g:8692:1: rule__UnString__Group_4__1__Impl : ( ( rule__UnString__InitialeValueAssignment_4_1 ) ) ;
    public final void rule__UnString__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8696:1: ( ( ( rule__UnString__InitialeValueAssignment_4_1 ) ) )
            // InternalLegoLang.g:8697:1: ( ( rule__UnString__InitialeValueAssignment_4_1 ) )
            {
            // InternalLegoLang.g:8697:1: ( ( rule__UnString__InitialeValueAssignment_4_1 ) )
            // InternalLegoLang.g:8698:2: ( rule__UnString__InitialeValueAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnStringAccess().getInitialeValueAssignment_4_1()); 
            }
            // InternalLegoLang.g:8699:2: ( rule__UnString__InitialeValueAssignment_4_1 )
            // InternalLegoLang.g:8699:3: rule__UnString__InitialeValueAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__UnString__InitialeValueAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnStringAccess().getInitialeValueAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__Group_4__1__Impl"


    // $ANTLR start "rule__UnColor__Group__0"
    // InternalLegoLang.g:8708:1: rule__UnColor__Group__0 : rule__UnColor__Group__0__Impl rule__UnColor__Group__1 ;
    public final void rule__UnColor__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8712:1: ( rule__UnColor__Group__0__Impl rule__UnColor__Group__1 )
            // InternalLegoLang.g:8713:2: rule__UnColor__Group__0__Impl rule__UnColor__Group__1
            {
            pushFollow(FOLLOW_59);
            rule__UnColor__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnColor__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__Group__0"


    // $ANTLR start "rule__UnColor__Group__0__Impl"
    // InternalLegoLang.g:8720:1: rule__UnColor__Group__0__Impl : ( () ) ;
    public final void rule__UnColor__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8724:1: ( ( () ) )
            // InternalLegoLang.g:8725:1: ( () )
            {
            // InternalLegoLang.g:8725:1: ( () )
            // InternalLegoLang.g:8726:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnColorAccess().getUnColorAction_0()); 
            }
            // InternalLegoLang.g:8727:2: ()
            // InternalLegoLang.g:8727:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnColorAccess().getUnColorAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__Group__0__Impl"


    // $ANTLR start "rule__UnColor__Group__1"
    // InternalLegoLang.g:8735:1: rule__UnColor__Group__1 : rule__UnColor__Group__1__Impl rule__UnColor__Group__2 ;
    public final void rule__UnColor__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8739:1: ( rule__UnColor__Group__1__Impl rule__UnColor__Group__2 )
            // InternalLegoLang.g:8740:2: rule__UnColor__Group__1__Impl rule__UnColor__Group__2
            {
            pushFollow(FOLLOW_59);
            rule__UnColor__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnColor__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__Group__1"


    // $ANTLR start "rule__UnColor__Group__1__Impl"
    // InternalLegoLang.g:8747:1: rule__UnColor__Group__1__Impl : ( ( rule__UnColor__IsConstAssignment_1 )? ) ;
    public final void rule__UnColor__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8751:1: ( ( ( rule__UnColor__IsConstAssignment_1 )? ) )
            // InternalLegoLang.g:8752:1: ( ( rule__UnColor__IsConstAssignment_1 )? )
            {
            // InternalLegoLang.g:8752:1: ( ( rule__UnColor__IsConstAssignment_1 )? )
            // InternalLegoLang.g:8753:2: ( rule__UnColor__IsConstAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnColorAccess().getIsConstAssignment_1()); 
            }
            // InternalLegoLang.g:8754:2: ( rule__UnColor__IsConstAssignment_1 )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==72) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // InternalLegoLang.g:8754:3: rule__UnColor__IsConstAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnColor__IsConstAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnColorAccess().getIsConstAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__Group__1__Impl"


    // $ANTLR start "rule__UnColor__Group__2"
    // InternalLegoLang.g:8762:1: rule__UnColor__Group__2 : rule__UnColor__Group__2__Impl rule__UnColor__Group__3 ;
    public final void rule__UnColor__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8766:1: ( rule__UnColor__Group__2__Impl rule__UnColor__Group__3 )
            // InternalLegoLang.g:8767:2: rule__UnColor__Group__2__Impl rule__UnColor__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__UnColor__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnColor__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__Group__2"


    // $ANTLR start "rule__UnColor__Group__2__Impl"
    // InternalLegoLang.g:8774:1: rule__UnColor__Group__2__Impl : ( 'color' ) ;
    public final void rule__UnColor__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8778:1: ( ( 'color' ) )
            // InternalLegoLang.g:8779:1: ( 'color' )
            {
            // InternalLegoLang.g:8779:1: ( 'color' )
            // InternalLegoLang.g:8780:2: 'color'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnColorAccess().getColorKeyword_2()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnColorAccess().getColorKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__Group__2__Impl"


    // $ANTLR start "rule__UnColor__Group__3"
    // InternalLegoLang.g:8789:1: rule__UnColor__Group__3 : rule__UnColor__Group__3__Impl rule__UnColor__Group__4 ;
    public final void rule__UnColor__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8793:1: ( rule__UnColor__Group__3__Impl rule__UnColor__Group__4 )
            // InternalLegoLang.g:8794:2: rule__UnColor__Group__3__Impl rule__UnColor__Group__4
            {
            pushFollow(FOLLOW_18);
            rule__UnColor__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnColor__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__Group__3"


    // $ANTLR start "rule__UnColor__Group__3__Impl"
    // InternalLegoLang.g:8801:1: rule__UnColor__Group__3__Impl : ( ( rule__UnColor__NameAssignment_3 ) ) ;
    public final void rule__UnColor__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8805:1: ( ( ( rule__UnColor__NameAssignment_3 ) ) )
            // InternalLegoLang.g:8806:1: ( ( rule__UnColor__NameAssignment_3 ) )
            {
            // InternalLegoLang.g:8806:1: ( ( rule__UnColor__NameAssignment_3 ) )
            // InternalLegoLang.g:8807:2: ( rule__UnColor__NameAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnColorAccess().getNameAssignment_3()); 
            }
            // InternalLegoLang.g:8808:2: ( rule__UnColor__NameAssignment_3 )
            // InternalLegoLang.g:8808:3: rule__UnColor__NameAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__UnColor__NameAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnColorAccess().getNameAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__Group__3__Impl"


    // $ANTLR start "rule__UnColor__Group__4"
    // InternalLegoLang.g:8816:1: rule__UnColor__Group__4 : rule__UnColor__Group__4__Impl ;
    public final void rule__UnColor__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8820:1: ( rule__UnColor__Group__4__Impl )
            // InternalLegoLang.g:8821:2: rule__UnColor__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnColor__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__Group__4"


    // $ANTLR start "rule__UnColor__Group__4__Impl"
    // InternalLegoLang.g:8827:1: rule__UnColor__Group__4__Impl : ( ( rule__UnColor__Group_4__0 )? ) ;
    public final void rule__UnColor__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8831:1: ( ( ( rule__UnColor__Group_4__0 )? ) )
            // InternalLegoLang.g:8832:1: ( ( rule__UnColor__Group_4__0 )? )
            {
            // InternalLegoLang.g:8832:1: ( ( rule__UnColor__Group_4__0 )? )
            // InternalLegoLang.g:8833:2: ( rule__UnColor__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnColorAccess().getGroup_4()); 
            }
            // InternalLegoLang.g:8834:2: ( rule__UnColor__Group_4__0 )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==35) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // InternalLegoLang.g:8834:3: rule__UnColor__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnColor__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnColorAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__Group__4__Impl"


    // $ANTLR start "rule__UnColor__Group_4__0"
    // InternalLegoLang.g:8843:1: rule__UnColor__Group_4__0 : rule__UnColor__Group_4__0__Impl rule__UnColor__Group_4__1 ;
    public final void rule__UnColor__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8847:1: ( rule__UnColor__Group_4__0__Impl rule__UnColor__Group_4__1 )
            // InternalLegoLang.g:8848:2: rule__UnColor__Group_4__0__Impl rule__UnColor__Group_4__1
            {
            pushFollow(FOLLOW_60);
            rule__UnColor__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnColor__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__Group_4__0"


    // $ANTLR start "rule__UnColor__Group_4__0__Impl"
    // InternalLegoLang.g:8855:1: rule__UnColor__Group_4__0__Impl : ( '=' ) ;
    public final void rule__UnColor__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8859:1: ( ( '=' ) )
            // InternalLegoLang.g:8860:1: ( '=' )
            {
            // InternalLegoLang.g:8860:1: ( '=' )
            // InternalLegoLang.g:8861:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnColorAccess().getEqualsSignKeyword_4_0()); 
            }
            match(input,35,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnColorAccess().getEqualsSignKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__Group_4__0__Impl"


    // $ANTLR start "rule__UnColor__Group_4__1"
    // InternalLegoLang.g:8870:1: rule__UnColor__Group_4__1 : rule__UnColor__Group_4__1__Impl ;
    public final void rule__UnColor__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8874:1: ( rule__UnColor__Group_4__1__Impl )
            // InternalLegoLang.g:8875:2: rule__UnColor__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnColor__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__Group_4__1"


    // $ANTLR start "rule__UnColor__Group_4__1__Impl"
    // InternalLegoLang.g:8881:1: rule__UnColor__Group_4__1__Impl : ( ( rule__UnColor__InitialValueAssignment_4_1 ) ) ;
    public final void rule__UnColor__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8885:1: ( ( ( rule__UnColor__InitialValueAssignment_4_1 ) ) )
            // InternalLegoLang.g:8886:1: ( ( rule__UnColor__InitialValueAssignment_4_1 ) )
            {
            // InternalLegoLang.g:8886:1: ( ( rule__UnColor__InitialValueAssignment_4_1 ) )
            // InternalLegoLang.g:8887:2: ( rule__UnColor__InitialValueAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnColorAccess().getInitialValueAssignment_4_1()); 
            }
            // InternalLegoLang.g:8888:2: ( rule__UnColor__InitialValueAssignment_4_1 )
            // InternalLegoLang.g:8888:3: rule__UnColor__InitialValueAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__UnColor__InitialValueAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnColorAccess().getInitialValueAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__Group_4__1__Impl"


    // $ANTLR start "rule__TheDouble__Group__0"
    // InternalLegoLang.g:8897:1: rule__TheDouble__Group__0 : rule__TheDouble__Group__0__Impl rule__TheDouble__Group__1 ;
    public final void rule__TheDouble__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8901:1: ( rule__TheDouble__Group__0__Impl rule__TheDouble__Group__1 )
            // InternalLegoLang.g:8902:2: rule__TheDouble__Group__0__Impl rule__TheDouble__Group__1
            {
            pushFollow(FOLLOW_11);
            rule__TheDouble__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TheDouble__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheDouble__Group__0"


    // $ANTLR start "rule__TheDouble__Group__0__Impl"
    // InternalLegoLang.g:8909:1: rule__TheDouble__Group__0__Impl : ( () ) ;
    public final void rule__TheDouble__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8913:1: ( ( () ) )
            // InternalLegoLang.g:8914:1: ( () )
            {
            // InternalLegoLang.g:8914:1: ( () )
            // InternalLegoLang.g:8915:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheDoubleAccess().getTheDoubleAction_0()); 
            }
            // InternalLegoLang.g:8916:2: ()
            // InternalLegoLang.g:8916:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheDoubleAccess().getTheDoubleAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheDouble__Group__0__Impl"


    // $ANTLR start "rule__TheDouble__Group__1"
    // InternalLegoLang.g:8924:1: rule__TheDouble__Group__1 : rule__TheDouble__Group__1__Impl rule__TheDouble__Group__2 ;
    public final void rule__TheDouble__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8928:1: ( rule__TheDouble__Group__1__Impl rule__TheDouble__Group__2 )
            // InternalLegoLang.g:8929:2: rule__TheDouble__Group__1__Impl rule__TheDouble__Group__2
            {
            pushFollow(FOLLOW_54);
            rule__TheDouble__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TheDouble__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheDouble__Group__1"


    // $ANTLR start "rule__TheDouble__Group__1__Impl"
    // InternalLegoLang.g:8936:1: rule__TheDouble__Group__1__Impl : ( ( rule__TheDouble__Value1Assignment_1 ) ) ;
    public final void rule__TheDouble__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8940:1: ( ( ( rule__TheDouble__Value1Assignment_1 ) ) )
            // InternalLegoLang.g:8941:1: ( ( rule__TheDouble__Value1Assignment_1 ) )
            {
            // InternalLegoLang.g:8941:1: ( ( rule__TheDouble__Value1Assignment_1 ) )
            // InternalLegoLang.g:8942:2: ( rule__TheDouble__Value1Assignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheDoubleAccess().getValue1Assignment_1()); 
            }
            // InternalLegoLang.g:8943:2: ( rule__TheDouble__Value1Assignment_1 )
            // InternalLegoLang.g:8943:3: rule__TheDouble__Value1Assignment_1
            {
            pushFollow(FOLLOW_2);
            rule__TheDouble__Value1Assignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheDoubleAccess().getValue1Assignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheDouble__Group__1__Impl"


    // $ANTLR start "rule__TheDouble__Group__2"
    // InternalLegoLang.g:8951:1: rule__TheDouble__Group__2 : rule__TheDouble__Group__2__Impl rule__TheDouble__Group__3 ;
    public final void rule__TheDouble__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8955:1: ( rule__TheDouble__Group__2__Impl rule__TheDouble__Group__3 )
            // InternalLegoLang.g:8956:2: rule__TheDouble__Group__2__Impl rule__TheDouble__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__TheDouble__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TheDouble__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheDouble__Group__2"


    // $ANTLR start "rule__TheDouble__Group__2__Impl"
    // InternalLegoLang.g:8963:1: rule__TheDouble__Group__2__Impl : ( '.' ) ;
    public final void rule__TheDouble__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8967:1: ( ( '.' ) )
            // InternalLegoLang.g:8968:1: ( '.' )
            {
            // InternalLegoLang.g:8968:1: ( '.' )
            // InternalLegoLang.g:8969:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheDoubleAccess().getFullStopKeyword_2()); 
            }
            match(input,69,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheDoubleAccess().getFullStopKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheDouble__Group__2__Impl"


    // $ANTLR start "rule__TheDouble__Group__3"
    // InternalLegoLang.g:8978:1: rule__TheDouble__Group__3 : rule__TheDouble__Group__3__Impl ;
    public final void rule__TheDouble__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8982:1: ( rule__TheDouble__Group__3__Impl )
            // InternalLegoLang.g:8983:2: rule__TheDouble__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TheDouble__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheDouble__Group__3"


    // $ANTLR start "rule__TheDouble__Group__3__Impl"
    // InternalLegoLang.g:8989:1: rule__TheDouble__Group__3__Impl : ( ( rule__TheDouble__Value2Assignment_3 ) ) ;
    public final void rule__TheDouble__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8993:1: ( ( ( rule__TheDouble__Value2Assignment_3 ) ) )
            // InternalLegoLang.g:8994:1: ( ( rule__TheDouble__Value2Assignment_3 ) )
            {
            // InternalLegoLang.g:8994:1: ( ( rule__TheDouble__Value2Assignment_3 ) )
            // InternalLegoLang.g:8995:2: ( rule__TheDouble__Value2Assignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheDoubleAccess().getValue2Assignment_3()); 
            }
            // InternalLegoLang.g:8996:2: ( rule__TheDouble__Value2Assignment_3 )
            // InternalLegoLang.g:8996:3: rule__TheDouble__Value2Assignment_3
            {
            pushFollow(FOLLOW_2);
            rule__TheDouble__Value2Assignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheDoubleAccess().getValue2Assignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheDouble__Group__3__Impl"


    // $ANTLR start "rule__TheInt__Group__0"
    // InternalLegoLang.g:9005:1: rule__TheInt__Group__0 : rule__TheInt__Group__0__Impl rule__TheInt__Group__1 ;
    public final void rule__TheInt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9009:1: ( rule__TheInt__Group__0__Impl rule__TheInt__Group__1 )
            // InternalLegoLang.g:9010:2: rule__TheInt__Group__0__Impl rule__TheInt__Group__1
            {
            pushFollow(FOLLOW_11);
            rule__TheInt__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TheInt__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheInt__Group__0"


    // $ANTLR start "rule__TheInt__Group__0__Impl"
    // InternalLegoLang.g:9017:1: rule__TheInt__Group__0__Impl : ( () ) ;
    public final void rule__TheInt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9021:1: ( ( () ) )
            // InternalLegoLang.g:9022:1: ( () )
            {
            // InternalLegoLang.g:9022:1: ( () )
            // InternalLegoLang.g:9023:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheIntAccess().getTheIntAction_0()); 
            }
            // InternalLegoLang.g:9024:2: ()
            // InternalLegoLang.g:9024:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheIntAccess().getTheIntAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheInt__Group__0__Impl"


    // $ANTLR start "rule__TheInt__Group__1"
    // InternalLegoLang.g:9032:1: rule__TheInt__Group__1 : rule__TheInt__Group__1__Impl ;
    public final void rule__TheInt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9036:1: ( rule__TheInt__Group__1__Impl )
            // InternalLegoLang.g:9037:2: rule__TheInt__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TheInt__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheInt__Group__1"


    // $ANTLR start "rule__TheInt__Group__1__Impl"
    // InternalLegoLang.g:9043:1: rule__TheInt__Group__1__Impl : ( ( rule__TheInt__ValueAssignment_1 ) ) ;
    public final void rule__TheInt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9047:1: ( ( ( rule__TheInt__ValueAssignment_1 ) ) )
            // InternalLegoLang.g:9048:1: ( ( rule__TheInt__ValueAssignment_1 ) )
            {
            // InternalLegoLang.g:9048:1: ( ( rule__TheInt__ValueAssignment_1 ) )
            // InternalLegoLang.g:9049:2: ( rule__TheInt__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheIntAccess().getValueAssignment_1()); 
            }
            // InternalLegoLang.g:9050:2: ( rule__TheInt__ValueAssignment_1 )
            // InternalLegoLang.g:9050:3: rule__TheInt__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__TheInt__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheIntAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheInt__Group__1__Impl"


    // $ANTLR start "rule__TheBoolean__Group__0"
    // InternalLegoLang.g:9059:1: rule__TheBoolean__Group__0 : rule__TheBoolean__Group__0__Impl rule__TheBoolean__Group__1 ;
    public final void rule__TheBoolean__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9063:1: ( rule__TheBoolean__Group__0__Impl rule__TheBoolean__Group__1 )
            // InternalLegoLang.g:9064:2: rule__TheBoolean__Group__0__Impl rule__TheBoolean__Group__1
            {
            pushFollow(FOLLOW_56);
            rule__TheBoolean__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TheBoolean__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheBoolean__Group__0"


    // $ANTLR start "rule__TheBoolean__Group__0__Impl"
    // InternalLegoLang.g:9071:1: rule__TheBoolean__Group__0__Impl : ( () ) ;
    public final void rule__TheBoolean__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9075:1: ( ( () ) )
            // InternalLegoLang.g:9076:1: ( () )
            {
            // InternalLegoLang.g:9076:1: ( () )
            // InternalLegoLang.g:9077:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheBooleanAccess().getTheBooleanAction_0()); 
            }
            // InternalLegoLang.g:9078:2: ()
            // InternalLegoLang.g:9078:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheBooleanAccess().getTheBooleanAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheBoolean__Group__0__Impl"


    // $ANTLR start "rule__TheBoolean__Group__1"
    // InternalLegoLang.g:9086:1: rule__TheBoolean__Group__1 : rule__TheBoolean__Group__1__Impl ;
    public final void rule__TheBoolean__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9090:1: ( rule__TheBoolean__Group__1__Impl )
            // InternalLegoLang.g:9091:2: rule__TheBoolean__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TheBoolean__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheBoolean__Group__1"


    // $ANTLR start "rule__TheBoolean__Group__1__Impl"
    // InternalLegoLang.g:9097:1: rule__TheBoolean__Group__1__Impl : ( ( rule__TheBoolean__ValueAssignment_1 ) ) ;
    public final void rule__TheBoolean__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9101:1: ( ( ( rule__TheBoolean__ValueAssignment_1 ) ) )
            // InternalLegoLang.g:9102:1: ( ( rule__TheBoolean__ValueAssignment_1 ) )
            {
            // InternalLegoLang.g:9102:1: ( ( rule__TheBoolean__ValueAssignment_1 ) )
            // InternalLegoLang.g:9103:2: ( rule__TheBoolean__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheBooleanAccess().getValueAssignment_1()); 
            }
            // InternalLegoLang.g:9104:2: ( rule__TheBoolean__ValueAssignment_1 )
            // InternalLegoLang.g:9104:3: rule__TheBoolean__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__TheBoolean__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheBooleanAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheBoolean__Group__1__Impl"


    // $ANTLR start "rule__TheString__Group__0"
    // InternalLegoLang.g:9113:1: rule__TheString__Group__0 : rule__TheString__Group__0__Impl rule__TheString__Group__1 ;
    public final void rule__TheString__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9117:1: ( rule__TheString__Group__0__Impl rule__TheString__Group__1 )
            // InternalLegoLang.g:9118:2: rule__TheString__Group__0__Impl rule__TheString__Group__1
            {
            pushFollow(FOLLOW_58);
            rule__TheString__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TheString__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheString__Group__0"


    // $ANTLR start "rule__TheString__Group__0__Impl"
    // InternalLegoLang.g:9125:1: rule__TheString__Group__0__Impl : ( () ) ;
    public final void rule__TheString__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9129:1: ( ( () ) )
            // InternalLegoLang.g:9130:1: ( () )
            {
            // InternalLegoLang.g:9130:1: ( () )
            // InternalLegoLang.g:9131:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheStringAccess().getTheStringAction_0()); 
            }
            // InternalLegoLang.g:9132:2: ()
            // InternalLegoLang.g:9132:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheStringAccess().getTheStringAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheString__Group__0__Impl"


    // $ANTLR start "rule__TheString__Group__1"
    // InternalLegoLang.g:9140:1: rule__TheString__Group__1 : rule__TheString__Group__1__Impl ;
    public final void rule__TheString__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9144:1: ( rule__TheString__Group__1__Impl )
            // InternalLegoLang.g:9145:2: rule__TheString__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TheString__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheString__Group__1"


    // $ANTLR start "rule__TheString__Group__1__Impl"
    // InternalLegoLang.g:9151:1: rule__TheString__Group__1__Impl : ( ( rule__TheString__ValueAssignment_1 ) ) ;
    public final void rule__TheString__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9155:1: ( ( ( rule__TheString__ValueAssignment_1 ) ) )
            // InternalLegoLang.g:9156:1: ( ( rule__TheString__ValueAssignment_1 ) )
            {
            // InternalLegoLang.g:9156:1: ( ( rule__TheString__ValueAssignment_1 ) )
            // InternalLegoLang.g:9157:2: ( rule__TheString__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheStringAccess().getValueAssignment_1()); 
            }
            // InternalLegoLang.g:9158:2: ( rule__TheString__ValueAssignment_1 )
            // InternalLegoLang.g:9158:3: rule__TheString__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__TheString__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheStringAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheString__Group__1__Impl"


    // $ANTLR start "rule__TheColor__Group__0"
    // InternalLegoLang.g:9167:1: rule__TheColor__Group__0 : rule__TheColor__Group__0__Impl rule__TheColor__Group__1 ;
    public final void rule__TheColor__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9171:1: ( rule__TheColor__Group__0__Impl rule__TheColor__Group__1 )
            // InternalLegoLang.g:9172:2: rule__TheColor__Group__0__Impl rule__TheColor__Group__1
            {
            pushFollow(FOLLOW_60);
            rule__TheColor__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TheColor__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheColor__Group__0"


    // $ANTLR start "rule__TheColor__Group__0__Impl"
    // InternalLegoLang.g:9179:1: rule__TheColor__Group__0__Impl : ( () ) ;
    public final void rule__TheColor__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9183:1: ( ( () ) )
            // InternalLegoLang.g:9184:1: ( () )
            {
            // InternalLegoLang.g:9184:1: ( () )
            // InternalLegoLang.g:9185:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheColorAccess().getTheColorAction_0()); 
            }
            // InternalLegoLang.g:9186:2: ()
            // InternalLegoLang.g:9186:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheColorAccess().getTheColorAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheColor__Group__0__Impl"


    // $ANTLR start "rule__TheColor__Group__1"
    // InternalLegoLang.g:9194:1: rule__TheColor__Group__1 : rule__TheColor__Group__1__Impl ;
    public final void rule__TheColor__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9198:1: ( rule__TheColor__Group__1__Impl )
            // InternalLegoLang.g:9199:2: rule__TheColor__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TheColor__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheColor__Group__1"


    // $ANTLR start "rule__TheColor__Group__1__Impl"
    // InternalLegoLang.g:9205:1: rule__TheColor__Group__1__Impl : ( ( rule__TheColor__ValueAssignment_1 ) ) ;
    public final void rule__TheColor__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9209:1: ( ( ( rule__TheColor__ValueAssignment_1 ) ) )
            // InternalLegoLang.g:9210:1: ( ( rule__TheColor__ValueAssignment_1 ) )
            {
            // InternalLegoLang.g:9210:1: ( ( rule__TheColor__ValueAssignment_1 ) )
            // InternalLegoLang.g:9211:2: ( rule__TheColor__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheColorAccess().getValueAssignment_1()); 
            }
            // InternalLegoLang.g:9212:2: ( rule__TheColor__ValueAssignment_1 )
            // InternalLegoLang.g:9212:3: rule__TheColor__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__TheColor__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheColorAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheColor__Group__1__Impl"


    // $ANTLR start "rule__FQN__Group__0"
    // InternalLegoLang.g:9221:1: rule__FQN__Group__0 : rule__FQN__Group__0__Impl rule__FQN__Group__1 ;
    public final void rule__FQN__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9225:1: ( rule__FQN__Group__0__Impl rule__FQN__Group__1 )
            // InternalLegoLang.g:9226:2: rule__FQN__Group__0__Impl rule__FQN__Group__1
            {
            pushFollow(FOLLOW_54);
            rule__FQN__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FQN__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FQN__Group__0"


    // $ANTLR start "rule__FQN__Group__0__Impl"
    // InternalLegoLang.g:9233:1: rule__FQN__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__FQN__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9237:1: ( ( RULE_ID ) )
            // InternalLegoLang.g:9238:1: ( RULE_ID )
            {
            // InternalLegoLang.g:9238:1: ( RULE_ID )
            // InternalLegoLang.g:9239:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FQN__Group__0__Impl"


    // $ANTLR start "rule__FQN__Group__1"
    // InternalLegoLang.g:9248:1: rule__FQN__Group__1 : rule__FQN__Group__1__Impl ;
    public final void rule__FQN__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9252:1: ( rule__FQN__Group__1__Impl )
            // InternalLegoLang.g:9253:2: rule__FQN__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FQN__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FQN__Group__1"


    // $ANTLR start "rule__FQN__Group__1__Impl"
    // InternalLegoLang.g:9259:1: rule__FQN__Group__1__Impl : ( ( rule__FQN__Group_1__0 )* ) ;
    public final void rule__FQN__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9263:1: ( ( ( rule__FQN__Group_1__0 )* ) )
            // InternalLegoLang.g:9264:1: ( ( rule__FQN__Group_1__0 )* )
            {
            // InternalLegoLang.g:9264:1: ( ( rule__FQN__Group_1__0 )* )
            // InternalLegoLang.g:9265:2: ( rule__FQN__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFQNAccess().getGroup_1()); 
            }
            // InternalLegoLang.g:9266:2: ( rule__FQN__Group_1__0 )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==69) ) {
                    alt34=1;
                }


                switch (alt34) {
            	case 1 :
            	    // InternalLegoLang.g:9266:3: rule__FQN__Group_1__0
            	    {
            	    pushFollow(FOLLOW_61);
            	    rule__FQN__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFQNAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FQN__Group__1__Impl"


    // $ANTLR start "rule__FQN__Group_1__0"
    // InternalLegoLang.g:9275:1: rule__FQN__Group_1__0 : rule__FQN__Group_1__0__Impl rule__FQN__Group_1__1 ;
    public final void rule__FQN__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9279:1: ( rule__FQN__Group_1__0__Impl rule__FQN__Group_1__1 )
            // InternalLegoLang.g:9280:2: rule__FQN__Group_1__0__Impl rule__FQN__Group_1__1
            {
            pushFollow(FOLLOW_4);
            rule__FQN__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FQN__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FQN__Group_1__0"


    // $ANTLR start "rule__FQN__Group_1__0__Impl"
    // InternalLegoLang.g:9287:1: rule__FQN__Group_1__0__Impl : ( '.' ) ;
    public final void rule__FQN__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9291:1: ( ( '.' ) )
            // InternalLegoLang.g:9292:1: ( '.' )
            {
            // InternalLegoLang.g:9292:1: ( '.' )
            // InternalLegoLang.g:9293:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); 
            }
            match(input,69,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FQN__Group_1__0__Impl"


    // $ANTLR start "rule__FQN__Group_1__1"
    // InternalLegoLang.g:9302:1: rule__FQN__Group_1__1 : rule__FQN__Group_1__1__Impl ;
    public final void rule__FQN__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9306:1: ( rule__FQN__Group_1__1__Impl )
            // InternalLegoLang.g:9307:2: rule__FQN__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FQN__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FQN__Group_1__1"


    // $ANTLR start "rule__FQN__Group_1__1__Impl"
    // InternalLegoLang.g:9313:1: rule__FQN__Group_1__1__Impl : ( RULE_ID ) ;
    public final void rule__FQN__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9317:1: ( ( RULE_ID ) )
            // InternalLegoLang.g:9318:1: ( RULE_ID )
            {
            // InternalLegoLang.g:9318:1: ( RULE_ID )
            // InternalLegoLang.g:9319:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FQN__Group_1__1__Impl"


    // $ANTLR start "rule__EInt__Group__0"
    // InternalLegoLang.g:9329:1: rule__EInt__Group__0 : rule__EInt__Group__0__Impl rule__EInt__Group__1 ;
    public final void rule__EInt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9333:1: ( rule__EInt__Group__0__Impl rule__EInt__Group__1 )
            // InternalLegoLang.g:9334:2: rule__EInt__Group__0__Impl rule__EInt__Group__1
            {
            pushFollow(FOLLOW_11);
            rule__EInt__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__EInt__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EInt__Group__0"


    // $ANTLR start "rule__EInt__Group__0__Impl"
    // InternalLegoLang.g:9341:1: rule__EInt__Group__0__Impl : ( ( '-' )? ) ;
    public final void rule__EInt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9345:1: ( ( ( '-' )? ) )
            // InternalLegoLang.g:9346:1: ( ( '-' )? )
            {
            // InternalLegoLang.g:9346:1: ( ( '-' )? )
            // InternalLegoLang.g:9347:2: ( '-' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); 
            }
            // InternalLegoLang.g:9348:2: ( '-' )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==55) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalLegoLang.g:9348:3: '-'
                    {
                    match(input,55,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EInt__Group__0__Impl"


    // $ANTLR start "rule__EInt__Group__1"
    // InternalLegoLang.g:9356:1: rule__EInt__Group__1 : rule__EInt__Group__1__Impl ;
    public final void rule__EInt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9360:1: ( rule__EInt__Group__1__Impl )
            // InternalLegoLang.g:9361:2: rule__EInt__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__EInt__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EInt__Group__1"


    // $ANTLR start "rule__EInt__Group__1__Impl"
    // InternalLegoLang.g:9367:1: rule__EInt__Group__1__Impl : ( RULE_INT ) ;
    public final void rule__EInt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9371:1: ( ( RULE_INT ) )
            // InternalLegoLang.g:9372:1: ( RULE_INT )
            {
            // InternalLegoLang.g:9372:1: ( RULE_INT )
            // InternalLegoLang.g:9373:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EInt__Group__1__Impl"


    // $ANTLR start "rule__Program__NameAssignment_2"
    // InternalLegoLang.g:9383:1: rule__Program__NameAssignment_2 : ( ruleEString ) ;
    public final void rule__Program__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9387:1: ( ( ruleEString ) )
            // InternalLegoLang.g:9388:2: ( ruleEString )
            {
            // InternalLegoLang.g:9388:2: ( ruleEString )
            // InternalLegoLang.g:9389:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getNameEStringParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getNameEStringParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__NameAssignment_2"


    // $ANTLR start "rule__Program__StatementAssignment_4"
    // InternalLegoLang.g:9398:1: rule__Program__StatementAssignment_4 : ( ruleStatement ) ;
    public final void rule__Program__StatementAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9402:1: ( ( ruleStatement ) )
            // InternalLegoLang.g:9403:2: ( ruleStatement )
            {
            // InternalLegoLang.g:9403:2: ( ruleStatement )
            // InternalLegoLang.g:9404:3: ruleStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getStatementStatementParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getStatementStatementParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__StatementAssignment_4"


    // $ANTLR start "rule__Pause__ExpressionAssignment_2"
    // InternalLegoLang.g:9413:1: rule__Pause__ExpressionAssignment_2 : ( ruleExpression ) ;
    public final void rule__Pause__ExpressionAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9417:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:9418:2: ( ruleExpression )
            {
            // InternalLegoLang.g:9418:2: ( ruleExpression )
            // InternalLegoLang.g:9419:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPauseAccess().getExpressionExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPauseAccess().getExpressionExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Pause__ExpressionAssignment_2"


    // $ANTLR start "rule__WheelEngine__NameAssignment_1"
    // InternalLegoLang.g:9428:1: rule__WheelEngine__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__WheelEngine__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9432:1: ( ( ruleEString ) )
            // InternalLegoLang.g:9433:2: ( ruleEString )
            {
            // InternalLegoLang.g:9433:2: ( ruleEString )
            // InternalLegoLang.g:9434:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWheelEngineAccess().getNameEStringParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWheelEngineAccess().getNameEStringParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WheelEngine__NameAssignment_1"


    // $ANTLR start "rule__WheelEngine__PositionAssignment_3"
    // InternalLegoLang.g:9443:1: rule__WheelEngine__PositionAssignment_3 : ( ruleEString ) ;
    public final void rule__WheelEngine__PositionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9447:1: ( ( ruleEString ) )
            // InternalLegoLang.g:9448:2: ( ruleEString )
            {
            // InternalLegoLang.g:9448:2: ( ruleEString )
            // InternalLegoLang.g:9449:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWheelEngineAccess().getPositionEStringParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWheelEngineAccess().getPositionEStringParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WheelEngine__PositionAssignment_3"


    // $ANTLR start "rule__MotorizedArmEngine__NameAssignment_1"
    // InternalLegoLang.g:9458:1: rule__MotorizedArmEngine__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__MotorizedArmEngine__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9462:1: ( ( ruleEString ) )
            // InternalLegoLang.g:9463:2: ( ruleEString )
            {
            // InternalLegoLang.g:9463:2: ( ruleEString )
            // InternalLegoLang.g:9464:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMotorizedArmEngineAccess().getNameEStringParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMotorizedArmEngineAccess().getNameEStringParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MotorizedArmEngine__NameAssignment_1"


    // $ANTLR start "rule__MotorizedArmEngine__PositionAssignment_3"
    // InternalLegoLang.g:9473:1: rule__MotorizedArmEngine__PositionAssignment_3 : ( ruleEString ) ;
    public final void rule__MotorizedArmEngine__PositionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9477:1: ( ( ruleEString ) )
            // InternalLegoLang.g:9478:2: ( ruleEString )
            {
            // InternalLegoLang.g:9478:2: ( ruleEString )
            // InternalLegoLang.g:9479:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMotorizedArmEngineAccess().getPositionEStringParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMotorizedArmEngineAccess().getPositionEStringParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MotorizedArmEngine__PositionAssignment_3"


    // $ANTLR start "rule__PaintballLauncherEngine__NameAssignment_1"
    // InternalLegoLang.g:9488:1: rule__PaintballLauncherEngine__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__PaintballLauncherEngine__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9492:1: ( ( ruleEString ) )
            // InternalLegoLang.g:9493:2: ( ruleEString )
            {
            // InternalLegoLang.g:9493:2: ( ruleEString )
            // InternalLegoLang.g:9494:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPaintballLauncherEngineAccess().getNameEStringParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPaintballLauncherEngineAccess().getNameEStringParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PaintballLauncherEngine__NameAssignment_1"


    // $ANTLR start "rule__PaintballLauncherEngine__PositionAssignment_3"
    // InternalLegoLang.g:9503:1: rule__PaintballLauncherEngine__PositionAssignment_3 : ( ruleEString ) ;
    public final void rule__PaintballLauncherEngine__PositionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9507:1: ( ( ruleEString ) )
            // InternalLegoLang.g:9508:2: ( ruleEString )
            {
            // InternalLegoLang.g:9508:2: ( ruleEString )
            // InternalLegoLang.g:9509:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPaintballLauncherEngineAccess().getPositionEStringParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPaintballLauncherEngineAccess().getPositionEStringParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PaintballLauncherEngine__PositionAssignment_3"


    // $ANTLR start "rule__ColorSensor__NameAssignment_1"
    // InternalLegoLang.g:9518:1: rule__ColorSensor__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__ColorSensor__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9522:1: ( ( ruleEString ) )
            // InternalLegoLang.g:9523:2: ( ruleEString )
            {
            // InternalLegoLang.g:9523:2: ( ruleEString )
            // InternalLegoLang.g:9524:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorSensorAccess().getNameEStringParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorSensorAccess().getNameEStringParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorSensor__NameAssignment_1"


    // $ANTLR start "rule__ColorSensor__PositionAssignment_3"
    // InternalLegoLang.g:9533:1: rule__ColorSensor__PositionAssignment_3 : ( ruleEInt ) ;
    public final void rule__ColorSensor__PositionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9537:1: ( ( ruleEInt ) )
            // InternalLegoLang.g:9538:2: ( ruleEInt )
            {
            // InternalLegoLang.g:9538:2: ( ruleEInt )
            // InternalLegoLang.g:9539:3: ruleEInt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorSensorAccess().getPositionEIntParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorSensorAccess().getPositionEIntParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorSensor__PositionAssignment_3"


    // $ANTLR start "rule__LaserSensor__NameAssignment_1"
    // InternalLegoLang.g:9548:1: rule__LaserSensor__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__LaserSensor__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9552:1: ( ( ruleEString ) )
            // InternalLegoLang.g:9553:2: ( ruleEString )
            {
            // InternalLegoLang.g:9553:2: ( ruleEString )
            // InternalLegoLang.g:9554:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLaserSensorAccess().getNameEStringParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLaserSensorAccess().getNameEStringParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LaserSensor__NameAssignment_1"


    // $ANTLR start "rule__LaserSensor__PositionAssignment_3"
    // InternalLegoLang.g:9563:1: rule__LaserSensor__PositionAssignment_3 : ( ruleEInt ) ;
    public final void rule__LaserSensor__PositionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9567:1: ( ( ruleEInt ) )
            // InternalLegoLang.g:9568:2: ( ruleEInt )
            {
            // InternalLegoLang.g:9568:2: ( ruleEInt )
            // InternalLegoLang.g:9569:3: ruleEInt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLaserSensorAccess().getPositionEIntParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLaserSensorAccess().getPositionEIntParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LaserSensor__PositionAssignment_3"


    // $ANTLR start "rule__GPSSensor__NameAssignment_1"
    // InternalLegoLang.g:9578:1: rule__GPSSensor__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__GPSSensor__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9582:1: ( ( ruleEString ) )
            // InternalLegoLang.g:9583:2: ( ruleEString )
            {
            // InternalLegoLang.g:9583:2: ( ruleEString )
            // InternalLegoLang.g:9584:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGPSSensorAccess().getNameEStringParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGPSSensorAccess().getNameEStringParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GPSSensor__NameAssignment_1"


    // $ANTLR start "rule__GPSSensor__PositionAssignment_3"
    // InternalLegoLang.g:9593:1: rule__GPSSensor__PositionAssignment_3 : ( ruleEInt ) ;
    public final void rule__GPSSensor__PositionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9597:1: ( ( ruleEInt ) )
            // InternalLegoLang.g:9598:2: ( ruleEInt )
            {
            // InternalLegoLang.g:9598:2: ( ruleEInt )
            // InternalLegoLang.g:9599:3: ruleEInt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGPSSensorAccess().getPositionEIntParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGPSSensorAccess().getPositionEIntParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GPSSensor__PositionAssignment_3"


    // $ANTLR start "rule__GyroSensor__NameAssignment_1"
    // InternalLegoLang.g:9608:1: rule__GyroSensor__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__GyroSensor__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9612:1: ( ( ruleEString ) )
            // InternalLegoLang.g:9613:2: ( ruleEString )
            {
            // InternalLegoLang.g:9613:2: ( ruleEString )
            // InternalLegoLang.g:9614:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGyroSensorAccess().getNameEStringParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGyroSensorAccess().getNameEStringParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GyroSensor__NameAssignment_1"


    // $ANTLR start "rule__GyroSensor__PositionAssignment_3"
    // InternalLegoLang.g:9623:1: rule__GyroSensor__PositionAssignment_3 : ( ruleEInt ) ;
    public final void rule__GyroSensor__PositionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9627:1: ( ( ruleEInt ) )
            // InternalLegoLang.g:9628:2: ( ruleEInt )
            {
            // InternalLegoLang.g:9628:2: ( ruleEInt )
            // InternalLegoLang.g:9629:3: ruleEInt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGyroSensorAccess().getPositionEIntParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGyroSensorAccess().getPositionEIntParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GyroSensor__PositionAssignment_3"


    // $ANTLR start "rule__UltraSonicSensor__NameAssignment_1"
    // InternalLegoLang.g:9638:1: rule__UltraSonicSensor__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__UltraSonicSensor__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9642:1: ( ( ruleEString ) )
            // InternalLegoLang.g:9643:2: ( ruleEString )
            {
            // InternalLegoLang.g:9643:2: ( ruleEString )
            // InternalLegoLang.g:9644:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUltraSonicSensorAccess().getNameEStringParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUltraSonicSensorAccess().getNameEStringParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UltraSonicSensor__NameAssignment_1"


    // $ANTLR start "rule__UltraSonicSensor__PositionAssignment_3"
    // InternalLegoLang.g:9653:1: rule__UltraSonicSensor__PositionAssignment_3 : ( ruleEInt ) ;
    public final void rule__UltraSonicSensor__PositionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9657:1: ( ( ruleEInt ) )
            // InternalLegoLang.g:9658:2: ( ruleEInt )
            {
            // InternalLegoLang.g:9658:2: ( ruleEInt )
            // InternalLegoLang.g:9659:3: ruleEInt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUltraSonicSensorAccess().getPositionEIntParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUltraSonicSensorAccess().getPositionEIntParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UltraSonicSensor__PositionAssignment_3"


    // $ANTLR start "rule__Car__NameAssignment_1"
    // InternalLegoLang.g:9668:1: rule__Car__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__Car__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9672:1: ( ( ruleEString ) )
            // InternalLegoLang.g:9673:2: ( ruleEString )
            {
            // InternalLegoLang.g:9673:2: ( ruleEString )
            // InternalLegoLang.g:9674:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCarAccess().getNameEStringParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCarAccess().getNameEStringParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__NameAssignment_1"


    // $ANTLR start "rule__Car__SensorAssignment_3"
    // InternalLegoLang.g:9683:1: rule__Car__SensorAssignment_3 : ( ruleSensor ) ;
    public final void rule__Car__SensorAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9687:1: ( ( ruleSensor ) )
            // InternalLegoLang.g:9688:2: ( ruleSensor )
            {
            // InternalLegoLang.g:9688:2: ( ruleSensor )
            // InternalLegoLang.g:9689:3: ruleSensor
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCarAccess().getSensorSensorParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSensor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCarAccess().getSensorSensorParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__SensorAssignment_3"


    // $ANTLR start "rule__Car__EngineAssignment_4"
    // InternalLegoLang.g:9698:1: rule__Car__EngineAssignment_4 : ( ruleEngine ) ;
    public final void rule__Car__EngineAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9702:1: ( ( ruleEngine ) )
            // InternalLegoLang.g:9703:2: ( ruleEngine )
            {
            // InternalLegoLang.g:9703:2: ( ruleEngine )
            // InternalLegoLang.g:9704:3: ruleEngine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCarAccess().getEngineEngineParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEngine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCarAccess().getEngineEngineParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__EngineAssignment_4"


    // $ANTLR start "rule__VitesseOperation__WheelengineAssignment_3"
    // InternalLegoLang.g:9713:1: rule__VitesseOperation__WheelengineAssignment_3 : ( ( ruleFQN ) ) ;
    public final void rule__VitesseOperation__WheelengineAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9717:1: ( ( ( ruleFQN ) ) )
            // InternalLegoLang.g:9718:2: ( ( ruleFQN ) )
            {
            // InternalLegoLang.g:9718:2: ( ( ruleFQN ) )
            // InternalLegoLang.g:9719:3: ( ruleFQN )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVitesseOperationAccess().getWheelengineWheelEngineCrossReference_3_0()); 
            }
            // InternalLegoLang.g:9720:3: ( ruleFQN )
            // InternalLegoLang.g:9721:4: ruleFQN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVitesseOperationAccess().getWheelengineWheelEngineFQNParserRuleCall_3_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleFQN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVitesseOperationAccess().getWheelengineWheelEngineFQNParserRuleCall_3_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVitesseOperationAccess().getWheelengineWheelEngineCrossReference_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__WheelengineAssignment_3"


    // $ANTLR start "rule__VitesseOperation__RightAssignment_6"
    // InternalLegoLang.g:9732:1: rule__VitesseOperation__RightAssignment_6 : ( ruleExpression ) ;
    public final void rule__VitesseOperation__RightAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9736:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:9737:2: ( ruleExpression )
            {
            // InternalLegoLang.g:9737:2: ( ruleExpression )
            // InternalLegoLang.g:9738:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVitesseOperationAccess().getRightExpressionParserRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVitesseOperationAccess().getRightExpressionParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__RightAssignment_6"


    // $ANTLR start "rule__BreakMotor__EngineAssignment_3"
    // InternalLegoLang.g:9747:1: rule__BreakMotor__EngineAssignment_3 : ( ( ruleFQN ) ) ;
    public final void rule__BreakMotor__EngineAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9751:1: ( ( ( ruleFQN ) ) )
            // InternalLegoLang.g:9752:2: ( ( ruleFQN ) )
            {
            // InternalLegoLang.g:9752:2: ( ( ruleFQN ) )
            // InternalLegoLang.g:9753:3: ( ruleFQN )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakMotorAccess().getEngineEngineCrossReference_3_0()); 
            }
            // InternalLegoLang.g:9754:3: ( ruleFQN )
            // InternalLegoLang.g:9755:4: ruleFQN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakMotorAccess().getEngineEngineFQNParserRuleCall_3_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleFQN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakMotorAccess().getEngineEngineFQNParserRuleCall_3_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakMotorAccess().getEngineEngineCrossReference_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakMotor__EngineAssignment_3"


    // $ANTLR start "rule__PositionOperation__MotorizedarmengineAssignment_3"
    // InternalLegoLang.g:9766:1: rule__PositionOperation__MotorizedarmengineAssignment_3 : ( ( ruleFQN ) ) ;
    public final void rule__PositionOperation__MotorizedarmengineAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9770:1: ( ( ( ruleFQN ) ) )
            // InternalLegoLang.g:9771:2: ( ( ruleFQN ) )
            {
            // InternalLegoLang.g:9771:2: ( ( ruleFQN ) )
            // InternalLegoLang.g:9772:3: ( ruleFQN )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPositionOperationAccess().getMotorizedarmengineMotorizedArmEngineCrossReference_3_0()); 
            }
            // InternalLegoLang.g:9773:3: ( ruleFQN )
            // InternalLegoLang.g:9774:4: ruleFQN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPositionOperationAccess().getMotorizedarmengineMotorizedArmEngineFQNParserRuleCall_3_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleFQN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPositionOperationAccess().getMotorizedarmengineMotorizedArmEngineFQNParserRuleCall_3_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPositionOperationAccess().getMotorizedarmengineMotorizedArmEngineCrossReference_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__MotorizedarmengineAssignment_3"


    // $ANTLR start "rule__PositionOperation__RightAssignment_6"
    // InternalLegoLang.g:9785:1: rule__PositionOperation__RightAssignment_6 : ( ruleExpression ) ;
    public final void rule__PositionOperation__RightAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9789:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:9790:2: ( ruleExpression )
            {
            // InternalLegoLang.g:9790:2: ( ruleExpression )
            // InternalLegoLang.g:9791:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPositionOperationAccess().getRightExpressionParserRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPositionOperationAccess().getRightExpressionParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__RightAssignment_6"


    // $ANTLR start "rule__ForceOperation__PaintballlauncherengineAssignment_3"
    // InternalLegoLang.g:9800:1: rule__ForceOperation__PaintballlauncherengineAssignment_3 : ( ( ruleFQN ) ) ;
    public final void rule__ForceOperation__PaintballlauncherengineAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9804:1: ( ( ( ruleFQN ) ) )
            // InternalLegoLang.g:9805:2: ( ( ruleFQN ) )
            {
            // InternalLegoLang.g:9805:2: ( ( ruleFQN ) )
            // InternalLegoLang.g:9806:3: ( ruleFQN )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForceOperationAccess().getPaintballlauncherenginePaintballLauncherEngineCrossReference_3_0()); 
            }
            // InternalLegoLang.g:9807:3: ( ruleFQN )
            // InternalLegoLang.g:9808:4: ruleFQN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForceOperationAccess().getPaintballlauncherenginePaintballLauncherEngineFQNParserRuleCall_3_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleFQN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForceOperationAccess().getPaintballlauncherenginePaintballLauncherEngineFQNParserRuleCall_3_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForceOperationAccess().getPaintballlauncherenginePaintballLauncherEngineCrossReference_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__PaintballlauncherengineAssignment_3"


    // $ANTLR start "rule__ForceOperation__RightAssignment_6"
    // InternalLegoLang.g:9819:1: rule__ForceOperation__RightAssignment_6 : ( ruleExpression ) ;
    public final void rule__ForceOperation__RightAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9823:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:9824:2: ( ruleExpression )
            {
            // InternalLegoLang.g:9824:2: ( ruleExpression )
            // InternalLegoLang.g:9825:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForceOperationAccess().getRightExpressionParserRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForceOperationAccess().getRightExpressionParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__RightAssignment_6"


    // $ANTLR start "rule__ColorOperation__ColorsensorAssignment_3"
    // InternalLegoLang.g:9834:1: rule__ColorOperation__ColorsensorAssignment_3 : ( ( ruleFQN ) ) ;
    public final void rule__ColorOperation__ColorsensorAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9838:1: ( ( ( ruleFQN ) ) )
            // InternalLegoLang.g:9839:2: ( ( ruleFQN ) )
            {
            // InternalLegoLang.g:9839:2: ( ( ruleFQN ) )
            // InternalLegoLang.g:9840:3: ( ruleFQN )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorOperationAccess().getColorsensorColorSensorCrossReference_3_0()); 
            }
            // InternalLegoLang.g:9841:3: ( ruleFQN )
            // InternalLegoLang.g:9842:4: ruleFQN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorOperationAccess().getColorsensorColorSensorFQNParserRuleCall_3_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleFQN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorOperationAccess().getColorsensorColorSensorFQNParserRuleCall_3_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorOperationAccess().getColorsensorColorSensorCrossReference_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorOperation__ColorsensorAssignment_3"


    // $ANTLR start "rule__IntensityOperation__ColorsensorAssignment_3"
    // InternalLegoLang.g:9853:1: rule__IntensityOperation__ColorsensorAssignment_3 : ( ( ruleFQN ) ) ;
    public final void rule__IntensityOperation__ColorsensorAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9857:1: ( ( ( ruleFQN ) ) )
            // InternalLegoLang.g:9858:2: ( ( ruleFQN ) )
            {
            // InternalLegoLang.g:9858:2: ( ( ruleFQN ) )
            // InternalLegoLang.g:9859:3: ( ruleFQN )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntensityOperationAccess().getColorsensorColorSensorCrossReference_3_0()); 
            }
            // InternalLegoLang.g:9860:3: ( ruleFQN )
            // InternalLegoLang.g:9861:4: ruleFQN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntensityOperationAccess().getColorsensorColorSensorFQNParserRuleCall_3_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleFQN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntensityOperationAccess().getColorsensorColorSensorFQNParserRuleCall_3_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntensityOperationAccess().getColorsensorColorSensorCrossReference_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntensityOperation__ColorsensorAssignment_3"


    // $ANTLR start "rule__RangeOperation__LasersensorAssignment_3"
    // InternalLegoLang.g:9872:1: rule__RangeOperation__LasersensorAssignment_3 : ( ( ruleFQN ) ) ;
    public final void rule__RangeOperation__LasersensorAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9876:1: ( ( ( ruleFQN ) ) )
            // InternalLegoLang.g:9877:2: ( ( ruleFQN ) )
            {
            // InternalLegoLang.g:9877:2: ( ( ruleFQN ) )
            // InternalLegoLang.g:9878:3: ( ruleFQN )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeOperationAccess().getLasersensorLaserSensorCrossReference_3_0()); 
            }
            // InternalLegoLang.g:9879:3: ( ruleFQN )
            // InternalLegoLang.g:9880:4: ruleFQN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeOperationAccess().getLasersensorLaserSensorFQNParserRuleCall_3_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleFQN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeOperationAccess().getLasersensorLaserSensorFQNParserRuleCall_3_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeOperationAccess().getLasersensorLaserSensorCrossReference_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeOperation__LasersensorAssignment_3"


    // $ANTLR start "rule__XGPSOperation__GpssensorAssignment_3"
    // InternalLegoLang.g:9891:1: rule__XGPSOperation__GpssensorAssignment_3 : ( ( ruleFQN ) ) ;
    public final void rule__XGPSOperation__GpssensorAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9895:1: ( ( ( ruleFQN ) ) )
            // InternalLegoLang.g:9896:2: ( ( ruleFQN ) )
            {
            // InternalLegoLang.g:9896:2: ( ( ruleFQN ) )
            // InternalLegoLang.g:9897:3: ( ruleFQN )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXGPSOperationAccess().getGpssensorGPSSensorCrossReference_3_0()); 
            }
            // InternalLegoLang.g:9898:3: ( ruleFQN )
            // InternalLegoLang.g:9899:4: ruleFQN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXGPSOperationAccess().getGpssensorGPSSensorFQNParserRuleCall_3_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleFQN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXGPSOperationAccess().getGpssensorGPSSensorFQNParserRuleCall_3_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXGPSOperationAccess().getGpssensorGPSSensorCrossReference_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XGPSOperation__GpssensorAssignment_3"


    // $ANTLR start "rule__YGPSOperation__GpssensorAssignment_3"
    // InternalLegoLang.g:9910:1: rule__YGPSOperation__GpssensorAssignment_3 : ( ( ruleFQN ) ) ;
    public final void rule__YGPSOperation__GpssensorAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9914:1: ( ( ( ruleFQN ) ) )
            // InternalLegoLang.g:9915:2: ( ( ruleFQN ) )
            {
            // InternalLegoLang.g:9915:2: ( ( ruleFQN ) )
            // InternalLegoLang.g:9916:3: ( ruleFQN )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getYGPSOperationAccess().getGpssensorGPSSensorCrossReference_3_0()); 
            }
            // InternalLegoLang.g:9917:3: ( ruleFQN )
            // InternalLegoLang.g:9918:4: ruleFQN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getYGPSOperationAccess().getGpssensorGPSSensorFQNParserRuleCall_3_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleFQN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getYGPSOperationAccess().getGpssensorGPSSensorFQNParserRuleCall_3_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getYGPSOperationAccess().getGpssensorGPSSensorCrossReference_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__YGPSOperation__GpssensorAssignment_3"


    // $ANTLR start "rule__AngleOperation__GyrosensorAssignment_3"
    // InternalLegoLang.g:9929:1: rule__AngleOperation__GyrosensorAssignment_3 : ( ( ruleFQN ) ) ;
    public final void rule__AngleOperation__GyrosensorAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9933:1: ( ( ( ruleFQN ) ) )
            // InternalLegoLang.g:9934:2: ( ( ruleFQN ) )
            {
            // InternalLegoLang.g:9934:2: ( ( ruleFQN ) )
            // InternalLegoLang.g:9935:3: ( ruleFQN )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAngleOperationAccess().getGyrosensorGyroSensorCrossReference_3_0()); 
            }
            // InternalLegoLang.g:9936:3: ( ruleFQN )
            // InternalLegoLang.g:9937:4: ruleFQN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAngleOperationAccess().getGyrosensorGyroSensorFQNParserRuleCall_3_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleFQN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAngleOperationAccess().getGyrosensorGyroSensorFQNParserRuleCall_3_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAngleOperationAccess().getGyrosensorGyroSensorCrossReference_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AngleOperation__GyrosensorAssignment_3"


    // $ANTLR start "rule__DistanceOperation__UltrasonicsensorAssignment_3"
    // InternalLegoLang.g:9948:1: rule__DistanceOperation__UltrasonicsensorAssignment_3 : ( ( ruleFQN ) ) ;
    public final void rule__DistanceOperation__UltrasonicsensorAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9952:1: ( ( ( ruleFQN ) ) )
            // InternalLegoLang.g:9953:2: ( ( ruleFQN ) )
            {
            // InternalLegoLang.g:9953:2: ( ( ruleFQN ) )
            // InternalLegoLang.g:9954:3: ( ruleFQN )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDistanceOperationAccess().getUltrasonicsensorUltraSonicSensorCrossReference_3_0()); 
            }
            // InternalLegoLang.g:9955:3: ( ruleFQN )
            // InternalLegoLang.g:9956:4: ruleFQN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDistanceOperationAccess().getUltrasonicsensorUltraSonicSensorFQNParserRuleCall_3_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleFQN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDistanceOperationAccess().getUltrasonicsensorUltraSonicSensorFQNParserRuleCall_3_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDistanceOperationAccess().getUltrasonicsensorUltraSonicSensorCrossReference_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DistanceOperation__UltrasonicsensorAssignment_3"


    // $ANTLR start "rule__And__LeftAssignment_2"
    // InternalLegoLang.g:9967:1: rule__And__LeftAssignment_2 : ( ruleExpression ) ;
    public final void rule__And__LeftAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9971:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:9972:2: ( ruleExpression )
            {
            // InternalLegoLang.g:9972:2: ( ruleExpression )
            // InternalLegoLang.g:9973:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getLeftExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getLeftExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__LeftAssignment_2"


    // $ANTLR start "rule__And__RightAssignment_3_1"
    // InternalLegoLang.g:9982:1: rule__And__RightAssignment_3_1 : ( ruleExpression ) ;
    public final void rule__And__RightAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9986:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:9987:2: ( ruleExpression )
            {
            // InternalLegoLang.g:9987:2: ( ruleExpression )
            // InternalLegoLang.g:9988:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getRightExpressionParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getRightExpressionParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__RightAssignment_3_1"


    // $ANTLR start "rule__Or__LeftAssignment_2"
    // InternalLegoLang.g:9997:1: rule__Or__LeftAssignment_2 : ( ruleExpression ) ;
    public final void rule__Or__LeftAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10001:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10002:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10002:2: ( ruleExpression )
            // InternalLegoLang.g:10003:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getLeftExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getLeftExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__LeftAssignment_2"


    // $ANTLR start "rule__Or__RightAssignment_3_1"
    // InternalLegoLang.g:10012:1: rule__Or__RightAssignment_3_1 : ( ruleExpression ) ;
    public final void rule__Or__RightAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10016:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10017:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10017:2: ( ruleExpression )
            // InternalLegoLang.g:10018:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getRightExpressionParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getRightExpressionParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__RightAssignment_3_1"


    // $ANTLR start "rule__ConditionEtat__ConditionAssignment_1"
    // InternalLegoLang.g:10027:1: rule__ConditionEtat__ConditionAssignment_1 : ( ruleBooleanExpression ) ;
    public final void rule__ConditionEtat__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10031:1: ( ( ruleBooleanExpression ) )
            // InternalLegoLang.g:10032:2: ( ruleBooleanExpression )
            {
            // InternalLegoLang.g:10032:2: ( ruleBooleanExpression )
            // InternalLegoLang.g:10033:3: ruleBooleanExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionEtatAccess().getConditionBooleanExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBooleanExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionEtatAccess().getConditionBooleanExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__ConditionAssignment_1"


    // $ANTLR start "rule__ConditionEtat__ThenAssignment_3"
    // InternalLegoLang.g:10042:1: rule__ConditionEtat__ThenAssignment_3 : ( ruleStatement ) ;
    public final void rule__ConditionEtat__ThenAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10046:1: ( ( ruleStatement ) )
            // InternalLegoLang.g:10047:2: ( ruleStatement )
            {
            // InternalLegoLang.g:10047:2: ( ruleStatement )
            // InternalLegoLang.g:10048:3: ruleStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionEtatAccess().getThenStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionEtatAccess().getThenStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__ThenAssignment_3"


    // $ANTLR start "rule__ConditionEtat__ElseAssignment_5_1"
    // InternalLegoLang.g:10057:1: rule__ConditionEtat__ElseAssignment_5_1 : ( ruleStatement ) ;
    public final void rule__ConditionEtat__ElseAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10061:1: ( ( ruleStatement ) )
            // InternalLegoLang.g:10062:2: ( ruleStatement )
            {
            // InternalLegoLang.g:10062:2: ( ruleStatement )
            // InternalLegoLang.g:10063:3: ruleStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionEtatAccess().getElseStatementParserRuleCall_5_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionEtatAccess().getElseStatementParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__ElseAssignment_5_1"


    // $ANTLR start "rule__WhileLoop__LoopConditionAssignment_1"
    // InternalLegoLang.g:10072:1: rule__WhileLoop__LoopConditionAssignment_1 : ( ruleBooleanExpression ) ;
    public final void rule__WhileLoop__LoopConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10076:1: ( ( ruleBooleanExpression ) )
            // InternalLegoLang.g:10077:2: ( ruleBooleanExpression )
            {
            // InternalLegoLang.g:10077:2: ( ruleBooleanExpression )
            // InternalLegoLang.g:10078:3: ruleBooleanExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileLoopAccess().getLoopConditionBooleanExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBooleanExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileLoopAccess().getLoopConditionBooleanExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileLoop__LoopConditionAssignment_1"


    // $ANTLR start "rule__WhileLoop__StatementAssignment_3"
    // InternalLegoLang.g:10087:1: rule__WhileLoop__StatementAssignment_3 : ( ruleStatement ) ;
    public final void rule__WhileLoop__StatementAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10091:1: ( ( ruleStatement ) )
            // InternalLegoLang.g:10092:2: ( ruleStatement )
            {
            // InternalLegoLang.g:10092:2: ( ruleStatement )
            // InternalLegoLang.g:10093:3: ruleStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileLoopAccess().getStatementStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileLoopAccess().getStatementStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileLoop__StatementAssignment_3"


    // $ANTLR start "rule__MethodePrint__ExpressionAssignment_2"
    // InternalLegoLang.g:10102:1: rule__MethodePrint__ExpressionAssignment_2 : ( ruleExpression ) ;
    public final void rule__MethodePrint__ExpressionAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10106:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10107:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10107:2: ( ruleExpression )
            // InternalLegoLang.g:10108:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodePrintAccess().getExpressionExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodePrintAccess().getExpressionExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodePrint__ExpressionAssignment_2"


    // $ANTLR start "rule__MethodePrint__ExpressionAssignment_3_1"
    // InternalLegoLang.g:10117:1: rule__MethodePrint__ExpressionAssignment_3_1 : ( ruleExpression ) ;
    public final void rule__MethodePrint__ExpressionAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10121:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10122:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10122:2: ( ruleExpression )
            // InternalLegoLang.g:10123:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodePrintAccess().getExpressionExpressionParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodePrintAccess().getExpressionExpressionParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodePrint__ExpressionAssignment_3_1"


    // $ANTLR start "rule__VariableRef__VariableAssignment"
    // InternalLegoLang.g:10132:1: rule__VariableRef__VariableAssignment : ( ( ruleEString ) ) ;
    public final void rule__VariableRef__VariableAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10136:1: ( ( ( ruleEString ) ) )
            // InternalLegoLang.g:10137:2: ( ( ruleEString ) )
            {
            // InternalLegoLang.g:10137:2: ( ( ruleEString ) )
            // InternalLegoLang.g:10138:3: ( ruleEString )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariableRefAccess().getVariableVariableCrossReference_0()); 
            }
            // InternalLegoLang.g:10139:3: ( ruleEString )
            // InternalLegoLang.g:10140:4: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariableRefAccess().getVariableVariableEStringParserRuleCall_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariableRefAccess().getVariableVariableEStringParserRuleCall_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariableRefAccess().getVariableVariableCrossReference_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VariableRef__VariableAssignment"


    // $ANTLR start "rule__Substraction__LeftAssignment_1"
    // InternalLegoLang.g:10151:1: rule__Substraction__LeftAssignment_1 : ( ruleExpression ) ;
    public final void rule__Substraction__LeftAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10155:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10156:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10156:2: ( ruleExpression )
            // InternalLegoLang.g:10157:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubstractionAccess().getLeftExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubstractionAccess().getLeftExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Substraction__LeftAssignment_1"


    // $ANTLR start "rule__Substraction__RightAssignment_3"
    // InternalLegoLang.g:10166:1: rule__Substraction__RightAssignment_3 : ( ruleExpression ) ;
    public final void rule__Substraction__RightAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10170:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10171:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10171:2: ( ruleExpression )
            // InternalLegoLang.g:10172:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubstractionAccess().getRightExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubstractionAccess().getRightExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Substraction__RightAssignment_3"


    // $ANTLR start "rule__Addition__LeftAssignment_1"
    // InternalLegoLang.g:10181:1: rule__Addition__LeftAssignment_1 : ( ruleExpression ) ;
    public final void rule__Addition__LeftAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10185:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10186:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10186:2: ( ruleExpression )
            // InternalLegoLang.g:10187:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditionAccess().getLeftExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditionAccess().getLeftExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__LeftAssignment_1"


    // $ANTLR start "rule__Addition__RightAssignment_3"
    // InternalLegoLang.g:10196:1: rule__Addition__RightAssignment_3 : ( ruleExpression ) ;
    public final void rule__Addition__RightAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10200:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10201:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10201:2: ( ruleExpression )
            // InternalLegoLang.g:10202:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditionAccess().getRightExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditionAccess().getRightExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__RightAssignment_3"


    // $ANTLR start "rule__Multiplication__LeftAssignment_1"
    // InternalLegoLang.g:10211:1: rule__Multiplication__LeftAssignment_1 : ( ruleExpression ) ;
    public final void rule__Multiplication__LeftAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10215:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10216:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10216:2: ( ruleExpression )
            // InternalLegoLang.g:10217:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicationAccess().getLeftExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicationAccess().getLeftExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__LeftAssignment_1"


    // $ANTLR start "rule__Multiplication__RightAssignment_3"
    // InternalLegoLang.g:10226:1: rule__Multiplication__RightAssignment_3 : ( ruleExpression ) ;
    public final void rule__Multiplication__RightAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10230:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10231:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10231:2: ( ruleExpression )
            // InternalLegoLang.g:10232:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicationAccess().getRightExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicationAccess().getRightExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__RightAssignment_3"


    // $ANTLR start "rule__Division__LeftAssignment_1"
    // InternalLegoLang.g:10241:1: rule__Division__LeftAssignment_1 : ( ruleExpression ) ;
    public final void rule__Division__LeftAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10245:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10246:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10246:2: ( ruleExpression )
            // InternalLegoLang.g:10247:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDivisionAccess().getLeftExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDivisionAccess().getLeftExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Division__LeftAssignment_1"


    // $ANTLR start "rule__Division__RightAssignment_3"
    // InternalLegoLang.g:10256:1: rule__Division__RightAssignment_3 : ( ruleExpression ) ;
    public final void rule__Division__RightAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10260:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10261:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10261:2: ( ruleExpression )
            // InternalLegoLang.g:10262:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDivisionAccess().getRightExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDivisionAccess().getRightExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Division__RightAssignment_3"


    // $ANTLR start "rule__GT__LeftAssignment_1"
    // InternalLegoLang.g:10271:1: rule__GT__LeftAssignment_1 : ( ruleExpression ) ;
    public final void rule__GT__LeftAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10275:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10276:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10276:2: ( ruleExpression )
            // InternalLegoLang.g:10277:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTAccess().getLeftExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTAccess().getLeftExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GT__LeftAssignment_1"


    // $ANTLR start "rule__GT__RightAssignment_3"
    // InternalLegoLang.g:10286:1: rule__GT__RightAssignment_3 : ( ruleExpression ) ;
    public final void rule__GT__RightAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10290:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10291:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10291:2: ( ruleExpression )
            // InternalLegoLang.g:10292:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTAccess().getRightExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTAccess().getRightExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GT__RightAssignment_3"


    // $ANTLR start "rule__LT__LeftAssignment_1"
    // InternalLegoLang.g:10301:1: rule__LT__LeftAssignment_1 : ( ruleExpression ) ;
    public final void rule__LT__LeftAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10305:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10306:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10306:2: ( ruleExpression )
            // InternalLegoLang.g:10307:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTAccess().getLeftExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTAccess().getLeftExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LT__LeftAssignment_1"


    // $ANTLR start "rule__LT__RightAssignment_3"
    // InternalLegoLang.g:10316:1: rule__LT__RightAssignment_3 : ( ruleExpression ) ;
    public final void rule__LT__RightAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10320:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10321:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10321:2: ( ruleExpression )
            // InternalLegoLang.g:10322:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTAccess().getRightExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTAccess().getRightExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LT__RightAssignment_3"


    // $ANTLR start "rule__Equal__LeftAssignment_1"
    // InternalLegoLang.g:10331:1: rule__Equal__LeftAssignment_1 : ( ruleExpression ) ;
    public final void rule__Equal__LeftAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10335:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10336:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10336:2: ( ruleExpression )
            // InternalLegoLang.g:10337:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualAccess().getLeftExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualAccess().getLeftExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equal__LeftAssignment_1"


    // $ANTLR start "rule__Equal__RightAssignment_3"
    // InternalLegoLang.g:10346:1: rule__Equal__RightAssignment_3 : ( ruleExpression ) ;
    public final void rule__Equal__RightAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10350:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10351:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10351:2: ( ruleExpression )
            // InternalLegoLang.g:10352:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualAccess().getRightExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualAccess().getRightExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equal__RightAssignment_3"


    // $ANTLR start "rule__Different__LeftAssignment_1"
    // InternalLegoLang.g:10361:1: rule__Different__LeftAssignment_1 : ( ruleExpression ) ;
    public final void rule__Different__LeftAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10365:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10366:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10366:2: ( ruleExpression )
            // InternalLegoLang.g:10367:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDifferentAccess().getLeftExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDifferentAccess().getLeftExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Different__LeftAssignment_1"


    // $ANTLR start "rule__Different__RightAssignment_3"
    // InternalLegoLang.g:10376:1: rule__Different__RightAssignment_3 : ( ruleExpression ) ;
    public final void rule__Different__RightAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10380:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10381:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10381:2: ( ruleExpression )
            // InternalLegoLang.g:10382:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDifferentAccess().getRightExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDifferentAccess().getRightExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Different__RightAssignment_3"


    // $ANTLR start "rule__LTorEqual__LeftAssignment_1"
    // InternalLegoLang.g:10391:1: rule__LTorEqual__LeftAssignment_1 : ( ruleExpression ) ;
    public final void rule__LTorEqual__LeftAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10395:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10396:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10396:2: ( ruleExpression )
            // InternalLegoLang.g:10397:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTorEqualAccess().getLeftExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTorEqualAccess().getLeftExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTorEqual__LeftAssignment_1"


    // $ANTLR start "rule__LTorEqual__RightAssignment_3"
    // InternalLegoLang.g:10406:1: rule__LTorEqual__RightAssignment_3 : ( ruleExpression ) ;
    public final void rule__LTorEqual__RightAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10410:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10411:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10411:2: ( ruleExpression )
            // InternalLegoLang.g:10412:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTorEqualAccess().getRightExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTorEqualAccess().getRightExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTorEqual__RightAssignment_3"


    // $ANTLR start "rule__GTorEqual__LeftAssignment_1"
    // InternalLegoLang.g:10421:1: rule__GTorEqual__LeftAssignment_1 : ( ruleExpression ) ;
    public final void rule__GTorEqual__LeftAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10425:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10426:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10426:2: ( ruleExpression )
            // InternalLegoLang.g:10427:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTorEqualAccess().getLeftExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTorEqualAccess().getLeftExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GTorEqual__LeftAssignment_1"


    // $ANTLR start "rule__GTorEqual__RightAssignment_3"
    // InternalLegoLang.g:10436:1: rule__GTorEqual__RightAssignment_3 : ( ruleExpression ) ;
    public final void rule__GTorEqual__RightAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10440:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10441:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10441:2: ( ruleExpression )
            // InternalLegoLang.g:10442:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTorEqualAccess().getRightExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTorEqualAccess().getRightExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GTorEqual__RightAssignment_3"


    // $ANTLR start "rule__Assignement__LeftAssignment_2"
    // InternalLegoLang.g:10451:1: rule__Assignement__LeftAssignment_2 : ( ruleExpression ) ;
    public final void rule__Assignement__LeftAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10455:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10456:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10456:2: ( ruleExpression )
            // InternalLegoLang.g:10457:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignementAccess().getLeftExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignementAccess().getLeftExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignement__LeftAssignment_2"


    // $ANTLR start "rule__Assignement__RightAssignment_4"
    // InternalLegoLang.g:10466:1: rule__Assignement__RightAssignment_4 : ( ruleExpression ) ;
    public final void rule__Assignement__RightAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10470:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10471:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10471:2: ( ruleExpression )
            // InternalLegoLang.g:10472:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignementAccess().getRightExpressionParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignementAccess().getRightExpressionParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignement__RightAssignment_4"


    // $ANTLR start "rule__PlusEqual__LeftAssignment_2"
    // InternalLegoLang.g:10481:1: rule__PlusEqual__LeftAssignment_2 : ( ruleExpression ) ;
    public final void rule__PlusEqual__LeftAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10485:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10486:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10486:2: ( ruleExpression )
            // InternalLegoLang.g:10487:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusEqualAccess().getLeftExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusEqualAccess().getLeftExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusEqual__LeftAssignment_2"


    // $ANTLR start "rule__PlusEqual__RightAssignment_4"
    // InternalLegoLang.g:10496:1: rule__PlusEqual__RightAssignment_4 : ( ruleExpression ) ;
    public final void rule__PlusEqual__RightAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10500:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10501:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10501:2: ( ruleExpression )
            // InternalLegoLang.g:10502:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusEqualAccess().getRightExpressionParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusEqualAccess().getRightExpressionParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusEqual__RightAssignment_4"


    // $ANTLR start "rule__MinusEqual__LeftAssignment_2"
    // InternalLegoLang.g:10511:1: rule__MinusEqual__LeftAssignment_2 : ( ruleExpression ) ;
    public final void rule__MinusEqual__LeftAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10515:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10516:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10516:2: ( ruleExpression )
            // InternalLegoLang.g:10517:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMinusEqualAccess().getLeftExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMinusEqualAccess().getLeftExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MinusEqual__LeftAssignment_2"


    // $ANTLR start "rule__MinusEqual__RightAssignment_4"
    // InternalLegoLang.g:10526:1: rule__MinusEqual__RightAssignment_4 : ( ruleExpression ) ;
    public final void rule__MinusEqual__RightAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10530:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10531:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10531:2: ( ruleExpression )
            // InternalLegoLang.g:10532:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMinusEqualAccess().getRightExpressionParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMinusEqualAccess().getRightExpressionParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MinusEqual__RightAssignment_4"


    // $ANTLR start "rule__UnInteger__IsConstAssignment_1"
    // InternalLegoLang.g:10541:1: rule__UnInteger__IsConstAssignment_1 : ( ( 'const' ) ) ;
    public final void rule__UnInteger__IsConstAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10545:1: ( ( ( 'const' ) ) )
            // InternalLegoLang.g:10546:2: ( ( 'const' ) )
            {
            // InternalLegoLang.g:10546:2: ( ( 'const' ) )
            // InternalLegoLang.g:10547:3: ( 'const' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnIntegerAccess().getIsConstConstKeyword_1_0()); 
            }
            // InternalLegoLang.g:10548:3: ( 'const' )
            // InternalLegoLang.g:10549:4: 'const'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnIntegerAccess().getIsConstConstKeyword_1_0()); 
            }
            match(input,72,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnIntegerAccess().getIsConstConstKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnIntegerAccess().getIsConstConstKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__IsConstAssignment_1"


    // $ANTLR start "rule__UnInteger__NameAssignment_3"
    // InternalLegoLang.g:10560:1: rule__UnInteger__NameAssignment_3 : ( ruleEString ) ;
    public final void rule__UnInteger__NameAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10564:1: ( ( ruleEString ) )
            // InternalLegoLang.g:10565:2: ( ruleEString )
            {
            // InternalLegoLang.g:10565:2: ( ruleEString )
            // InternalLegoLang.g:10566:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnIntegerAccess().getNameEStringParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnIntegerAccess().getNameEStringParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__NameAssignment_3"


    // $ANTLR start "rule__UnInteger__InitialeValueAssignment_4_1"
    // InternalLegoLang.g:10575:1: rule__UnInteger__InitialeValueAssignment_4_1 : ( ruleEInt ) ;
    public final void rule__UnInteger__InitialeValueAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10579:1: ( ( ruleEInt ) )
            // InternalLegoLang.g:10580:2: ( ruleEInt )
            {
            // InternalLegoLang.g:10580:2: ( ruleEInt )
            // InternalLegoLang.g:10581:3: ruleEInt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnIntegerAccess().getInitialeValueEIntParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnIntegerAccess().getInitialeValueEIntParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__InitialeValueAssignment_4_1"


    // $ANTLR start "rule__UnDouble__IsConstAssignment_1"
    // InternalLegoLang.g:10590:1: rule__UnDouble__IsConstAssignment_1 : ( ( 'const' ) ) ;
    public final void rule__UnDouble__IsConstAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10594:1: ( ( ( 'const' ) ) )
            // InternalLegoLang.g:10595:2: ( ( 'const' ) )
            {
            // InternalLegoLang.g:10595:2: ( ( 'const' ) )
            // InternalLegoLang.g:10596:3: ( 'const' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getIsConstConstKeyword_1_0()); 
            }
            // InternalLegoLang.g:10597:3: ( 'const' )
            // InternalLegoLang.g:10598:4: 'const'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getIsConstConstKeyword_1_0()); 
            }
            match(input,72,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getIsConstConstKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getIsConstConstKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__IsConstAssignment_1"


    // $ANTLR start "rule__UnDouble__NameAssignment_3"
    // InternalLegoLang.g:10609:1: rule__UnDouble__NameAssignment_3 : ( ruleEString ) ;
    public final void rule__UnDouble__NameAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10613:1: ( ( ruleEString ) )
            // InternalLegoLang.g:10614:2: ( ruleEString )
            {
            // InternalLegoLang.g:10614:2: ( ruleEString )
            // InternalLegoLang.g:10615:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getNameEStringParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getNameEStringParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__NameAssignment_3"


    // $ANTLR start "rule__UnDouble__InitialeValue1Assignment_4_1"
    // InternalLegoLang.g:10624:1: rule__UnDouble__InitialeValue1Assignment_4_1 : ( ruleEInt ) ;
    public final void rule__UnDouble__InitialeValue1Assignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10628:1: ( ( ruleEInt ) )
            // InternalLegoLang.g:10629:2: ( ruleEInt )
            {
            // InternalLegoLang.g:10629:2: ( ruleEInt )
            // InternalLegoLang.g:10630:3: ruleEInt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getInitialeValue1EIntParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getInitialeValue1EIntParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__InitialeValue1Assignment_4_1"


    // $ANTLR start "rule__UnDouble__InitialeValue2Assignment_4_3"
    // InternalLegoLang.g:10639:1: rule__UnDouble__InitialeValue2Assignment_4_3 : ( ruleEInt ) ;
    public final void rule__UnDouble__InitialeValue2Assignment_4_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10643:1: ( ( ruleEInt ) )
            // InternalLegoLang.g:10644:2: ( ruleEInt )
            {
            // InternalLegoLang.g:10644:2: ( ruleEInt )
            // InternalLegoLang.g:10645:3: ruleEInt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getInitialeValue2EIntParserRuleCall_4_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getInitialeValue2EIntParserRuleCall_4_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__InitialeValue2Assignment_4_3"


    // $ANTLR start "rule__UnBoolean__IsConstAssignment_1"
    // InternalLegoLang.g:10654:1: rule__UnBoolean__IsConstAssignment_1 : ( ( 'const' ) ) ;
    public final void rule__UnBoolean__IsConstAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10658:1: ( ( ( 'const' ) ) )
            // InternalLegoLang.g:10659:2: ( ( 'const' ) )
            {
            // InternalLegoLang.g:10659:2: ( ( 'const' ) )
            // InternalLegoLang.g:10660:3: ( 'const' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnBooleanAccess().getIsConstConstKeyword_1_0()); 
            }
            // InternalLegoLang.g:10661:3: ( 'const' )
            // InternalLegoLang.g:10662:4: 'const'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnBooleanAccess().getIsConstConstKeyword_1_0()); 
            }
            match(input,72,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnBooleanAccess().getIsConstConstKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnBooleanAccess().getIsConstConstKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__IsConstAssignment_1"


    // $ANTLR start "rule__UnBoolean__NameAssignment_3"
    // InternalLegoLang.g:10673:1: rule__UnBoolean__NameAssignment_3 : ( ruleEString ) ;
    public final void rule__UnBoolean__NameAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10677:1: ( ( ruleEString ) )
            // InternalLegoLang.g:10678:2: ( ruleEString )
            {
            // InternalLegoLang.g:10678:2: ( ruleEString )
            // InternalLegoLang.g:10679:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnBooleanAccess().getNameEStringParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnBooleanAccess().getNameEStringParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__NameAssignment_3"


    // $ANTLR start "rule__UnBoolean__InitialeValueAssignment_4_1"
    // InternalLegoLang.g:10688:1: rule__UnBoolean__InitialeValueAssignment_4_1 : ( ruleEBoolean ) ;
    public final void rule__UnBoolean__InitialeValueAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10692:1: ( ( ruleEBoolean ) )
            // InternalLegoLang.g:10693:2: ( ruleEBoolean )
            {
            // InternalLegoLang.g:10693:2: ( ruleEBoolean )
            // InternalLegoLang.g:10694:3: ruleEBoolean
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnBooleanAccess().getInitialeValueEBooleanParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnBooleanAccess().getInitialeValueEBooleanParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__InitialeValueAssignment_4_1"


    // $ANTLR start "rule__UnString__IsConstAssignment_1"
    // InternalLegoLang.g:10703:1: rule__UnString__IsConstAssignment_1 : ( ( 'const' ) ) ;
    public final void rule__UnString__IsConstAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10707:1: ( ( ( 'const' ) ) )
            // InternalLegoLang.g:10708:2: ( ( 'const' ) )
            {
            // InternalLegoLang.g:10708:2: ( ( 'const' ) )
            // InternalLegoLang.g:10709:3: ( 'const' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnStringAccess().getIsConstConstKeyword_1_0()); 
            }
            // InternalLegoLang.g:10710:3: ( 'const' )
            // InternalLegoLang.g:10711:4: 'const'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnStringAccess().getIsConstConstKeyword_1_0()); 
            }
            match(input,72,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnStringAccess().getIsConstConstKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnStringAccess().getIsConstConstKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__IsConstAssignment_1"


    // $ANTLR start "rule__UnString__NameAssignment_3"
    // InternalLegoLang.g:10722:1: rule__UnString__NameAssignment_3 : ( ruleEString ) ;
    public final void rule__UnString__NameAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10726:1: ( ( ruleEString ) )
            // InternalLegoLang.g:10727:2: ( ruleEString )
            {
            // InternalLegoLang.g:10727:2: ( ruleEString )
            // InternalLegoLang.g:10728:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnStringAccess().getNameEStringParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnStringAccess().getNameEStringParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__NameAssignment_3"


    // $ANTLR start "rule__UnString__InitialeValueAssignment_4_1"
    // InternalLegoLang.g:10737:1: rule__UnString__InitialeValueAssignment_4_1 : ( RULE_STRING ) ;
    public final void rule__UnString__InitialeValueAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10741:1: ( ( RULE_STRING ) )
            // InternalLegoLang.g:10742:2: ( RULE_STRING )
            {
            // InternalLegoLang.g:10742:2: ( RULE_STRING )
            // InternalLegoLang.g:10743:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnStringAccess().getInitialeValueSTRINGTerminalRuleCall_4_1_0()); 
            }
            match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnStringAccess().getInitialeValueSTRINGTerminalRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__InitialeValueAssignment_4_1"


    // $ANTLR start "rule__UnColor__IsConstAssignment_1"
    // InternalLegoLang.g:10752:1: rule__UnColor__IsConstAssignment_1 : ( ( 'const' ) ) ;
    public final void rule__UnColor__IsConstAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10756:1: ( ( ( 'const' ) ) )
            // InternalLegoLang.g:10757:2: ( ( 'const' ) )
            {
            // InternalLegoLang.g:10757:2: ( ( 'const' ) )
            // InternalLegoLang.g:10758:3: ( 'const' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnColorAccess().getIsConstConstKeyword_1_0()); 
            }
            // InternalLegoLang.g:10759:3: ( 'const' )
            // InternalLegoLang.g:10760:4: 'const'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnColorAccess().getIsConstConstKeyword_1_0()); 
            }
            match(input,72,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnColorAccess().getIsConstConstKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnColorAccess().getIsConstConstKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__IsConstAssignment_1"


    // $ANTLR start "rule__UnColor__NameAssignment_3"
    // InternalLegoLang.g:10771:1: rule__UnColor__NameAssignment_3 : ( ruleEString ) ;
    public final void rule__UnColor__NameAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10775:1: ( ( ruleEString ) )
            // InternalLegoLang.g:10776:2: ( ruleEString )
            {
            // InternalLegoLang.g:10776:2: ( ruleEString )
            // InternalLegoLang.g:10777:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnColorAccess().getNameEStringParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnColorAccess().getNameEStringParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__NameAssignment_3"


    // $ANTLR start "rule__UnColor__InitialValueAssignment_4_1"
    // InternalLegoLang.g:10786:1: rule__UnColor__InitialValueAssignment_4_1 : ( ruleColors ) ;
    public final void rule__UnColor__InitialValueAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10790:1: ( ( ruleColors ) )
            // InternalLegoLang.g:10791:2: ( ruleColors )
            {
            // InternalLegoLang.g:10791:2: ( ruleColors )
            // InternalLegoLang.g:10792:3: ruleColors
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnColorAccess().getInitialValueColorsEnumRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColors();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnColorAccess().getInitialValueColorsEnumRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__InitialValueAssignment_4_1"


    // $ANTLR start "rule__TheDouble__Value1Assignment_1"
    // InternalLegoLang.g:10801:1: rule__TheDouble__Value1Assignment_1 : ( ruleEInt ) ;
    public final void rule__TheDouble__Value1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10805:1: ( ( ruleEInt ) )
            // InternalLegoLang.g:10806:2: ( ruleEInt )
            {
            // InternalLegoLang.g:10806:2: ( ruleEInt )
            // InternalLegoLang.g:10807:3: ruleEInt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheDoubleAccess().getValue1EIntParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheDoubleAccess().getValue1EIntParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheDouble__Value1Assignment_1"


    // $ANTLR start "rule__TheDouble__Value2Assignment_3"
    // InternalLegoLang.g:10816:1: rule__TheDouble__Value2Assignment_3 : ( ruleEInt ) ;
    public final void rule__TheDouble__Value2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10820:1: ( ( ruleEInt ) )
            // InternalLegoLang.g:10821:2: ( ruleEInt )
            {
            // InternalLegoLang.g:10821:2: ( ruleEInt )
            // InternalLegoLang.g:10822:3: ruleEInt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheDoubleAccess().getValue2EIntParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheDoubleAccess().getValue2EIntParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheDouble__Value2Assignment_3"


    // $ANTLR start "rule__TheInt__ValueAssignment_1"
    // InternalLegoLang.g:10831:1: rule__TheInt__ValueAssignment_1 : ( ruleEInt ) ;
    public final void rule__TheInt__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10835:1: ( ( ruleEInt ) )
            // InternalLegoLang.g:10836:2: ( ruleEInt )
            {
            // InternalLegoLang.g:10836:2: ( ruleEInt )
            // InternalLegoLang.g:10837:3: ruleEInt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheIntAccess().getValueEIntParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheIntAccess().getValueEIntParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheInt__ValueAssignment_1"


    // $ANTLR start "rule__TheBoolean__ValueAssignment_1"
    // InternalLegoLang.g:10846:1: rule__TheBoolean__ValueAssignment_1 : ( ruleEBoolean ) ;
    public final void rule__TheBoolean__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10850:1: ( ( ruleEBoolean ) )
            // InternalLegoLang.g:10851:2: ( ruleEBoolean )
            {
            // InternalLegoLang.g:10851:2: ( ruleEBoolean )
            // InternalLegoLang.g:10852:3: ruleEBoolean
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheBooleanAccess().getValueEBooleanParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheBooleanAccess().getValueEBooleanParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheBoolean__ValueAssignment_1"


    // $ANTLR start "rule__TheString__ValueAssignment_1"
    // InternalLegoLang.g:10861:1: rule__TheString__ValueAssignment_1 : ( RULE_STRING ) ;
    public final void rule__TheString__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10865:1: ( ( RULE_STRING ) )
            // InternalLegoLang.g:10866:2: ( RULE_STRING )
            {
            // InternalLegoLang.g:10866:2: ( RULE_STRING )
            // InternalLegoLang.g:10867:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheStringAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }
            match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheStringAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheString__ValueAssignment_1"


    // $ANTLR start "rule__TheColor__ValueAssignment_1"
    // InternalLegoLang.g:10876:1: rule__TheColor__ValueAssignment_1 : ( ruleColors ) ;
    public final void rule__TheColor__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10880:1: ( ( ruleColors ) )
            // InternalLegoLang.g:10881:2: ( ruleColors )
            {
            // InternalLegoLang.g:10881:2: ( ruleColors )
            // InternalLegoLang.g:10882:3: ruleColors
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheColorAccess().getValueColorsEnumRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColors();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheColorAccess().getValueColorsEnumRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheColor__ValueAssignment_1"

    // $ANTLR start synpred10_InternalLegoLang
    public final void synpred10_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1768:2: ( ( ruleBinaryOperation ) )
        // InternalLegoLang.g:1768:2: ( ruleBinaryOperation )
        {
        // InternalLegoLang.g:1768:2: ( ruleBinaryOperation )
        // InternalLegoLang.g:1769:3: ruleBinaryOperation
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getExpressionAccess().getBinaryOperationParserRuleCall_1()); 
        }
        pushFollow(FOLLOW_2);
        ruleBinaryOperation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred10_InternalLegoLang

    // $ANTLR start synpred13_InternalLegoLang
    public final void synpred13_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1786:2: ( ( ruleTheDouble ) )
        // InternalLegoLang.g:1786:2: ( ruleTheDouble )
        {
        // InternalLegoLang.g:1786:2: ( ruleTheDouble )
        // InternalLegoLang.g:1787:3: ruleTheDouble
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getExpressionAccess().getTheDoubleParserRuleCall_4()); 
        }
        pushFollow(FOLLOW_2);
        ruleTheDouble();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred13_InternalLegoLang

    // $ANTLR start synpred14_InternalLegoLang
    public final void synpred14_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1792:2: ( ( ruleTheInt ) )
        // InternalLegoLang.g:1792:2: ( ruleTheInt )
        {
        // InternalLegoLang.g:1792:2: ( ruleTheInt )
        // InternalLegoLang.g:1793:3: ruleTheInt
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getExpressionAccess().getTheIntParserRuleCall_5()); 
        }
        pushFollow(FOLLOW_2);
        ruleTheInt();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred14_InternalLegoLang

    // $ANTLR start synpred16_InternalLegoLang
    public final void synpred16_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1804:2: ( ( ruleEngineOperation ) )
        // InternalLegoLang.g:1804:2: ( ruleEngineOperation )
        {
        // InternalLegoLang.g:1804:2: ( ruleEngineOperation )
        // InternalLegoLang.g:1805:3: ruleEngineOperation
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getExpressionAccess().getEngineOperationParserRuleCall_7()); 
        }
        pushFollow(FOLLOW_2);
        ruleEngineOperation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred16_InternalLegoLang

    // $ANTLR start synpred19_InternalLegoLang
    public final void synpred19_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1837:2: ( ( ruleSubstraction ) )
        // InternalLegoLang.g:1837:2: ( ruleSubstraction )
        {
        // InternalLegoLang.g:1837:2: ( ruleSubstraction )
        // InternalLegoLang.g:1838:3: ruleSubstraction
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getBinaryOperationAccess().getSubstractionParserRuleCall_0()); 
        }
        pushFollow(FOLLOW_2);
        ruleSubstraction();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred19_InternalLegoLang

    // $ANTLR start synpred20_InternalLegoLang
    public final void synpred20_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1843:2: ( ( ruleComparaison ) )
        // InternalLegoLang.g:1843:2: ( ruleComparaison )
        {
        // InternalLegoLang.g:1843:2: ( ruleComparaison )
        // InternalLegoLang.g:1844:3: ruleComparaison
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getBinaryOperationAccess().getComparaisonParserRuleCall_1()); 
        }
        pushFollow(FOLLOW_2);
        ruleComparaison();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred20_InternalLegoLang

    // $ANTLR start synpred22_InternalLegoLang
    public final void synpred22_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1855:2: ( ( ruleDivision ) )
        // InternalLegoLang.g:1855:2: ( ruleDivision )
        {
        // InternalLegoLang.g:1855:2: ( ruleDivision )
        // InternalLegoLang.g:1856:3: ruleDivision
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getBinaryOperationAccess().getDivisionParserRuleCall_3()); 
        }
        pushFollow(FOLLOW_2);
        ruleDivision();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred22_InternalLegoLang

    // $ANTLR start synpred23_InternalLegoLang
    public final void synpred23_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1861:2: ( ( ruleMultiplication ) )
        // InternalLegoLang.g:1861:2: ( ruleMultiplication )
        {
        // InternalLegoLang.g:1861:2: ( ruleMultiplication )
        // InternalLegoLang.g:1862:3: ruleMultiplication
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getBinaryOperationAccess().getMultiplicationParserRuleCall_4()); 
        }
        pushFollow(FOLLOW_2);
        ruleMultiplication();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred23_InternalLegoLang

    // $ANTLR start synpred24_InternalLegoLang
    public final void synpred24_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1867:2: ( ( ruleAddition ) )
        // InternalLegoLang.g:1867:2: ( ruleAddition )
        {
        // InternalLegoLang.g:1867:2: ( ruleAddition )
        // InternalLegoLang.g:1868:3: ruleAddition
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getBinaryOperationAccess().getAdditionParserRuleCall_5()); 
        }
        pushFollow(FOLLOW_2);
        ruleAddition();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred24_InternalLegoLang

    // $ANTLR start synpred25_InternalLegoLang
    public final void synpred25_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1873:2: ( ( ruleMinusEqual ) )
        // InternalLegoLang.g:1873:2: ( ruleMinusEqual )
        {
        // InternalLegoLang.g:1873:2: ( ruleMinusEqual )
        // InternalLegoLang.g:1874:3: ruleMinusEqual
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getBinaryOperationAccess().getMinusEqualParserRuleCall_6()); 
        }
        pushFollow(FOLLOW_2);
        ruleMinusEqual();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred25_InternalLegoLang

    // $ANTLR start synpred30_InternalLegoLang
    public final void synpred30_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1933:2: ( ( ruleGT ) )
        // InternalLegoLang.g:1933:2: ( ruleGT )
        {
        // InternalLegoLang.g:1933:2: ( ruleGT )
        // InternalLegoLang.g:1934:3: ruleGT
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getComparaisonAccess().getGTParserRuleCall_0()); 
        }
        pushFollow(FOLLOW_2);
        ruleGT();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred30_InternalLegoLang

    // $ANTLR start synpred31_InternalLegoLang
    public final void synpred31_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1939:2: ( ( ruleEqual ) )
        // InternalLegoLang.g:1939:2: ( ruleEqual )
        {
        // InternalLegoLang.g:1939:2: ( ruleEqual )
        // InternalLegoLang.g:1940:3: ruleEqual
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getComparaisonAccess().getEqualParserRuleCall_1()); 
        }
        pushFollow(FOLLOW_2);
        ruleEqual();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred31_InternalLegoLang

    // $ANTLR start synpred32_InternalLegoLang
    public final void synpred32_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1945:2: ( ( ruleLT ) )
        // InternalLegoLang.g:1945:2: ( ruleLT )
        {
        // InternalLegoLang.g:1945:2: ( ruleLT )
        // InternalLegoLang.g:1946:3: ruleLT
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getComparaisonAccess().getLTParserRuleCall_2()); 
        }
        pushFollow(FOLLOW_2);
        ruleLT();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred32_InternalLegoLang

    // $ANTLR start synpred33_InternalLegoLang
    public final void synpred33_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1951:2: ( ( ruleDifferent ) )
        // InternalLegoLang.g:1951:2: ( ruleDifferent )
        {
        // InternalLegoLang.g:1951:2: ( ruleDifferent )
        // InternalLegoLang.g:1952:3: ruleDifferent
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getComparaisonAccess().getDifferentParserRuleCall_3()); 
        }
        pushFollow(FOLLOW_2);
        ruleDifferent();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred33_InternalLegoLang

    // $ANTLR start synpred34_InternalLegoLang
    public final void synpred34_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1957:2: ( ( ruleGTorEqual ) )
        // InternalLegoLang.g:1957:2: ( ruleGTorEqual )
        {
        // InternalLegoLang.g:1957:2: ( ruleGTorEqual )
        // InternalLegoLang.g:1958:3: ruleGTorEqual
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getComparaisonAccess().getGTorEqualParserRuleCall_4()); 
        }
        pushFollow(FOLLOW_2);
        ruleGTorEqual();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred34_InternalLegoLang

    // $ANTLR start synpred49_InternalLegoLang
    public final void synpred49_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:2122:2: ( ( ruleAnd ) )
        // InternalLegoLang.g:2122:2: ( ruleAnd )
        {
        // InternalLegoLang.g:2122:2: ( ruleAnd )
        // InternalLegoLang.g:2123:3: ruleAnd
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getBooleanExpressionAccess().getAndParserRuleCall_0()); 
        }
        pushFollow(FOLLOW_2);
        ruleAnd();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred49_InternalLegoLang

    // $ANTLR start synpred50_InternalLegoLang
    public final void synpred50_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:2143:2: ( ( ruleFQN ) )
        // InternalLegoLang.g:2143:2: ( ruleFQN )
        {
        // InternalLegoLang.g:2143:2: ( ruleFQN )
        // InternalLegoLang.g:2144:3: ruleFQN
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getEStringAccess().getFQNParserRuleCall_0()); 
        }
        pushFollow(FOLLOW_2);
        ruleFQN();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred50_InternalLegoLang

    // Delegated rules

    public final boolean synpred34_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred34_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred25_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred25_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred22_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred50_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA2 dfa2 = new DFA2(this);
    protected DFA3 dfa3 = new DFA3(this);
    static final String dfa_1s = "\22\uffff";
    static final String dfa_2s = "\1\4\1\uffff\2\0\3\uffff\2\0\11\uffff";
    static final String dfa_3s = "\1\67\1\uffff\2\0\3\uffff\2\0\11\uffff";
    static final String dfa_4s = "\1\uffff\1\1\2\uffff\1\3\1\4\3\uffff\1\7\1\uffff\1\11\1\12\1\2\1\13\1\10\1\5\1\6";
    static final String dfa_5s = "\2\uffff\1\0\1\1\3\uffff\1\2\1\3\11\uffff}>";
    static final String[] dfa_6s = {
            "\1\1\1\10\1\4\4\uffff\2\11\2\5\20\uffff\1\3\1\uffff\1\2\2\uffff\1\13\3\uffff\1\14\16\uffff\1\7",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA2 extends DFA {

        public DFA2(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 2;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "1757:1: rule__Expression__Alternatives : ( ( ruleVariableRef ) | ( ruleBinaryOperation ) | ( ruleTheString ) | ( ruleTheColor ) | ( ruleTheDouble ) | ( ruleTheInt ) | ( ruleTheBoolean ) | ( ruleEngineOperation ) | ( ruleBreakMotor ) | ( ruleSensorOperation ) | ( ruleBooleanExpression ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA2_2 = input.LA(1);

                         
                        int index2_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalLegoLang()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index2_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA2_3 = input.LA(1);

                         
                        int index2_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalLegoLang()) ) {s = 13;}

                        else if ( (synpred16_InternalLegoLang()) ) {s = 15;}

                         
                        input.seek(index2_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA2_7 = input.LA(1);

                         
                        int index2_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalLegoLang()) ) {s = 16;}

                        else if ( (synpred14_InternalLegoLang()) ) {s = 17;}

                         
                        input.seek(index2_7);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA2_8 = input.LA(1);

                         
                        int index2_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalLegoLang()) ) {s = 16;}

                        else if ( (synpred14_InternalLegoLang()) ) {s = 17;}

                         
                        input.seek(index2_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 2, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\12\uffff";
    static final String dfa_8s = "\1\37\1\0\10\uffff";
    static final String dfa_9s = "\1\41\1\0\10\uffff";
    static final String dfa_10s = "\2\uffff\1\3\1\1\1\2\1\4\1\5\1\6\1\7\1\10";
    static final String dfa_11s = "\1\uffff\1\0\10\uffff}>";
    static final String[] dfa_12s = {
            "\1\2\1\uffff\1\1",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA3 extends DFA {

        public DFA3(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 3;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "1832:1: rule__BinaryOperation__Alternatives : ( ( ruleSubstraction ) | ( ruleComparaison ) | ( ruleAssignement ) | ( ruleDivision ) | ( ruleMultiplication ) | ( ruleAddition ) | ( ruleMinusEqual ) | ( rulePlusEqual ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA3_1 = input.LA(1);

                         
                        int index3_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalLegoLang()) ) {s = 3;}

                        else if ( (synpred20_InternalLegoLang()) ) {s = 4;}

                        else if ( (synpred22_InternalLegoLang()) ) {s = 5;}

                        else if ( (synpred23_InternalLegoLang()) ) {s = 6;}

                        else if ( (synpred24_InternalLegoLang()) ) {s = 7;}

                        else if ( (synpred25_InternalLegoLang()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index3_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 3, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x00B40312FFAE7870L,0x00000000000001D8L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x00B40312FFA87872L,0x00000000000001D8L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0080011280007870L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0080000000000020L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x000000003FA40000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x000000003E000002L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000001A00002L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0001000400000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0002000400000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x00B40312FFAC7870L,0x00000000000001D8L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x00B40312FFA87870L,0x00000000000001D8L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0040000400000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000280000000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000108L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000110L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000140L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000001800L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000180L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000020000000000L,0x00000000000001D8L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000006000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});

}