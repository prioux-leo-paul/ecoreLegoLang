package langageCompilation.concrete.syntax.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import langageCompilation.concrete.syntax.services.LegoLangGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalLegoLangParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_INT", "RULE_STRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'true'", "'false'", "'black'", "'white'", "'Program'", "'{'", "';'", "'}'", "'WheelEngine'", "'on'", "'MotorizedArmEngine'", "'PaintballLauncherEngine'", "'ColorSensor'", "'LaserSensor'", "'GPSSensor'", "'GyroSensor'", "'UltraSonicSensor'", "'Car'", "'set'", "'vitesse'", "'('", "')'", "'='", "'break'", "'motor'", "'degres'", "'strength'", "'get'", "'color'", "'intensity'", "'range'", "'x'", "'y'", "'angle'", "'distance'", "'and'", "'or'", "'if'", "'else{'", "'while'", "'print('", "','", "'-'", "'+'", "'*'", "'/'", "'>'", "'<'", "'=='", "'!='", "'<='", "'>='", "'+='", "'-='", "'int'", "'double'", "'.'", "'bool'", "'string'", "'const'"
    };
    public static final int T__50=50;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__59=59;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__11=11;
    public static final int T__55=55;
    public static final int T__12=12;
    public static final int T__56=56;
    public static final int T__13=13;
    public static final int T__57=57;
    public static final int T__14=14;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=4;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int RULE_INT=5;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=7;
    public static final int T__23=23;
    public static final int T__67=67;
    public static final int T__24=24;
    public static final int T__68=68;
    public static final int T__25=25;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__20=20;
    public static final int T__64=64;
    public static final int T__21=21;
    public static final int T__65=65;
    public static final int T__70=70;
    public static final int RULE_STRING=6;
    public static final int RULE_SL_COMMENT=8;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int EOF=-1;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int RULE_WS=9;
    public static final int RULE_ANY_OTHER=10;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;

    // delegates
    // delegators


        public InternalLegoLangParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalLegoLangParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalLegoLangParser.tokenNames; }
    public String getGrammarFileName() { return "InternalLegoLang.g"; }


    	private LegoLangGrammarAccess grammarAccess;

    	public void setGrammarAccess(LegoLangGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		return tokenName;
    	}



    // $ANTLR start "entryRuleProgram"
    // InternalLegoLang.g:54:1: entryRuleProgram : ruleProgram EOF ;
    public final void entryRuleProgram() throws RecognitionException {
        try {
            // InternalLegoLang.g:55:1: ( ruleProgram EOF )
            // InternalLegoLang.g:56:1: ruleProgram EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleProgram();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleProgram"


    // $ANTLR start "ruleProgram"
    // InternalLegoLang.g:63:1: ruleProgram : ( ( rule__Program__Group__0 ) ) ;
    public final void ruleProgram() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:67:2: ( ( ( rule__Program__Group__0 ) ) )
            // InternalLegoLang.g:68:2: ( ( rule__Program__Group__0 ) )
            {
            // InternalLegoLang.g:68:2: ( ( rule__Program__Group__0 ) )
            // InternalLegoLang.g:69:3: ( rule__Program__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getGroup()); 
            }
            // InternalLegoLang.g:70:3: ( rule__Program__Group__0 )
            // InternalLegoLang.g:70:4: rule__Program__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Program__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleProgram"


    // $ANTLR start "entryRuleStatement"
    // InternalLegoLang.g:79:1: entryRuleStatement : ruleStatement EOF ;
    public final void entryRuleStatement() throws RecognitionException {
        try {
            // InternalLegoLang.g:80:1: ( ruleStatement EOF )
            // InternalLegoLang.g:81:1: ruleStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleStatement"


    // $ANTLR start "ruleStatement"
    // InternalLegoLang.g:88:1: ruleStatement : ( ( rule__Statement__Alternatives ) ) ;
    public final void ruleStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:92:2: ( ( ( rule__Statement__Alternatives ) ) )
            // InternalLegoLang.g:93:2: ( ( rule__Statement__Alternatives ) )
            {
            // InternalLegoLang.g:93:2: ( ( rule__Statement__Alternatives ) )
            // InternalLegoLang.g:94:3: ( rule__Statement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getStatementAccess().getAlternatives()); 
            }
            // InternalLegoLang.g:95:3: ( rule__Statement__Alternatives )
            // InternalLegoLang.g:95:4: rule__Statement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Statement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getStatementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleStatement"


    // $ANTLR start "entryRuleExpression"
    // InternalLegoLang.g:104:1: entryRuleExpression : ruleExpression EOF ;
    public final void entryRuleExpression() throws RecognitionException {
        try {
            // InternalLegoLang.g:105:1: ( ruleExpression EOF )
            // InternalLegoLang.g:106:1: ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalLegoLang.g:113:1: ruleExpression : ( ( rule__Expression__Alternatives ) ) ;
    public final void ruleExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:117:2: ( ( ( rule__Expression__Alternatives ) ) )
            // InternalLegoLang.g:118:2: ( ( rule__Expression__Alternatives ) )
            {
            // InternalLegoLang.g:118:2: ( ( rule__Expression__Alternatives ) )
            // InternalLegoLang.g:119:3: ( rule__Expression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getExpressionAccess().getAlternatives()); 
            }
            // InternalLegoLang.g:120:3: ( rule__Expression__Alternatives )
            // InternalLegoLang.g:120:4: rule__Expression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Expression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleBinaryOperation"
    // InternalLegoLang.g:129:1: entryRuleBinaryOperation : ruleBinaryOperation EOF ;
    public final void entryRuleBinaryOperation() throws RecognitionException {
        try {
            // InternalLegoLang.g:130:1: ( ruleBinaryOperation EOF )
            // InternalLegoLang.g:131:1: ruleBinaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBinaryOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBinaryOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBinaryOperationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBinaryOperation"


    // $ANTLR start "ruleBinaryOperation"
    // InternalLegoLang.g:138:1: ruleBinaryOperation : ( ( rule__BinaryOperation__Alternatives ) ) ;
    public final void ruleBinaryOperation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:142:2: ( ( ( rule__BinaryOperation__Alternatives ) ) )
            // InternalLegoLang.g:143:2: ( ( rule__BinaryOperation__Alternatives ) )
            {
            // InternalLegoLang.g:143:2: ( ( rule__BinaryOperation__Alternatives ) )
            // InternalLegoLang.g:144:3: ( rule__BinaryOperation__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBinaryOperationAccess().getAlternatives()); 
            }
            // InternalLegoLang.g:145:3: ( rule__BinaryOperation__Alternatives )
            // InternalLegoLang.g:145:4: rule__BinaryOperation__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__BinaryOperation__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBinaryOperationAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBinaryOperation"


    // $ANTLR start "entryRuleVariable"
    // InternalLegoLang.g:154:1: entryRuleVariable : ruleVariable EOF ;
    public final void entryRuleVariable() throws RecognitionException {
        try {
            // InternalLegoLang.g:155:1: ( ruleVariable EOF )
            // InternalLegoLang.g:156:1: ruleVariable EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariableRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVariable();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariableRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVariable"


    // $ANTLR start "ruleVariable"
    // InternalLegoLang.g:163:1: ruleVariable : ( ( rule__Variable__Alternatives ) ) ;
    public final void ruleVariable() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:167:2: ( ( ( rule__Variable__Alternatives ) ) )
            // InternalLegoLang.g:168:2: ( ( rule__Variable__Alternatives ) )
            {
            // InternalLegoLang.g:168:2: ( ( rule__Variable__Alternatives ) )
            // InternalLegoLang.g:169:3: ( rule__Variable__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariableAccess().getAlternatives()); 
            }
            // InternalLegoLang.g:170:3: ( rule__Variable__Alternatives )
            // InternalLegoLang.g:170:4: rule__Variable__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Variable__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariableAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVariable"


    // $ANTLR start "entryRuleComparaison"
    // InternalLegoLang.g:179:1: entryRuleComparaison : ruleComparaison EOF ;
    public final void entryRuleComparaison() throws RecognitionException {
        try {
            // InternalLegoLang.g:180:1: ( ruleComparaison EOF )
            // InternalLegoLang.g:181:1: ruleComparaison EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparaisonRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleComparaison();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparaisonRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleComparaison"


    // $ANTLR start "ruleComparaison"
    // InternalLegoLang.g:188:1: ruleComparaison : ( ( rule__Comparaison__Alternatives ) ) ;
    public final void ruleComparaison() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:192:2: ( ( ( rule__Comparaison__Alternatives ) ) )
            // InternalLegoLang.g:193:2: ( ( rule__Comparaison__Alternatives ) )
            {
            // InternalLegoLang.g:193:2: ( ( rule__Comparaison__Alternatives ) )
            // InternalLegoLang.g:194:3: ( rule__Comparaison__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getComparaisonAccess().getAlternatives()); 
            }
            // InternalLegoLang.g:195:3: ( rule__Comparaison__Alternatives )
            // InternalLegoLang.g:195:4: rule__Comparaison__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Comparaison__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getComparaisonAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleComparaison"


    // $ANTLR start "entryRuleEngine"
    // InternalLegoLang.g:204:1: entryRuleEngine : ruleEngine EOF ;
    public final void entryRuleEngine() throws RecognitionException {
        try {
            // InternalLegoLang.g:205:1: ( ruleEngine EOF )
            // InternalLegoLang.g:206:1: ruleEngine EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEngineRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleEngine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEngineRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEngine"


    // $ANTLR start "ruleEngine"
    // InternalLegoLang.g:213:1: ruleEngine : ( ( rule__Engine__Alternatives ) ) ;
    public final void ruleEngine() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:217:2: ( ( ( rule__Engine__Alternatives ) ) )
            // InternalLegoLang.g:218:2: ( ( rule__Engine__Alternatives ) )
            {
            // InternalLegoLang.g:218:2: ( ( rule__Engine__Alternatives ) )
            // InternalLegoLang.g:219:3: ( rule__Engine__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEngineAccess().getAlternatives()); 
            }
            // InternalLegoLang.g:220:3: ( rule__Engine__Alternatives )
            // InternalLegoLang.g:220:4: rule__Engine__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Engine__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEngineAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEngine"


    // $ANTLR start "entryRuleSensor"
    // InternalLegoLang.g:229:1: entryRuleSensor : ruleSensor EOF ;
    public final void entryRuleSensor() throws RecognitionException {
        try {
            // InternalLegoLang.g:230:1: ( ruleSensor EOF )
            // InternalLegoLang.g:231:1: ruleSensor EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSensorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSensor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSensorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSensor"


    // $ANTLR start "ruleSensor"
    // InternalLegoLang.g:238:1: ruleSensor : ( ( rule__Sensor__Alternatives ) ) ;
    public final void ruleSensor() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:242:2: ( ( ( rule__Sensor__Alternatives ) ) )
            // InternalLegoLang.g:243:2: ( ( rule__Sensor__Alternatives ) )
            {
            // InternalLegoLang.g:243:2: ( ( rule__Sensor__Alternatives ) )
            // InternalLegoLang.g:244:3: ( rule__Sensor__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSensorAccess().getAlternatives()); 
            }
            // InternalLegoLang.g:245:3: ( rule__Sensor__Alternatives )
            // InternalLegoLang.g:245:4: rule__Sensor__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Sensor__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSensorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSensor"


    // $ANTLR start "entryRuleWheelEngine"
    // InternalLegoLang.g:254:1: entryRuleWheelEngine : ruleWheelEngine EOF ;
    public final void entryRuleWheelEngine() throws RecognitionException {
        try {
            // InternalLegoLang.g:255:1: ( ruleWheelEngine EOF )
            // InternalLegoLang.g:256:1: ruleWheelEngine EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWheelEngineRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWheelEngine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWheelEngineRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWheelEngine"


    // $ANTLR start "ruleWheelEngine"
    // InternalLegoLang.g:263:1: ruleWheelEngine : ( ( rule__WheelEngine__Group__0 ) ) ;
    public final void ruleWheelEngine() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:267:2: ( ( ( rule__WheelEngine__Group__0 ) ) )
            // InternalLegoLang.g:268:2: ( ( rule__WheelEngine__Group__0 ) )
            {
            // InternalLegoLang.g:268:2: ( ( rule__WheelEngine__Group__0 ) )
            // InternalLegoLang.g:269:3: ( rule__WheelEngine__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWheelEngineAccess().getGroup()); 
            }
            // InternalLegoLang.g:270:3: ( rule__WheelEngine__Group__0 )
            // InternalLegoLang.g:270:4: rule__WheelEngine__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WheelEngine__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWheelEngineAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWheelEngine"


    // $ANTLR start "entryRuleMotorizedArmEngine"
    // InternalLegoLang.g:279:1: entryRuleMotorizedArmEngine : ruleMotorizedArmEngine EOF ;
    public final void entryRuleMotorizedArmEngine() throws RecognitionException {
        try {
            // InternalLegoLang.g:280:1: ( ruleMotorizedArmEngine EOF )
            // InternalLegoLang.g:281:1: ruleMotorizedArmEngine EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMotorizedArmEngineRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleMotorizedArmEngine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMotorizedArmEngineRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMotorizedArmEngine"


    // $ANTLR start "ruleMotorizedArmEngine"
    // InternalLegoLang.g:288:1: ruleMotorizedArmEngine : ( ( rule__MotorizedArmEngine__Group__0 ) ) ;
    public final void ruleMotorizedArmEngine() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:292:2: ( ( ( rule__MotorizedArmEngine__Group__0 ) ) )
            // InternalLegoLang.g:293:2: ( ( rule__MotorizedArmEngine__Group__0 ) )
            {
            // InternalLegoLang.g:293:2: ( ( rule__MotorizedArmEngine__Group__0 ) )
            // InternalLegoLang.g:294:3: ( rule__MotorizedArmEngine__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMotorizedArmEngineAccess().getGroup()); 
            }
            // InternalLegoLang.g:295:3: ( rule__MotorizedArmEngine__Group__0 )
            // InternalLegoLang.g:295:4: rule__MotorizedArmEngine__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MotorizedArmEngine__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMotorizedArmEngineAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMotorizedArmEngine"


    // $ANTLR start "entryRulePaintballLauncherEngine"
    // InternalLegoLang.g:304:1: entryRulePaintballLauncherEngine : rulePaintballLauncherEngine EOF ;
    public final void entryRulePaintballLauncherEngine() throws RecognitionException {
        try {
            // InternalLegoLang.g:305:1: ( rulePaintballLauncherEngine EOF )
            // InternalLegoLang.g:306:1: rulePaintballLauncherEngine EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPaintballLauncherEngineRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePaintballLauncherEngine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPaintballLauncherEngineRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePaintballLauncherEngine"


    // $ANTLR start "rulePaintballLauncherEngine"
    // InternalLegoLang.g:313:1: rulePaintballLauncherEngine : ( ( rule__PaintballLauncherEngine__Group__0 ) ) ;
    public final void rulePaintballLauncherEngine() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:317:2: ( ( ( rule__PaintballLauncherEngine__Group__0 ) ) )
            // InternalLegoLang.g:318:2: ( ( rule__PaintballLauncherEngine__Group__0 ) )
            {
            // InternalLegoLang.g:318:2: ( ( rule__PaintballLauncherEngine__Group__0 ) )
            // InternalLegoLang.g:319:3: ( rule__PaintballLauncherEngine__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPaintballLauncherEngineAccess().getGroup()); 
            }
            // InternalLegoLang.g:320:3: ( rule__PaintballLauncherEngine__Group__0 )
            // InternalLegoLang.g:320:4: rule__PaintballLauncherEngine__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PaintballLauncherEngine__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPaintballLauncherEngineAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePaintballLauncherEngine"


    // $ANTLR start "entryRuleColorSensor"
    // InternalLegoLang.g:329:1: entryRuleColorSensor : ruleColorSensor EOF ;
    public final void entryRuleColorSensor() throws RecognitionException {
        try {
            // InternalLegoLang.g:330:1: ( ruleColorSensor EOF )
            // InternalLegoLang.g:331:1: ruleColorSensor EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorSensorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColorSensor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorSensorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColorSensor"


    // $ANTLR start "ruleColorSensor"
    // InternalLegoLang.g:338:1: ruleColorSensor : ( ( rule__ColorSensor__Group__0 ) ) ;
    public final void ruleColorSensor() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:342:2: ( ( ( rule__ColorSensor__Group__0 ) ) )
            // InternalLegoLang.g:343:2: ( ( rule__ColorSensor__Group__0 ) )
            {
            // InternalLegoLang.g:343:2: ( ( rule__ColorSensor__Group__0 ) )
            // InternalLegoLang.g:344:3: ( rule__ColorSensor__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorSensorAccess().getGroup()); 
            }
            // InternalLegoLang.g:345:3: ( rule__ColorSensor__Group__0 )
            // InternalLegoLang.g:345:4: rule__ColorSensor__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ColorSensor__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorSensorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColorSensor"


    // $ANTLR start "entryRuleLaserSensor"
    // InternalLegoLang.g:354:1: entryRuleLaserSensor : ruleLaserSensor EOF ;
    public final void entryRuleLaserSensor() throws RecognitionException {
        try {
            // InternalLegoLang.g:355:1: ( ruleLaserSensor EOF )
            // InternalLegoLang.g:356:1: ruleLaserSensor EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLaserSensorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLaserSensor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLaserSensorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLaserSensor"


    // $ANTLR start "ruleLaserSensor"
    // InternalLegoLang.g:363:1: ruleLaserSensor : ( ( rule__LaserSensor__Group__0 ) ) ;
    public final void ruleLaserSensor() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:367:2: ( ( ( rule__LaserSensor__Group__0 ) ) )
            // InternalLegoLang.g:368:2: ( ( rule__LaserSensor__Group__0 ) )
            {
            // InternalLegoLang.g:368:2: ( ( rule__LaserSensor__Group__0 ) )
            // InternalLegoLang.g:369:3: ( rule__LaserSensor__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLaserSensorAccess().getGroup()); 
            }
            // InternalLegoLang.g:370:3: ( rule__LaserSensor__Group__0 )
            // InternalLegoLang.g:370:4: rule__LaserSensor__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LaserSensor__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLaserSensorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLaserSensor"


    // $ANTLR start "entryRuleGPSSensor"
    // InternalLegoLang.g:379:1: entryRuleGPSSensor : ruleGPSSensor EOF ;
    public final void entryRuleGPSSensor() throws RecognitionException {
        try {
            // InternalLegoLang.g:380:1: ( ruleGPSSensor EOF )
            // InternalLegoLang.g:381:1: ruleGPSSensor EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGPSSensorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleGPSSensor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGPSSensorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGPSSensor"


    // $ANTLR start "ruleGPSSensor"
    // InternalLegoLang.g:388:1: ruleGPSSensor : ( ( rule__GPSSensor__Group__0 ) ) ;
    public final void ruleGPSSensor() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:392:2: ( ( ( rule__GPSSensor__Group__0 ) ) )
            // InternalLegoLang.g:393:2: ( ( rule__GPSSensor__Group__0 ) )
            {
            // InternalLegoLang.g:393:2: ( ( rule__GPSSensor__Group__0 ) )
            // InternalLegoLang.g:394:3: ( rule__GPSSensor__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGPSSensorAccess().getGroup()); 
            }
            // InternalLegoLang.g:395:3: ( rule__GPSSensor__Group__0 )
            // InternalLegoLang.g:395:4: rule__GPSSensor__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__GPSSensor__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGPSSensorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGPSSensor"


    // $ANTLR start "entryRuleGyroSensor"
    // InternalLegoLang.g:404:1: entryRuleGyroSensor : ruleGyroSensor EOF ;
    public final void entryRuleGyroSensor() throws RecognitionException {
        try {
            // InternalLegoLang.g:405:1: ( ruleGyroSensor EOF )
            // InternalLegoLang.g:406:1: ruleGyroSensor EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGyroSensorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleGyroSensor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGyroSensorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGyroSensor"


    // $ANTLR start "ruleGyroSensor"
    // InternalLegoLang.g:413:1: ruleGyroSensor : ( ( rule__GyroSensor__Group__0 ) ) ;
    public final void ruleGyroSensor() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:417:2: ( ( ( rule__GyroSensor__Group__0 ) ) )
            // InternalLegoLang.g:418:2: ( ( rule__GyroSensor__Group__0 ) )
            {
            // InternalLegoLang.g:418:2: ( ( rule__GyroSensor__Group__0 ) )
            // InternalLegoLang.g:419:3: ( rule__GyroSensor__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGyroSensorAccess().getGroup()); 
            }
            // InternalLegoLang.g:420:3: ( rule__GyroSensor__Group__0 )
            // InternalLegoLang.g:420:4: rule__GyroSensor__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__GyroSensor__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGyroSensorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGyroSensor"


    // $ANTLR start "entryRuleUltraSonicSensor"
    // InternalLegoLang.g:429:1: entryRuleUltraSonicSensor : ruleUltraSonicSensor EOF ;
    public final void entryRuleUltraSonicSensor() throws RecognitionException {
        try {
            // InternalLegoLang.g:430:1: ( ruleUltraSonicSensor EOF )
            // InternalLegoLang.g:431:1: ruleUltraSonicSensor EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUltraSonicSensorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUltraSonicSensor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUltraSonicSensorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUltraSonicSensor"


    // $ANTLR start "ruleUltraSonicSensor"
    // InternalLegoLang.g:438:1: ruleUltraSonicSensor : ( ( rule__UltraSonicSensor__Group__0 ) ) ;
    public final void ruleUltraSonicSensor() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:442:2: ( ( ( rule__UltraSonicSensor__Group__0 ) ) )
            // InternalLegoLang.g:443:2: ( ( rule__UltraSonicSensor__Group__0 ) )
            {
            // InternalLegoLang.g:443:2: ( ( rule__UltraSonicSensor__Group__0 ) )
            // InternalLegoLang.g:444:3: ( rule__UltraSonicSensor__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUltraSonicSensorAccess().getGroup()); 
            }
            // InternalLegoLang.g:445:3: ( rule__UltraSonicSensor__Group__0 )
            // InternalLegoLang.g:445:4: rule__UltraSonicSensor__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UltraSonicSensor__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUltraSonicSensorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUltraSonicSensor"


    // $ANTLR start "entryRuleCar"
    // InternalLegoLang.g:454:1: entryRuleCar : ruleCar EOF ;
    public final void entryRuleCar() throws RecognitionException {
        try {
            // InternalLegoLang.g:455:1: ( ruleCar EOF )
            // InternalLegoLang.g:456:1: ruleCar EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCarRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleCar();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCarRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleCar"


    // $ANTLR start "ruleCar"
    // InternalLegoLang.g:463:1: ruleCar : ( ( rule__Car__Group__0 ) ) ;
    public final void ruleCar() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:467:2: ( ( ( rule__Car__Group__0 ) ) )
            // InternalLegoLang.g:468:2: ( ( rule__Car__Group__0 ) )
            {
            // InternalLegoLang.g:468:2: ( ( rule__Car__Group__0 ) )
            // InternalLegoLang.g:469:3: ( rule__Car__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCarAccess().getGroup()); 
            }
            // InternalLegoLang.g:470:3: ( rule__Car__Group__0 )
            // InternalLegoLang.g:470:4: rule__Car__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Car__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCarAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCar"


    // $ANTLR start "entryRuleEngineOperation"
    // InternalLegoLang.g:479:1: entryRuleEngineOperation : ruleEngineOperation EOF ;
    public final void entryRuleEngineOperation() throws RecognitionException {
        try {
            // InternalLegoLang.g:480:1: ( ruleEngineOperation EOF )
            // InternalLegoLang.g:481:1: ruleEngineOperation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEngineOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleEngineOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEngineOperationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEngineOperation"


    // $ANTLR start "ruleEngineOperation"
    // InternalLegoLang.g:488:1: ruleEngineOperation : ( ( rule__EngineOperation__Alternatives ) ) ;
    public final void ruleEngineOperation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:492:2: ( ( ( rule__EngineOperation__Alternatives ) ) )
            // InternalLegoLang.g:493:2: ( ( rule__EngineOperation__Alternatives ) )
            {
            // InternalLegoLang.g:493:2: ( ( rule__EngineOperation__Alternatives ) )
            // InternalLegoLang.g:494:3: ( rule__EngineOperation__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEngineOperationAccess().getAlternatives()); 
            }
            // InternalLegoLang.g:495:3: ( rule__EngineOperation__Alternatives )
            // InternalLegoLang.g:495:4: rule__EngineOperation__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EngineOperation__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEngineOperationAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEngineOperation"


    // $ANTLR start "entryRuleSensorOperation"
    // InternalLegoLang.g:504:1: entryRuleSensorOperation : ruleSensorOperation EOF ;
    public final void entryRuleSensorOperation() throws RecognitionException {
        try {
            // InternalLegoLang.g:505:1: ( ruleSensorOperation EOF )
            // InternalLegoLang.g:506:1: ruleSensorOperation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSensorOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSensorOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSensorOperationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSensorOperation"


    // $ANTLR start "ruleSensorOperation"
    // InternalLegoLang.g:513:1: ruleSensorOperation : ( ( rule__SensorOperation__Alternatives ) ) ;
    public final void ruleSensorOperation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:517:2: ( ( ( rule__SensorOperation__Alternatives ) ) )
            // InternalLegoLang.g:518:2: ( ( rule__SensorOperation__Alternatives ) )
            {
            // InternalLegoLang.g:518:2: ( ( rule__SensorOperation__Alternatives ) )
            // InternalLegoLang.g:519:3: ( rule__SensorOperation__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSensorOperationAccess().getAlternatives()); 
            }
            // InternalLegoLang.g:520:3: ( rule__SensorOperation__Alternatives )
            // InternalLegoLang.g:520:4: rule__SensorOperation__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__SensorOperation__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSensorOperationAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSensorOperation"


    // $ANTLR start "entryRuleVitesseOperation"
    // InternalLegoLang.g:529:1: entryRuleVitesseOperation : ruleVitesseOperation EOF ;
    public final void entryRuleVitesseOperation() throws RecognitionException {
        try {
            // InternalLegoLang.g:530:1: ( ruleVitesseOperation EOF )
            // InternalLegoLang.g:531:1: ruleVitesseOperation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVitesseOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVitesseOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVitesseOperationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVitesseOperation"


    // $ANTLR start "ruleVitesseOperation"
    // InternalLegoLang.g:538:1: ruleVitesseOperation : ( ( rule__VitesseOperation__Group__0 ) ) ;
    public final void ruleVitesseOperation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:542:2: ( ( ( rule__VitesseOperation__Group__0 ) ) )
            // InternalLegoLang.g:543:2: ( ( rule__VitesseOperation__Group__0 ) )
            {
            // InternalLegoLang.g:543:2: ( ( rule__VitesseOperation__Group__0 ) )
            // InternalLegoLang.g:544:3: ( rule__VitesseOperation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVitesseOperationAccess().getGroup()); 
            }
            // InternalLegoLang.g:545:3: ( rule__VitesseOperation__Group__0 )
            // InternalLegoLang.g:545:4: rule__VitesseOperation__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VitesseOperation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVitesseOperationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVitesseOperation"


    // $ANTLR start "entryRuleBreakMotor"
    // InternalLegoLang.g:554:1: entryRuleBreakMotor : ruleBreakMotor EOF ;
    public final void entryRuleBreakMotor() throws RecognitionException {
        try {
            // InternalLegoLang.g:555:1: ( ruleBreakMotor EOF )
            // InternalLegoLang.g:556:1: ruleBreakMotor EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakMotorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBreakMotor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakMotorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBreakMotor"


    // $ANTLR start "ruleBreakMotor"
    // InternalLegoLang.g:563:1: ruleBreakMotor : ( ( rule__BreakMotor__Group__0 ) ) ;
    public final void ruleBreakMotor() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:567:2: ( ( ( rule__BreakMotor__Group__0 ) ) )
            // InternalLegoLang.g:568:2: ( ( rule__BreakMotor__Group__0 ) )
            {
            // InternalLegoLang.g:568:2: ( ( rule__BreakMotor__Group__0 ) )
            // InternalLegoLang.g:569:3: ( rule__BreakMotor__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakMotorAccess().getGroup()); 
            }
            // InternalLegoLang.g:570:3: ( rule__BreakMotor__Group__0 )
            // InternalLegoLang.g:570:4: rule__BreakMotor__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BreakMotor__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakMotorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBreakMotor"


    // $ANTLR start "entryRulePositionOperation"
    // InternalLegoLang.g:579:1: entryRulePositionOperation : rulePositionOperation EOF ;
    public final void entryRulePositionOperation() throws RecognitionException {
        try {
            // InternalLegoLang.g:580:1: ( rulePositionOperation EOF )
            // InternalLegoLang.g:581:1: rulePositionOperation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPositionOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePositionOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPositionOperationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePositionOperation"


    // $ANTLR start "rulePositionOperation"
    // InternalLegoLang.g:588:1: rulePositionOperation : ( ( rule__PositionOperation__Group__0 ) ) ;
    public final void rulePositionOperation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:592:2: ( ( ( rule__PositionOperation__Group__0 ) ) )
            // InternalLegoLang.g:593:2: ( ( rule__PositionOperation__Group__0 ) )
            {
            // InternalLegoLang.g:593:2: ( ( rule__PositionOperation__Group__0 ) )
            // InternalLegoLang.g:594:3: ( rule__PositionOperation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPositionOperationAccess().getGroup()); 
            }
            // InternalLegoLang.g:595:3: ( rule__PositionOperation__Group__0 )
            // InternalLegoLang.g:595:4: rule__PositionOperation__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PositionOperation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPositionOperationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePositionOperation"


    // $ANTLR start "entryRuleForceOperation"
    // InternalLegoLang.g:604:1: entryRuleForceOperation : ruleForceOperation EOF ;
    public final void entryRuleForceOperation() throws RecognitionException {
        try {
            // InternalLegoLang.g:605:1: ( ruleForceOperation EOF )
            // InternalLegoLang.g:606:1: ruleForceOperation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForceOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleForceOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForceOperationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleForceOperation"


    // $ANTLR start "ruleForceOperation"
    // InternalLegoLang.g:613:1: ruleForceOperation : ( ( rule__ForceOperation__Group__0 ) ) ;
    public final void ruleForceOperation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:617:2: ( ( ( rule__ForceOperation__Group__0 ) ) )
            // InternalLegoLang.g:618:2: ( ( rule__ForceOperation__Group__0 ) )
            {
            // InternalLegoLang.g:618:2: ( ( rule__ForceOperation__Group__0 ) )
            // InternalLegoLang.g:619:3: ( rule__ForceOperation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForceOperationAccess().getGroup()); 
            }
            // InternalLegoLang.g:620:3: ( rule__ForceOperation__Group__0 )
            // InternalLegoLang.g:620:4: rule__ForceOperation__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ForceOperation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForceOperationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleForceOperation"


    // $ANTLR start "entryRuleColorOperation"
    // InternalLegoLang.g:629:1: entryRuleColorOperation : ruleColorOperation EOF ;
    public final void entryRuleColorOperation() throws RecognitionException {
        try {
            // InternalLegoLang.g:630:1: ( ruleColorOperation EOF )
            // InternalLegoLang.g:631:1: ruleColorOperation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleColorOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorOperationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleColorOperation"


    // $ANTLR start "ruleColorOperation"
    // InternalLegoLang.g:638:1: ruleColorOperation : ( ( rule__ColorOperation__Group__0 ) ) ;
    public final void ruleColorOperation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:642:2: ( ( ( rule__ColorOperation__Group__0 ) ) )
            // InternalLegoLang.g:643:2: ( ( rule__ColorOperation__Group__0 ) )
            {
            // InternalLegoLang.g:643:2: ( ( rule__ColorOperation__Group__0 ) )
            // InternalLegoLang.g:644:3: ( rule__ColorOperation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorOperationAccess().getGroup()); 
            }
            // InternalLegoLang.g:645:3: ( rule__ColorOperation__Group__0 )
            // InternalLegoLang.g:645:4: rule__ColorOperation__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ColorOperation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorOperationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColorOperation"


    // $ANTLR start "entryRuleIntensityOperation"
    // InternalLegoLang.g:654:1: entryRuleIntensityOperation : ruleIntensityOperation EOF ;
    public final void entryRuleIntensityOperation() throws RecognitionException {
        try {
            // InternalLegoLang.g:655:1: ( ruleIntensityOperation EOF )
            // InternalLegoLang.g:656:1: ruleIntensityOperation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntensityOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleIntensityOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntensityOperationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleIntensityOperation"


    // $ANTLR start "ruleIntensityOperation"
    // InternalLegoLang.g:663:1: ruleIntensityOperation : ( ( rule__IntensityOperation__Group__0 ) ) ;
    public final void ruleIntensityOperation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:667:2: ( ( ( rule__IntensityOperation__Group__0 ) ) )
            // InternalLegoLang.g:668:2: ( ( rule__IntensityOperation__Group__0 ) )
            {
            // InternalLegoLang.g:668:2: ( ( rule__IntensityOperation__Group__0 ) )
            // InternalLegoLang.g:669:3: ( rule__IntensityOperation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntensityOperationAccess().getGroup()); 
            }
            // InternalLegoLang.g:670:3: ( rule__IntensityOperation__Group__0 )
            // InternalLegoLang.g:670:4: rule__IntensityOperation__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__IntensityOperation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntensityOperationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleIntensityOperation"


    // $ANTLR start "entryRuleRangeOperation"
    // InternalLegoLang.g:679:1: entryRuleRangeOperation : ruleRangeOperation EOF ;
    public final void entryRuleRangeOperation() throws RecognitionException {
        try {
            // InternalLegoLang.g:680:1: ( ruleRangeOperation EOF )
            // InternalLegoLang.g:681:1: ruleRangeOperation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleRangeOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeOperationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleRangeOperation"


    // $ANTLR start "ruleRangeOperation"
    // InternalLegoLang.g:688:1: ruleRangeOperation : ( ( rule__RangeOperation__Group__0 ) ) ;
    public final void ruleRangeOperation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:692:2: ( ( ( rule__RangeOperation__Group__0 ) ) )
            // InternalLegoLang.g:693:2: ( ( rule__RangeOperation__Group__0 ) )
            {
            // InternalLegoLang.g:693:2: ( ( rule__RangeOperation__Group__0 ) )
            // InternalLegoLang.g:694:3: ( rule__RangeOperation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeOperationAccess().getGroup()); 
            }
            // InternalLegoLang.g:695:3: ( rule__RangeOperation__Group__0 )
            // InternalLegoLang.g:695:4: rule__RangeOperation__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__RangeOperation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeOperationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleRangeOperation"


    // $ANTLR start "entryRuleXGPSOperation"
    // InternalLegoLang.g:704:1: entryRuleXGPSOperation : ruleXGPSOperation EOF ;
    public final void entryRuleXGPSOperation() throws RecognitionException {
        try {
            // InternalLegoLang.g:705:1: ( ruleXGPSOperation EOF )
            // InternalLegoLang.g:706:1: ruleXGPSOperation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXGPSOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleXGPSOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXGPSOperationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleXGPSOperation"


    // $ANTLR start "ruleXGPSOperation"
    // InternalLegoLang.g:713:1: ruleXGPSOperation : ( ( rule__XGPSOperation__Group__0 ) ) ;
    public final void ruleXGPSOperation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:717:2: ( ( ( rule__XGPSOperation__Group__0 ) ) )
            // InternalLegoLang.g:718:2: ( ( rule__XGPSOperation__Group__0 ) )
            {
            // InternalLegoLang.g:718:2: ( ( rule__XGPSOperation__Group__0 ) )
            // InternalLegoLang.g:719:3: ( rule__XGPSOperation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXGPSOperationAccess().getGroup()); 
            }
            // InternalLegoLang.g:720:3: ( rule__XGPSOperation__Group__0 )
            // InternalLegoLang.g:720:4: rule__XGPSOperation__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__XGPSOperation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXGPSOperationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXGPSOperation"


    // $ANTLR start "entryRuleYGPSOperation"
    // InternalLegoLang.g:729:1: entryRuleYGPSOperation : ruleYGPSOperation EOF ;
    public final void entryRuleYGPSOperation() throws RecognitionException {
        try {
            // InternalLegoLang.g:730:1: ( ruleYGPSOperation EOF )
            // InternalLegoLang.g:731:1: ruleYGPSOperation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getYGPSOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleYGPSOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getYGPSOperationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleYGPSOperation"


    // $ANTLR start "ruleYGPSOperation"
    // InternalLegoLang.g:738:1: ruleYGPSOperation : ( ( rule__YGPSOperation__Group__0 ) ) ;
    public final void ruleYGPSOperation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:742:2: ( ( ( rule__YGPSOperation__Group__0 ) ) )
            // InternalLegoLang.g:743:2: ( ( rule__YGPSOperation__Group__0 ) )
            {
            // InternalLegoLang.g:743:2: ( ( rule__YGPSOperation__Group__0 ) )
            // InternalLegoLang.g:744:3: ( rule__YGPSOperation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getYGPSOperationAccess().getGroup()); 
            }
            // InternalLegoLang.g:745:3: ( rule__YGPSOperation__Group__0 )
            // InternalLegoLang.g:745:4: rule__YGPSOperation__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__YGPSOperation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getYGPSOperationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleYGPSOperation"


    // $ANTLR start "entryRuleAngleOperation"
    // InternalLegoLang.g:754:1: entryRuleAngleOperation : ruleAngleOperation EOF ;
    public final void entryRuleAngleOperation() throws RecognitionException {
        try {
            // InternalLegoLang.g:755:1: ( ruleAngleOperation EOF )
            // InternalLegoLang.g:756:1: ruleAngleOperation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAngleOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAngleOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAngleOperationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAngleOperation"


    // $ANTLR start "ruleAngleOperation"
    // InternalLegoLang.g:763:1: ruleAngleOperation : ( ( rule__AngleOperation__Group__0 ) ) ;
    public final void ruleAngleOperation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:767:2: ( ( ( rule__AngleOperation__Group__0 ) ) )
            // InternalLegoLang.g:768:2: ( ( rule__AngleOperation__Group__0 ) )
            {
            // InternalLegoLang.g:768:2: ( ( rule__AngleOperation__Group__0 ) )
            // InternalLegoLang.g:769:3: ( rule__AngleOperation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAngleOperationAccess().getGroup()); 
            }
            // InternalLegoLang.g:770:3: ( rule__AngleOperation__Group__0 )
            // InternalLegoLang.g:770:4: rule__AngleOperation__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__AngleOperation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAngleOperationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAngleOperation"


    // $ANTLR start "entryRuleDistanceOperation"
    // InternalLegoLang.g:779:1: entryRuleDistanceOperation : ruleDistanceOperation EOF ;
    public final void entryRuleDistanceOperation() throws RecognitionException {
        try {
            // InternalLegoLang.g:780:1: ( ruleDistanceOperation EOF )
            // InternalLegoLang.g:781:1: ruleDistanceOperation EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDistanceOperationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDistanceOperation();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDistanceOperationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDistanceOperation"


    // $ANTLR start "ruleDistanceOperation"
    // InternalLegoLang.g:788:1: ruleDistanceOperation : ( ( rule__DistanceOperation__Group__0 ) ) ;
    public final void ruleDistanceOperation() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:792:2: ( ( ( rule__DistanceOperation__Group__0 ) ) )
            // InternalLegoLang.g:793:2: ( ( rule__DistanceOperation__Group__0 ) )
            {
            // InternalLegoLang.g:793:2: ( ( rule__DistanceOperation__Group__0 ) )
            // InternalLegoLang.g:794:3: ( rule__DistanceOperation__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDistanceOperationAccess().getGroup()); 
            }
            // InternalLegoLang.g:795:3: ( rule__DistanceOperation__Group__0 )
            // InternalLegoLang.g:795:4: rule__DistanceOperation__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DistanceOperation__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDistanceOperationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDistanceOperation"


    // $ANTLR start "entryRuleBooleanExpression"
    // InternalLegoLang.g:804:1: entryRuleBooleanExpression : ruleBooleanExpression EOF ;
    public final void entryRuleBooleanExpression() throws RecognitionException {
        try {
            // InternalLegoLang.g:805:1: ( ruleBooleanExpression EOF )
            // InternalLegoLang.g:806:1: ruleBooleanExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBooleanExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBooleanExpression"


    // $ANTLR start "ruleBooleanExpression"
    // InternalLegoLang.g:813:1: ruleBooleanExpression : ( ( rule__BooleanExpression__Alternatives ) ) ;
    public final void ruleBooleanExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:817:2: ( ( ( rule__BooleanExpression__Alternatives ) ) )
            // InternalLegoLang.g:818:2: ( ( rule__BooleanExpression__Alternatives ) )
            {
            // InternalLegoLang.g:818:2: ( ( rule__BooleanExpression__Alternatives ) )
            // InternalLegoLang.g:819:3: ( rule__BooleanExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBooleanExpressionAccess().getAlternatives()); 
            }
            // InternalLegoLang.g:820:3: ( rule__BooleanExpression__Alternatives )
            // InternalLegoLang.g:820:4: rule__BooleanExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__BooleanExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBooleanExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBooleanExpression"


    // $ANTLR start "entryRuleAnd"
    // InternalLegoLang.g:829:1: entryRuleAnd : ruleAnd EOF ;
    public final void entryRuleAnd() throws RecognitionException {
        try {
            // InternalLegoLang.g:830:1: ( ruleAnd EOF )
            // InternalLegoLang.g:831:1: ruleAnd EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAnd();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAnd"


    // $ANTLR start "ruleAnd"
    // InternalLegoLang.g:838:1: ruleAnd : ( ( rule__And__Group__0 ) ) ;
    public final void ruleAnd() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:842:2: ( ( ( rule__And__Group__0 ) ) )
            // InternalLegoLang.g:843:2: ( ( rule__And__Group__0 ) )
            {
            // InternalLegoLang.g:843:2: ( ( rule__And__Group__0 ) )
            // InternalLegoLang.g:844:3: ( rule__And__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getGroup()); 
            }
            // InternalLegoLang.g:845:3: ( rule__And__Group__0 )
            // InternalLegoLang.g:845:4: rule__And__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__And__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAnd"


    // $ANTLR start "entryRuleOr"
    // InternalLegoLang.g:854:1: entryRuleOr : ruleOr EOF ;
    public final void entryRuleOr() throws RecognitionException {
        try {
            // InternalLegoLang.g:855:1: ( ruleOr EOF )
            // InternalLegoLang.g:856:1: ruleOr EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleOr();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleOr"


    // $ANTLR start "ruleOr"
    // InternalLegoLang.g:863:1: ruleOr : ( ( rule__Or__Group__0 ) ) ;
    public final void ruleOr() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:867:2: ( ( ( rule__Or__Group__0 ) ) )
            // InternalLegoLang.g:868:2: ( ( rule__Or__Group__0 ) )
            {
            // InternalLegoLang.g:868:2: ( ( rule__Or__Group__0 ) )
            // InternalLegoLang.g:869:3: ( rule__Or__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getGroup()); 
            }
            // InternalLegoLang.g:870:3: ( rule__Or__Group__0 )
            // InternalLegoLang.g:870:4: rule__Or__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Or__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOr"


    // $ANTLR start "entryRuleConditionEtat"
    // InternalLegoLang.g:879:1: entryRuleConditionEtat : ruleConditionEtat EOF ;
    public final void entryRuleConditionEtat() throws RecognitionException {
        try {
            // InternalLegoLang.g:880:1: ( ruleConditionEtat EOF )
            // InternalLegoLang.g:881:1: ruleConditionEtat EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionEtatRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleConditionEtat();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionEtatRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleConditionEtat"


    // $ANTLR start "ruleConditionEtat"
    // InternalLegoLang.g:888:1: ruleConditionEtat : ( ( rule__ConditionEtat__Group__0 ) ) ;
    public final void ruleConditionEtat() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:892:2: ( ( ( rule__ConditionEtat__Group__0 ) ) )
            // InternalLegoLang.g:893:2: ( ( rule__ConditionEtat__Group__0 ) )
            {
            // InternalLegoLang.g:893:2: ( ( rule__ConditionEtat__Group__0 ) )
            // InternalLegoLang.g:894:3: ( rule__ConditionEtat__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionEtatAccess().getGroup()); 
            }
            // InternalLegoLang.g:895:3: ( rule__ConditionEtat__Group__0 )
            // InternalLegoLang.g:895:4: rule__ConditionEtat__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ConditionEtat__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionEtatAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleConditionEtat"


    // $ANTLR start "entryRuleEString"
    // InternalLegoLang.g:904:1: entryRuleEString : ruleEString EOF ;
    public final void entryRuleEString() throws RecognitionException {
        try {
            // InternalLegoLang.g:905:1: ( ruleEString EOF )
            // InternalLegoLang.g:906:1: ruleEString EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEStringRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEStringRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEString"


    // $ANTLR start "ruleEString"
    // InternalLegoLang.g:913:1: ruleEString : ( ( rule__EString__Alternatives ) ) ;
    public final void ruleEString() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:917:2: ( ( ( rule__EString__Alternatives ) ) )
            // InternalLegoLang.g:918:2: ( ( rule__EString__Alternatives ) )
            {
            // InternalLegoLang.g:918:2: ( ( rule__EString__Alternatives ) )
            // InternalLegoLang.g:919:3: ( rule__EString__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEStringAccess().getAlternatives()); 
            }
            // InternalLegoLang.g:920:3: ( rule__EString__Alternatives )
            // InternalLegoLang.g:920:4: rule__EString__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EString__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEStringAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEString"


    // $ANTLR start "entryRuleWhileLoop"
    // InternalLegoLang.g:929:1: entryRuleWhileLoop : ruleWhileLoop EOF ;
    public final void entryRuleWhileLoop() throws RecognitionException {
        try {
            // InternalLegoLang.g:930:1: ( ruleWhileLoop EOF )
            // InternalLegoLang.g:931:1: ruleWhileLoop EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileLoopRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleWhileLoop();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileLoopRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleWhileLoop"


    // $ANTLR start "ruleWhileLoop"
    // InternalLegoLang.g:938:1: ruleWhileLoop : ( ( rule__WhileLoop__Group__0 ) ) ;
    public final void ruleWhileLoop() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:942:2: ( ( ( rule__WhileLoop__Group__0 ) ) )
            // InternalLegoLang.g:943:2: ( ( rule__WhileLoop__Group__0 ) )
            {
            // InternalLegoLang.g:943:2: ( ( rule__WhileLoop__Group__0 ) )
            // InternalLegoLang.g:944:3: ( rule__WhileLoop__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileLoopAccess().getGroup()); 
            }
            // InternalLegoLang.g:945:3: ( rule__WhileLoop__Group__0 )
            // InternalLegoLang.g:945:4: rule__WhileLoop__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__WhileLoop__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileLoopAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleWhileLoop"


    // $ANTLR start "entryRuleMethodePrint"
    // InternalLegoLang.g:954:1: entryRuleMethodePrint : ruleMethodePrint EOF ;
    public final void entryRuleMethodePrint() throws RecognitionException {
        try {
            // InternalLegoLang.g:955:1: ( ruleMethodePrint EOF )
            // InternalLegoLang.g:956:1: ruleMethodePrint EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodePrintRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleMethodePrint();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodePrintRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMethodePrint"


    // $ANTLR start "ruleMethodePrint"
    // InternalLegoLang.g:963:1: ruleMethodePrint : ( ( rule__MethodePrint__Group__0 ) ) ;
    public final void ruleMethodePrint() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:967:2: ( ( ( rule__MethodePrint__Group__0 ) ) )
            // InternalLegoLang.g:968:2: ( ( rule__MethodePrint__Group__0 ) )
            {
            // InternalLegoLang.g:968:2: ( ( rule__MethodePrint__Group__0 ) )
            // InternalLegoLang.g:969:3: ( rule__MethodePrint__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodePrintAccess().getGroup()); 
            }
            // InternalLegoLang.g:970:3: ( rule__MethodePrint__Group__0 )
            // InternalLegoLang.g:970:4: rule__MethodePrint__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MethodePrint__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodePrintAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMethodePrint"


    // $ANTLR start "entryRuleVariableRef"
    // InternalLegoLang.g:979:1: entryRuleVariableRef : ruleVariableRef EOF ;
    public final void entryRuleVariableRef() throws RecognitionException {
        try {
            // InternalLegoLang.g:980:1: ( ruleVariableRef EOF )
            // InternalLegoLang.g:981:1: ruleVariableRef EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariableRefRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVariableRef();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariableRefRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVariableRef"


    // $ANTLR start "ruleVariableRef"
    // InternalLegoLang.g:988:1: ruleVariableRef : ( ( rule__VariableRef__VariableAssignment ) ) ;
    public final void ruleVariableRef() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:992:2: ( ( ( rule__VariableRef__VariableAssignment ) ) )
            // InternalLegoLang.g:993:2: ( ( rule__VariableRef__VariableAssignment ) )
            {
            // InternalLegoLang.g:993:2: ( ( rule__VariableRef__VariableAssignment ) )
            // InternalLegoLang.g:994:3: ( rule__VariableRef__VariableAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariableRefAccess().getVariableAssignment()); 
            }
            // InternalLegoLang.g:995:3: ( rule__VariableRef__VariableAssignment )
            // InternalLegoLang.g:995:4: rule__VariableRef__VariableAssignment
            {
            pushFollow(FOLLOW_2);
            rule__VariableRef__VariableAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariableRefAccess().getVariableAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVariableRef"


    // $ANTLR start "entryRuleSubstraction"
    // InternalLegoLang.g:1004:1: entryRuleSubstraction : ruleSubstraction EOF ;
    public final void entryRuleSubstraction() throws RecognitionException {
        try {
            // InternalLegoLang.g:1005:1: ( ruleSubstraction EOF )
            // InternalLegoLang.g:1006:1: ruleSubstraction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubstractionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSubstraction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubstractionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSubstraction"


    // $ANTLR start "ruleSubstraction"
    // InternalLegoLang.g:1013:1: ruleSubstraction : ( ( rule__Substraction__Group__0 ) ) ;
    public final void ruleSubstraction() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1017:2: ( ( ( rule__Substraction__Group__0 ) ) )
            // InternalLegoLang.g:1018:2: ( ( rule__Substraction__Group__0 ) )
            {
            // InternalLegoLang.g:1018:2: ( ( rule__Substraction__Group__0 ) )
            // InternalLegoLang.g:1019:3: ( rule__Substraction__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubstractionAccess().getGroup()); 
            }
            // InternalLegoLang.g:1020:3: ( rule__Substraction__Group__0 )
            // InternalLegoLang.g:1020:4: rule__Substraction__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Substraction__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubstractionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubstraction"


    // $ANTLR start "entryRuleAddition"
    // InternalLegoLang.g:1029:1: entryRuleAddition : ruleAddition EOF ;
    public final void entryRuleAddition() throws RecognitionException {
        try {
            // InternalLegoLang.g:1030:1: ( ruleAddition EOF )
            // InternalLegoLang.g:1031:1: ruleAddition EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAddition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAddition"


    // $ANTLR start "ruleAddition"
    // InternalLegoLang.g:1038:1: ruleAddition : ( ( rule__Addition__Group__0 ) ) ;
    public final void ruleAddition() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1042:2: ( ( ( rule__Addition__Group__0 ) ) )
            // InternalLegoLang.g:1043:2: ( ( rule__Addition__Group__0 ) )
            {
            // InternalLegoLang.g:1043:2: ( ( rule__Addition__Group__0 ) )
            // InternalLegoLang.g:1044:3: ( rule__Addition__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditionAccess().getGroup()); 
            }
            // InternalLegoLang.g:1045:3: ( rule__Addition__Group__0 )
            // InternalLegoLang.g:1045:4: rule__Addition__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Addition__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAddition"


    // $ANTLR start "entryRuleMultiplication"
    // InternalLegoLang.g:1054:1: entryRuleMultiplication : ruleMultiplication EOF ;
    public final void entryRuleMultiplication() throws RecognitionException {
        try {
            // InternalLegoLang.g:1055:1: ( ruleMultiplication EOF )
            // InternalLegoLang.g:1056:1: ruleMultiplication EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleMultiplication();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMultiplication"


    // $ANTLR start "ruleMultiplication"
    // InternalLegoLang.g:1063:1: ruleMultiplication : ( ( rule__Multiplication__Group__0 ) ) ;
    public final void ruleMultiplication() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1067:2: ( ( ( rule__Multiplication__Group__0 ) ) )
            // InternalLegoLang.g:1068:2: ( ( rule__Multiplication__Group__0 ) )
            {
            // InternalLegoLang.g:1068:2: ( ( rule__Multiplication__Group__0 ) )
            // InternalLegoLang.g:1069:3: ( rule__Multiplication__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicationAccess().getGroup()); 
            }
            // InternalLegoLang.g:1070:3: ( rule__Multiplication__Group__0 )
            // InternalLegoLang.g:1070:4: rule__Multiplication__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Multiplication__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMultiplication"


    // $ANTLR start "entryRuleDivision"
    // InternalLegoLang.g:1079:1: entryRuleDivision : ruleDivision EOF ;
    public final void entryRuleDivision() throws RecognitionException {
        try {
            // InternalLegoLang.g:1080:1: ( ruleDivision EOF )
            // InternalLegoLang.g:1081:1: ruleDivision EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDivisionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDivision();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDivisionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDivision"


    // $ANTLR start "ruleDivision"
    // InternalLegoLang.g:1088:1: ruleDivision : ( ( rule__Division__Group__0 ) ) ;
    public final void ruleDivision() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1092:2: ( ( ( rule__Division__Group__0 ) ) )
            // InternalLegoLang.g:1093:2: ( ( rule__Division__Group__0 ) )
            {
            // InternalLegoLang.g:1093:2: ( ( rule__Division__Group__0 ) )
            // InternalLegoLang.g:1094:3: ( rule__Division__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDivisionAccess().getGroup()); 
            }
            // InternalLegoLang.g:1095:3: ( rule__Division__Group__0 )
            // InternalLegoLang.g:1095:4: rule__Division__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Division__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDivisionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDivision"


    // $ANTLR start "entryRuleGT"
    // InternalLegoLang.g:1104:1: entryRuleGT : ruleGT EOF ;
    public final void entryRuleGT() throws RecognitionException {
        try {
            // InternalLegoLang.g:1105:1: ( ruleGT EOF )
            // InternalLegoLang.g:1106:1: ruleGT EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleGT();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGT"


    // $ANTLR start "ruleGT"
    // InternalLegoLang.g:1113:1: ruleGT : ( ( rule__GT__Group__0 ) ) ;
    public final void ruleGT() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1117:2: ( ( ( rule__GT__Group__0 ) ) )
            // InternalLegoLang.g:1118:2: ( ( rule__GT__Group__0 ) )
            {
            // InternalLegoLang.g:1118:2: ( ( rule__GT__Group__0 ) )
            // InternalLegoLang.g:1119:3: ( rule__GT__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTAccess().getGroup()); 
            }
            // InternalLegoLang.g:1120:3: ( rule__GT__Group__0 )
            // InternalLegoLang.g:1120:4: rule__GT__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__GT__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGT"


    // $ANTLR start "entryRuleLT"
    // InternalLegoLang.g:1129:1: entryRuleLT : ruleLT EOF ;
    public final void entryRuleLT() throws RecognitionException {
        try {
            // InternalLegoLang.g:1130:1: ( ruleLT EOF )
            // InternalLegoLang.g:1131:1: ruleLT EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLT();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLT"


    // $ANTLR start "ruleLT"
    // InternalLegoLang.g:1138:1: ruleLT : ( ( rule__LT__Group__0 ) ) ;
    public final void ruleLT() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1142:2: ( ( ( rule__LT__Group__0 ) ) )
            // InternalLegoLang.g:1143:2: ( ( rule__LT__Group__0 ) )
            {
            // InternalLegoLang.g:1143:2: ( ( rule__LT__Group__0 ) )
            // InternalLegoLang.g:1144:3: ( rule__LT__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTAccess().getGroup()); 
            }
            // InternalLegoLang.g:1145:3: ( rule__LT__Group__0 )
            // InternalLegoLang.g:1145:4: rule__LT__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LT__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLT"


    // $ANTLR start "entryRuleEqual"
    // InternalLegoLang.g:1154:1: entryRuleEqual : ruleEqual EOF ;
    public final void entryRuleEqual() throws RecognitionException {
        try {
            // InternalLegoLang.g:1155:1: ( ruleEqual EOF )
            // InternalLegoLang.g:1156:1: ruleEqual EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleEqual();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEqual"


    // $ANTLR start "ruleEqual"
    // InternalLegoLang.g:1163:1: ruleEqual : ( ( rule__Equal__Group__0 ) ) ;
    public final void ruleEqual() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1167:2: ( ( ( rule__Equal__Group__0 ) ) )
            // InternalLegoLang.g:1168:2: ( ( rule__Equal__Group__0 ) )
            {
            // InternalLegoLang.g:1168:2: ( ( rule__Equal__Group__0 ) )
            // InternalLegoLang.g:1169:3: ( rule__Equal__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualAccess().getGroup()); 
            }
            // InternalLegoLang.g:1170:3: ( rule__Equal__Group__0 )
            // InternalLegoLang.g:1170:4: rule__Equal__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Equal__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEqual"


    // $ANTLR start "entryRuleDifferent"
    // InternalLegoLang.g:1179:1: entryRuleDifferent : ruleDifferent EOF ;
    public final void entryRuleDifferent() throws RecognitionException {
        try {
            // InternalLegoLang.g:1180:1: ( ruleDifferent EOF )
            // InternalLegoLang.g:1181:1: ruleDifferent EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDifferentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDifferent();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDifferentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDifferent"


    // $ANTLR start "ruleDifferent"
    // InternalLegoLang.g:1188:1: ruleDifferent : ( ( rule__Different__Group__0 ) ) ;
    public final void ruleDifferent() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1192:2: ( ( ( rule__Different__Group__0 ) ) )
            // InternalLegoLang.g:1193:2: ( ( rule__Different__Group__0 ) )
            {
            // InternalLegoLang.g:1193:2: ( ( rule__Different__Group__0 ) )
            // InternalLegoLang.g:1194:3: ( rule__Different__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDifferentAccess().getGroup()); 
            }
            // InternalLegoLang.g:1195:3: ( rule__Different__Group__0 )
            // InternalLegoLang.g:1195:4: rule__Different__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Different__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDifferentAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDifferent"


    // $ANTLR start "entryRuleLTorEqual"
    // InternalLegoLang.g:1204:1: entryRuleLTorEqual : ruleLTorEqual EOF ;
    public final void entryRuleLTorEqual() throws RecognitionException {
        try {
            // InternalLegoLang.g:1205:1: ( ruleLTorEqual EOF )
            // InternalLegoLang.g:1206:1: ruleLTorEqual EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTorEqualRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleLTorEqual();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTorEqualRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleLTorEqual"


    // $ANTLR start "ruleLTorEqual"
    // InternalLegoLang.g:1213:1: ruleLTorEqual : ( ( rule__LTorEqual__Group__0 ) ) ;
    public final void ruleLTorEqual() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1217:2: ( ( ( rule__LTorEqual__Group__0 ) ) )
            // InternalLegoLang.g:1218:2: ( ( rule__LTorEqual__Group__0 ) )
            {
            // InternalLegoLang.g:1218:2: ( ( rule__LTorEqual__Group__0 ) )
            // InternalLegoLang.g:1219:3: ( rule__LTorEqual__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTorEqualAccess().getGroup()); 
            }
            // InternalLegoLang.g:1220:3: ( rule__LTorEqual__Group__0 )
            // InternalLegoLang.g:1220:4: rule__LTorEqual__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__LTorEqual__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTorEqualAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleLTorEqual"


    // $ANTLR start "entryRuleGTorEqual"
    // InternalLegoLang.g:1229:1: entryRuleGTorEqual : ruleGTorEqual EOF ;
    public final void entryRuleGTorEqual() throws RecognitionException {
        try {
            // InternalLegoLang.g:1230:1: ( ruleGTorEqual EOF )
            // InternalLegoLang.g:1231:1: ruleGTorEqual EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTorEqualRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleGTorEqual();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTorEqualRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleGTorEqual"


    // $ANTLR start "ruleGTorEqual"
    // InternalLegoLang.g:1238:1: ruleGTorEqual : ( ( rule__GTorEqual__Group__0 ) ) ;
    public final void ruleGTorEqual() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1242:2: ( ( ( rule__GTorEqual__Group__0 ) ) )
            // InternalLegoLang.g:1243:2: ( ( rule__GTorEqual__Group__0 ) )
            {
            // InternalLegoLang.g:1243:2: ( ( rule__GTorEqual__Group__0 ) )
            // InternalLegoLang.g:1244:3: ( rule__GTorEqual__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTorEqualAccess().getGroup()); 
            }
            // InternalLegoLang.g:1245:3: ( rule__GTorEqual__Group__0 )
            // InternalLegoLang.g:1245:4: rule__GTorEqual__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__GTorEqual__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTorEqualAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleGTorEqual"


    // $ANTLR start "entryRuleAssignement"
    // InternalLegoLang.g:1254:1: entryRuleAssignement : ruleAssignement EOF ;
    public final void entryRuleAssignement() throws RecognitionException {
        try {
            // InternalLegoLang.g:1255:1: ( ruleAssignement EOF )
            // InternalLegoLang.g:1256:1: ruleAssignement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleAssignement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleAssignement"


    // $ANTLR start "ruleAssignement"
    // InternalLegoLang.g:1263:1: ruleAssignement : ( ( rule__Assignement__Group__0 ) ) ;
    public final void ruleAssignement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1267:2: ( ( ( rule__Assignement__Group__0 ) ) )
            // InternalLegoLang.g:1268:2: ( ( rule__Assignement__Group__0 ) )
            {
            // InternalLegoLang.g:1268:2: ( ( rule__Assignement__Group__0 ) )
            // InternalLegoLang.g:1269:3: ( rule__Assignement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignementAccess().getGroup()); 
            }
            // InternalLegoLang.g:1270:3: ( rule__Assignement__Group__0 )
            // InternalLegoLang.g:1270:4: rule__Assignement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Assignement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAssignement"


    // $ANTLR start "entryRulePlusEqual"
    // InternalLegoLang.g:1279:1: entryRulePlusEqual : rulePlusEqual EOF ;
    public final void entryRulePlusEqual() throws RecognitionException {
        try {
            // InternalLegoLang.g:1280:1: ( rulePlusEqual EOF )
            // InternalLegoLang.g:1281:1: rulePlusEqual EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusEqualRule()); 
            }
            pushFollow(FOLLOW_1);
            rulePlusEqual();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusEqualRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRulePlusEqual"


    // $ANTLR start "rulePlusEqual"
    // InternalLegoLang.g:1288:1: rulePlusEqual : ( ( rule__PlusEqual__Group__0 ) ) ;
    public final void rulePlusEqual() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1292:2: ( ( ( rule__PlusEqual__Group__0 ) ) )
            // InternalLegoLang.g:1293:2: ( ( rule__PlusEqual__Group__0 ) )
            {
            // InternalLegoLang.g:1293:2: ( ( rule__PlusEqual__Group__0 ) )
            // InternalLegoLang.g:1294:3: ( rule__PlusEqual__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusEqualAccess().getGroup()); 
            }
            // InternalLegoLang.g:1295:3: ( rule__PlusEqual__Group__0 )
            // InternalLegoLang.g:1295:4: rule__PlusEqual__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__PlusEqual__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusEqualAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePlusEqual"


    // $ANTLR start "entryRuleMinusEqual"
    // InternalLegoLang.g:1304:1: entryRuleMinusEqual : ruleMinusEqual EOF ;
    public final void entryRuleMinusEqual() throws RecognitionException {
        try {
            // InternalLegoLang.g:1305:1: ( ruleMinusEqual EOF )
            // InternalLegoLang.g:1306:1: ruleMinusEqual EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMinusEqualRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleMinusEqual();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMinusEqualRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMinusEqual"


    // $ANTLR start "ruleMinusEqual"
    // InternalLegoLang.g:1313:1: ruleMinusEqual : ( ( rule__MinusEqual__Group__0 ) ) ;
    public final void ruleMinusEqual() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1317:2: ( ( ( rule__MinusEqual__Group__0 ) ) )
            // InternalLegoLang.g:1318:2: ( ( rule__MinusEqual__Group__0 ) )
            {
            // InternalLegoLang.g:1318:2: ( ( rule__MinusEqual__Group__0 ) )
            // InternalLegoLang.g:1319:3: ( rule__MinusEqual__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMinusEqualAccess().getGroup()); 
            }
            // InternalLegoLang.g:1320:3: ( rule__MinusEqual__Group__0 )
            // InternalLegoLang.g:1320:4: rule__MinusEqual__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MinusEqual__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMinusEqualAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMinusEqual"


    // $ANTLR start "entryRuleEBoolean"
    // InternalLegoLang.g:1329:1: entryRuleEBoolean : ruleEBoolean EOF ;
    public final void entryRuleEBoolean() throws RecognitionException {
        try {
            // InternalLegoLang.g:1330:1: ( ruleEBoolean EOF )
            // InternalLegoLang.g:1331:1: ruleEBoolean EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEBooleanRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleEBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEBooleanRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEBoolean"


    // $ANTLR start "ruleEBoolean"
    // InternalLegoLang.g:1338:1: ruleEBoolean : ( ( rule__EBoolean__Alternatives ) ) ;
    public final void ruleEBoolean() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1342:2: ( ( ( rule__EBoolean__Alternatives ) ) )
            // InternalLegoLang.g:1343:2: ( ( rule__EBoolean__Alternatives ) )
            {
            // InternalLegoLang.g:1343:2: ( ( rule__EBoolean__Alternatives ) )
            // InternalLegoLang.g:1344:3: ( rule__EBoolean__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEBooleanAccess().getAlternatives()); 
            }
            // InternalLegoLang.g:1345:3: ( rule__EBoolean__Alternatives )
            // InternalLegoLang.g:1345:4: rule__EBoolean__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EBoolean__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEBooleanAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEBoolean"


    // $ANTLR start "entryRuleUnInteger"
    // InternalLegoLang.g:1354:1: entryRuleUnInteger : ruleUnInteger EOF ;
    public final void entryRuleUnInteger() throws RecognitionException {
        try {
            // InternalLegoLang.g:1355:1: ( ruleUnInteger EOF )
            // InternalLegoLang.g:1356:1: ruleUnInteger EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnIntegerRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnInteger();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnIntegerRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnInteger"


    // $ANTLR start "ruleUnInteger"
    // InternalLegoLang.g:1363:1: ruleUnInteger : ( ( rule__UnInteger__Group__0 ) ) ;
    public final void ruleUnInteger() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1367:2: ( ( ( rule__UnInteger__Group__0 ) ) )
            // InternalLegoLang.g:1368:2: ( ( rule__UnInteger__Group__0 ) )
            {
            // InternalLegoLang.g:1368:2: ( ( rule__UnInteger__Group__0 ) )
            // InternalLegoLang.g:1369:3: ( rule__UnInteger__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnIntegerAccess().getGroup()); 
            }
            // InternalLegoLang.g:1370:3: ( rule__UnInteger__Group__0 )
            // InternalLegoLang.g:1370:4: rule__UnInteger__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnInteger__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnIntegerAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnInteger"


    // $ANTLR start "entryRuleUnDouble"
    // InternalLegoLang.g:1379:1: entryRuleUnDouble : ruleUnDouble EOF ;
    public final void entryRuleUnDouble() throws RecognitionException {
        try {
            // InternalLegoLang.g:1380:1: ( ruleUnDouble EOF )
            // InternalLegoLang.g:1381:1: ruleUnDouble EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnDouble();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnDouble"


    // $ANTLR start "ruleUnDouble"
    // InternalLegoLang.g:1388:1: ruleUnDouble : ( ( rule__UnDouble__Group__0 ) ) ;
    public final void ruleUnDouble() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1392:2: ( ( ( rule__UnDouble__Group__0 ) ) )
            // InternalLegoLang.g:1393:2: ( ( rule__UnDouble__Group__0 ) )
            {
            // InternalLegoLang.g:1393:2: ( ( rule__UnDouble__Group__0 ) )
            // InternalLegoLang.g:1394:3: ( rule__UnDouble__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getGroup()); 
            }
            // InternalLegoLang.g:1395:3: ( rule__UnDouble__Group__0 )
            // InternalLegoLang.g:1395:4: rule__UnDouble__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnDouble__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnDouble"


    // $ANTLR start "entryRuleUnBoolean"
    // InternalLegoLang.g:1404:1: entryRuleUnBoolean : ruleUnBoolean EOF ;
    public final void entryRuleUnBoolean() throws RecognitionException {
        try {
            // InternalLegoLang.g:1405:1: ( ruleUnBoolean EOF )
            // InternalLegoLang.g:1406:1: ruleUnBoolean EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnBooleanRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnBooleanRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnBoolean"


    // $ANTLR start "ruleUnBoolean"
    // InternalLegoLang.g:1413:1: ruleUnBoolean : ( ( rule__UnBoolean__Group__0 ) ) ;
    public final void ruleUnBoolean() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1417:2: ( ( ( rule__UnBoolean__Group__0 ) ) )
            // InternalLegoLang.g:1418:2: ( ( rule__UnBoolean__Group__0 ) )
            {
            // InternalLegoLang.g:1418:2: ( ( rule__UnBoolean__Group__0 ) )
            // InternalLegoLang.g:1419:3: ( rule__UnBoolean__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnBooleanAccess().getGroup()); 
            }
            // InternalLegoLang.g:1420:3: ( rule__UnBoolean__Group__0 )
            // InternalLegoLang.g:1420:4: rule__UnBoolean__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnBoolean__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnBooleanAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnBoolean"


    // $ANTLR start "entryRuleUnString"
    // InternalLegoLang.g:1429:1: entryRuleUnString : ruleUnString EOF ;
    public final void entryRuleUnString() throws RecognitionException {
        try {
            // InternalLegoLang.g:1430:1: ( ruleUnString EOF )
            // InternalLegoLang.g:1431:1: ruleUnString EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnStringRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnStringRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnString"


    // $ANTLR start "ruleUnString"
    // InternalLegoLang.g:1438:1: ruleUnString : ( ( rule__UnString__Group__0 ) ) ;
    public final void ruleUnString() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1442:2: ( ( ( rule__UnString__Group__0 ) ) )
            // InternalLegoLang.g:1443:2: ( ( rule__UnString__Group__0 ) )
            {
            // InternalLegoLang.g:1443:2: ( ( rule__UnString__Group__0 ) )
            // InternalLegoLang.g:1444:3: ( rule__UnString__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnStringAccess().getGroup()); 
            }
            // InternalLegoLang.g:1445:3: ( rule__UnString__Group__0 )
            // InternalLegoLang.g:1445:4: rule__UnString__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnString__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnStringAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnString"


    // $ANTLR start "entryRuleUnColor"
    // InternalLegoLang.g:1454:1: entryRuleUnColor : ruleUnColor EOF ;
    public final void entryRuleUnColor() throws RecognitionException {
        try {
            // InternalLegoLang.g:1455:1: ( ruleUnColor EOF )
            // InternalLegoLang.g:1456:1: ruleUnColor EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnColorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleUnColor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnColorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleUnColor"


    // $ANTLR start "ruleUnColor"
    // InternalLegoLang.g:1463:1: ruleUnColor : ( ( rule__UnColor__Group__0 ) ) ;
    public final void ruleUnColor() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1467:2: ( ( ( rule__UnColor__Group__0 ) ) )
            // InternalLegoLang.g:1468:2: ( ( rule__UnColor__Group__0 ) )
            {
            // InternalLegoLang.g:1468:2: ( ( rule__UnColor__Group__0 ) )
            // InternalLegoLang.g:1469:3: ( rule__UnColor__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnColorAccess().getGroup()); 
            }
            // InternalLegoLang.g:1470:3: ( rule__UnColor__Group__0 )
            // InternalLegoLang.g:1470:4: rule__UnColor__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__UnColor__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnColorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnColor"


    // $ANTLR start "entryRuleTheDouble"
    // InternalLegoLang.g:1479:1: entryRuleTheDouble : ruleTheDouble EOF ;
    public final void entryRuleTheDouble() throws RecognitionException {
        try {
            // InternalLegoLang.g:1480:1: ( ruleTheDouble EOF )
            // InternalLegoLang.g:1481:1: ruleTheDouble EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheDoubleRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTheDouble();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheDoubleRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTheDouble"


    // $ANTLR start "ruleTheDouble"
    // InternalLegoLang.g:1488:1: ruleTheDouble : ( ( rule__TheDouble__Group__0 ) ) ;
    public final void ruleTheDouble() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1492:2: ( ( ( rule__TheDouble__Group__0 ) ) )
            // InternalLegoLang.g:1493:2: ( ( rule__TheDouble__Group__0 ) )
            {
            // InternalLegoLang.g:1493:2: ( ( rule__TheDouble__Group__0 ) )
            // InternalLegoLang.g:1494:3: ( rule__TheDouble__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheDoubleAccess().getGroup()); 
            }
            // InternalLegoLang.g:1495:3: ( rule__TheDouble__Group__0 )
            // InternalLegoLang.g:1495:4: rule__TheDouble__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TheDouble__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheDoubleAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTheDouble"


    // $ANTLR start "entryRuleTheInt"
    // InternalLegoLang.g:1504:1: entryRuleTheInt : ruleTheInt EOF ;
    public final void entryRuleTheInt() throws RecognitionException {
        try {
            // InternalLegoLang.g:1505:1: ( ruleTheInt EOF )
            // InternalLegoLang.g:1506:1: ruleTheInt EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheIntRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTheInt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheIntRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTheInt"


    // $ANTLR start "ruleTheInt"
    // InternalLegoLang.g:1513:1: ruleTheInt : ( ( rule__TheInt__Group__0 ) ) ;
    public final void ruleTheInt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1517:2: ( ( ( rule__TheInt__Group__0 ) ) )
            // InternalLegoLang.g:1518:2: ( ( rule__TheInt__Group__0 ) )
            {
            // InternalLegoLang.g:1518:2: ( ( rule__TheInt__Group__0 ) )
            // InternalLegoLang.g:1519:3: ( rule__TheInt__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheIntAccess().getGroup()); 
            }
            // InternalLegoLang.g:1520:3: ( rule__TheInt__Group__0 )
            // InternalLegoLang.g:1520:4: rule__TheInt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TheInt__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheIntAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTheInt"


    // $ANTLR start "entryRuleTheBoolean"
    // InternalLegoLang.g:1529:1: entryRuleTheBoolean : ruleTheBoolean EOF ;
    public final void entryRuleTheBoolean() throws RecognitionException {
        try {
            // InternalLegoLang.g:1530:1: ( ruleTheBoolean EOF )
            // InternalLegoLang.g:1531:1: ruleTheBoolean EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheBooleanRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTheBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheBooleanRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTheBoolean"


    // $ANTLR start "ruleTheBoolean"
    // InternalLegoLang.g:1538:1: ruleTheBoolean : ( ( rule__TheBoolean__Group__0 ) ) ;
    public final void ruleTheBoolean() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1542:2: ( ( ( rule__TheBoolean__Group__0 ) ) )
            // InternalLegoLang.g:1543:2: ( ( rule__TheBoolean__Group__0 ) )
            {
            // InternalLegoLang.g:1543:2: ( ( rule__TheBoolean__Group__0 ) )
            // InternalLegoLang.g:1544:3: ( rule__TheBoolean__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheBooleanAccess().getGroup()); 
            }
            // InternalLegoLang.g:1545:3: ( rule__TheBoolean__Group__0 )
            // InternalLegoLang.g:1545:4: rule__TheBoolean__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TheBoolean__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheBooleanAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTheBoolean"


    // $ANTLR start "entryRuleTheString"
    // InternalLegoLang.g:1554:1: entryRuleTheString : ruleTheString EOF ;
    public final void entryRuleTheString() throws RecognitionException {
        try {
            // InternalLegoLang.g:1555:1: ( ruleTheString EOF )
            // InternalLegoLang.g:1556:1: ruleTheString EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheStringRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTheString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheStringRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTheString"


    // $ANTLR start "ruleTheString"
    // InternalLegoLang.g:1563:1: ruleTheString : ( ( rule__TheString__Group__0 ) ) ;
    public final void ruleTheString() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1567:2: ( ( ( rule__TheString__Group__0 ) ) )
            // InternalLegoLang.g:1568:2: ( ( rule__TheString__Group__0 ) )
            {
            // InternalLegoLang.g:1568:2: ( ( rule__TheString__Group__0 ) )
            // InternalLegoLang.g:1569:3: ( rule__TheString__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheStringAccess().getGroup()); 
            }
            // InternalLegoLang.g:1570:3: ( rule__TheString__Group__0 )
            // InternalLegoLang.g:1570:4: rule__TheString__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TheString__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheStringAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTheString"


    // $ANTLR start "entryRuleTheColor"
    // InternalLegoLang.g:1579:1: entryRuleTheColor : ruleTheColor EOF ;
    public final void entryRuleTheColor() throws RecognitionException {
        try {
            // InternalLegoLang.g:1580:1: ( ruleTheColor EOF )
            // InternalLegoLang.g:1581:1: ruleTheColor EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheColorRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTheColor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheColorRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTheColor"


    // $ANTLR start "ruleTheColor"
    // InternalLegoLang.g:1588:1: ruleTheColor : ( ( rule__TheColor__Group__0 ) ) ;
    public final void ruleTheColor() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1592:2: ( ( ( rule__TheColor__Group__0 ) ) )
            // InternalLegoLang.g:1593:2: ( ( rule__TheColor__Group__0 ) )
            {
            // InternalLegoLang.g:1593:2: ( ( rule__TheColor__Group__0 ) )
            // InternalLegoLang.g:1594:3: ( rule__TheColor__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheColorAccess().getGroup()); 
            }
            // InternalLegoLang.g:1595:3: ( rule__TheColor__Group__0 )
            // InternalLegoLang.g:1595:4: rule__TheColor__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TheColor__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheColorAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTheColor"


    // $ANTLR start "entryRuleFQN"
    // InternalLegoLang.g:1604:1: entryRuleFQN : ruleFQN EOF ;
    public final void entryRuleFQN() throws RecognitionException {
        try {
            // InternalLegoLang.g:1605:1: ( ruleFQN EOF )
            // InternalLegoLang.g:1606:1: ruleFQN EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFQNRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFQN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFQNRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFQN"


    // $ANTLR start "ruleFQN"
    // InternalLegoLang.g:1613:1: ruleFQN : ( ( rule__FQN__Group__0 ) ) ;
    public final void ruleFQN() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1617:2: ( ( ( rule__FQN__Group__0 ) ) )
            // InternalLegoLang.g:1618:2: ( ( rule__FQN__Group__0 ) )
            {
            // InternalLegoLang.g:1618:2: ( ( rule__FQN__Group__0 ) )
            // InternalLegoLang.g:1619:3: ( rule__FQN__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFQNAccess().getGroup()); 
            }
            // InternalLegoLang.g:1620:3: ( rule__FQN__Group__0 )
            // InternalLegoLang.g:1620:4: rule__FQN__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FQN__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFQNAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFQN"


    // $ANTLR start "entryRuleEInt"
    // InternalLegoLang.g:1629:1: entryRuleEInt : ruleEInt EOF ;
    public final void entryRuleEInt() throws RecognitionException {
        try {
            // InternalLegoLang.g:1630:1: ( ruleEInt EOF )
            // InternalLegoLang.g:1631:1: ruleEInt EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEIntRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleEInt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEIntRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleEInt"


    // $ANTLR start "ruleEInt"
    // InternalLegoLang.g:1638:1: ruleEInt : ( ( rule__EInt__Group__0 ) ) ;
    public final void ruleEInt() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1642:2: ( ( ( rule__EInt__Group__0 ) ) )
            // InternalLegoLang.g:1643:2: ( ( rule__EInt__Group__0 ) )
            {
            // InternalLegoLang.g:1643:2: ( ( rule__EInt__Group__0 ) )
            // InternalLegoLang.g:1644:3: ( rule__EInt__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEIntAccess().getGroup()); 
            }
            // InternalLegoLang.g:1645:3: ( rule__EInt__Group__0 )
            // InternalLegoLang.g:1645:4: rule__EInt__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__EInt__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEIntAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEInt"


    // $ANTLR start "ruleColors"
    // InternalLegoLang.g:1654:1: ruleColors : ( ( rule__Colors__Alternatives ) ) ;
    public final void ruleColors() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1658:1: ( ( ( rule__Colors__Alternatives ) ) )
            // InternalLegoLang.g:1659:2: ( ( rule__Colors__Alternatives ) )
            {
            // InternalLegoLang.g:1659:2: ( ( rule__Colors__Alternatives ) )
            // InternalLegoLang.g:1660:3: ( rule__Colors__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorsAccess().getAlternatives()); 
            }
            // InternalLegoLang.g:1661:3: ( rule__Colors__Alternatives )
            // InternalLegoLang.g:1661:4: rule__Colors__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__Colors__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleColors"


    // $ANTLR start "rule__Statement__Alternatives"
    // InternalLegoLang.g:1669:1: rule__Statement__Alternatives : ( ( ruleWhileLoop ) | ( ruleVariable ) | ( ruleExpression ) | ( ruleConditionEtat ) | ( ruleMethodePrint ) | ( ruleCar ) | ( ruleSensor ) | ( ruleEngine ) );
    public final void rule__Statement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1673:1: ( ( ruleWhileLoop ) | ( ruleVariable ) | ( ruleExpression ) | ( ruleConditionEtat ) | ( ruleMethodePrint ) | ( ruleCar ) | ( ruleSensor ) | ( ruleEngine ) )
            int alt1=8;
            switch ( input.LA(1) ) {
            case 50:
                {
                alt1=1;
                }
                break;
            case 39:
            case 65:
            case 66:
            case 68:
            case 69:
            case 70:
                {
                alt1=2;
                }
                break;
            case RULE_ID:
            case RULE_INT:
            case RULE_STRING:
            case 11:
            case 12:
            case 13:
            case 14:
            case 29:
            case 31:
            case 34:
            case 38:
            case 53:
                {
                alt1=3;
                }
                break;
            case 48:
                {
                alt1=4;
                }
                break;
            case 51:
                {
                alt1=5;
                }
                break;
            case 28:
                {
                alt1=6;
                }
                break;
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
                {
                alt1=7;
                }
                break;
            case 19:
            case 21:
            case 22:
                {
                alt1=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;
            }

            switch (alt1) {
                case 1 :
                    // InternalLegoLang.g:1674:2: ( ruleWhileLoop )
                    {
                    // InternalLegoLang.g:1674:2: ( ruleWhileLoop )
                    // InternalLegoLang.g:1675:3: ruleWhileLoop
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getWhileLoopParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleWhileLoop();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getWhileLoopParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLegoLang.g:1680:2: ( ruleVariable )
                    {
                    // InternalLegoLang.g:1680:2: ( ruleVariable )
                    // InternalLegoLang.g:1681:3: ruleVariable
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getVariableParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleVariable();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getVariableParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLegoLang.g:1686:2: ( ruleExpression )
                    {
                    // InternalLegoLang.g:1686:2: ( ruleExpression )
                    // InternalLegoLang.g:1687:3: ruleExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getExpressionParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getExpressionParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalLegoLang.g:1692:2: ( ruleConditionEtat )
                    {
                    // InternalLegoLang.g:1692:2: ( ruleConditionEtat )
                    // InternalLegoLang.g:1693:3: ruleConditionEtat
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getConditionEtatParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleConditionEtat();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getConditionEtatParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalLegoLang.g:1698:2: ( ruleMethodePrint )
                    {
                    // InternalLegoLang.g:1698:2: ( ruleMethodePrint )
                    // InternalLegoLang.g:1699:3: ruleMethodePrint
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getMethodePrintParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleMethodePrint();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getMethodePrintParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalLegoLang.g:1704:2: ( ruleCar )
                    {
                    // InternalLegoLang.g:1704:2: ( ruleCar )
                    // InternalLegoLang.g:1705:3: ruleCar
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getCarParserRuleCall_5()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleCar();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getCarParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalLegoLang.g:1710:2: ( ruleSensor )
                    {
                    // InternalLegoLang.g:1710:2: ( ruleSensor )
                    // InternalLegoLang.g:1711:3: ruleSensor
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getSensorParserRuleCall_6()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSensor();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getSensorParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalLegoLang.g:1716:2: ( ruleEngine )
                    {
                    // InternalLegoLang.g:1716:2: ( ruleEngine )
                    // InternalLegoLang.g:1717:3: ruleEngine
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getStatementAccess().getEngineParserRuleCall_7()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleEngine();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getStatementAccess().getEngineParserRuleCall_7()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Statement__Alternatives"


    // $ANTLR start "rule__Expression__Alternatives"
    // InternalLegoLang.g:1726:1: rule__Expression__Alternatives : ( ( ruleVariableRef ) | ( ruleBinaryOperation ) | ( ruleTheString ) | ( ruleTheColor ) | ( ruleTheDouble ) | ( ruleTheInt ) | ( ruleTheBoolean ) | ( ruleEngineOperation ) | ( ruleBreakMotor ) | ( ruleSensorOperation ) | ( ruleBooleanExpression ) );
    public final void rule__Expression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1730:1: ( ( ruleVariableRef ) | ( ruleBinaryOperation ) | ( ruleTheString ) | ( ruleTheColor ) | ( ruleTheDouble ) | ( ruleTheInt ) | ( ruleTheBoolean ) | ( ruleEngineOperation ) | ( ruleBreakMotor ) | ( ruleSensorOperation ) | ( ruleBooleanExpression ) )
            int alt2=11;
            alt2 = dfa2.predict(input);
            switch (alt2) {
                case 1 :
                    // InternalLegoLang.g:1731:2: ( ruleVariableRef )
                    {
                    // InternalLegoLang.g:1731:2: ( ruleVariableRef )
                    // InternalLegoLang.g:1732:3: ruleVariableRef
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getVariableRefParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleVariableRef();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getVariableRefParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLegoLang.g:1737:2: ( ruleBinaryOperation )
                    {
                    // InternalLegoLang.g:1737:2: ( ruleBinaryOperation )
                    // InternalLegoLang.g:1738:3: ruleBinaryOperation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getBinaryOperationParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleBinaryOperation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getBinaryOperationParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLegoLang.g:1743:2: ( ruleTheString )
                    {
                    // InternalLegoLang.g:1743:2: ( ruleTheString )
                    // InternalLegoLang.g:1744:3: ruleTheString
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getTheStringParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleTheString();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getTheStringParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalLegoLang.g:1749:2: ( ruleTheColor )
                    {
                    // InternalLegoLang.g:1749:2: ( ruleTheColor )
                    // InternalLegoLang.g:1750:3: ruleTheColor
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getTheColorParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleTheColor();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getTheColorParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalLegoLang.g:1755:2: ( ruleTheDouble )
                    {
                    // InternalLegoLang.g:1755:2: ( ruleTheDouble )
                    // InternalLegoLang.g:1756:3: ruleTheDouble
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getTheDoubleParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleTheDouble();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getTheDoubleParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalLegoLang.g:1761:2: ( ruleTheInt )
                    {
                    // InternalLegoLang.g:1761:2: ( ruleTheInt )
                    // InternalLegoLang.g:1762:3: ruleTheInt
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getTheIntParserRuleCall_5()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleTheInt();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getTheIntParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalLegoLang.g:1767:2: ( ruleTheBoolean )
                    {
                    // InternalLegoLang.g:1767:2: ( ruleTheBoolean )
                    // InternalLegoLang.g:1768:3: ruleTheBoolean
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getTheBooleanParserRuleCall_6()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleTheBoolean();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getTheBooleanParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalLegoLang.g:1773:2: ( ruleEngineOperation )
                    {
                    // InternalLegoLang.g:1773:2: ( ruleEngineOperation )
                    // InternalLegoLang.g:1774:3: ruleEngineOperation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getEngineOperationParserRuleCall_7()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleEngineOperation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getEngineOperationParserRuleCall_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalLegoLang.g:1779:2: ( ruleBreakMotor )
                    {
                    // InternalLegoLang.g:1779:2: ( ruleBreakMotor )
                    // InternalLegoLang.g:1780:3: ruleBreakMotor
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getBreakMotorParserRuleCall_8()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleBreakMotor();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getBreakMotorParserRuleCall_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalLegoLang.g:1785:2: ( ruleSensorOperation )
                    {
                    // InternalLegoLang.g:1785:2: ( ruleSensorOperation )
                    // InternalLegoLang.g:1786:3: ruleSensorOperation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getSensorOperationParserRuleCall_9()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSensorOperation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getSensorOperationParserRuleCall_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalLegoLang.g:1791:2: ( ruleBooleanExpression )
                    {
                    // InternalLegoLang.g:1791:2: ( ruleBooleanExpression )
                    // InternalLegoLang.g:1792:3: ruleBooleanExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getExpressionAccess().getBooleanExpressionParserRuleCall_10()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleBooleanExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getExpressionAccess().getBooleanExpressionParserRuleCall_10()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Expression__Alternatives"


    // $ANTLR start "rule__BinaryOperation__Alternatives"
    // InternalLegoLang.g:1801:1: rule__BinaryOperation__Alternatives : ( ( ruleSubstraction ) | ( ruleComparaison ) | ( ruleAssignement ) | ( ruleDivision ) | ( ruleMultiplication ) | ( ruleAddition ) | ( ruleMinusEqual ) | ( rulePlusEqual ) );
    public final void rule__BinaryOperation__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1805:1: ( ( ruleSubstraction ) | ( ruleComparaison ) | ( ruleAssignement ) | ( ruleDivision ) | ( ruleMultiplication ) | ( ruleAddition ) | ( ruleMinusEqual ) | ( rulePlusEqual ) )
            int alt3=8;
            alt3 = dfa3.predict(input);
            switch (alt3) {
                case 1 :
                    // InternalLegoLang.g:1806:2: ( ruleSubstraction )
                    {
                    // InternalLegoLang.g:1806:2: ( ruleSubstraction )
                    // InternalLegoLang.g:1807:3: ruleSubstraction
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBinaryOperationAccess().getSubstractionParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSubstraction();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBinaryOperationAccess().getSubstractionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLegoLang.g:1812:2: ( ruleComparaison )
                    {
                    // InternalLegoLang.g:1812:2: ( ruleComparaison )
                    // InternalLegoLang.g:1813:3: ruleComparaison
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBinaryOperationAccess().getComparaisonParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleComparaison();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBinaryOperationAccess().getComparaisonParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLegoLang.g:1818:2: ( ruleAssignement )
                    {
                    // InternalLegoLang.g:1818:2: ( ruleAssignement )
                    // InternalLegoLang.g:1819:3: ruleAssignement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBinaryOperationAccess().getAssignementParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleAssignement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBinaryOperationAccess().getAssignementParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalLegoLang.g:1824:2: ( ruleDivision )
                    {
                    // InternalLegoLang.g:1824:2: ( ruleDivision )
                    // InternalLegoLang.g:1825:3: ruleDivision
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBinaryOperationAccess().getDivisionParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleDivision();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBinaryOperationAccess().getDivisionParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalLegoLang.g:1830:2: ( ruleMultiplication )
                    {
                    // InternalLegoLang.g:1830:2: ( ruleMultiplication )
                    // InternalLegoLang.g:1831:3: ruleMultiplication
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBinaryOperationAccess().getMultiplicationParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleMultiplication();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBinaryOperationAccess().getMultiplicationParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalLegoLang.g:1836:2: ( ruleAddition )
                    {
                    // InternalLegoLang.g:1836:2: ( ruleAddition )
                    // InternalLegoLang.g:1837:3: ruleAddition
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBinaryOperationAccess().getAdditionParserRuleCall_5()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleAddition();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBinaryOperationAccess().getAdditionParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalLegoLang.g:1842:2: ( ruleMinusEqual )
                    {
                    // InternalLegoLang.g:1842:2: ( ruleMinusEqual )
                    // InternalLegoLang.g:1843:3: ruleMinusEqual
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBinaryOperationAccess().getMinusEqualParserRuleCall_6()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleMinusEqual();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBinaryOperationAccess().getMinusEqualParserRuleCall_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalLegoLang.g:1848:2: ( rulePlusEqual )
                    {
                    // InternalLegoLang.g:1848:2: ( rulePlusEqual )
                    // InternalLegoLang.g:1849:3: rulePlusEqual
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBinaryOperationAccess().getPlusEqualParserRuleCall_7()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulePlusEqual();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBinaryOperationAccess().getPlusEqualParserRuleCall_7()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BinaryOperation__Alternatives"


    // $ANTLR start "rule__Variable__Alternatives"
    // InternalLegoLang.g:1858:1: rule__Variable__Alternatives : ( ( ruleUnInteger ) | ( ruleUnString ) | ( ruleUnBoolean ) | ( ruleUnDouble ) | ( ruleUnColor ) );
    public final void rule__Variable__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1862:1: ( ( ruleUnInteger ) | ( ruleUnString ) | ( ruleUnBoolean ) | ( ruleUnDouble ) | ( ruleUnColor ) )
            int alt4=5;
            switch ( input.LA(1) ) {
            case 70:
                {
                switch ( input.LA(2) ) {
                case 66:
                    {
                    alt4=4;
                    }
                    break;
                case 65:
                    {
                    alt4=1;
                    }
                    break;
                case 39:
                    {
                    alt4=5;
                    }
                    break;
                case 68:
                    {
                    alt4=3;
                    }
                    break;
                case 69:
                    {
                    alt4=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 4, 1, input);

                    throw nvae;
                }

                }
                break;
            case 65:
                {
                alt4=1;
                }
                break;
            case 69:
                {
                alt4=2;
                }
                break;
            case 68:
                {
                alt4=3;
                }
                break;
            case 66:
                {
                alt4=4;
                }
                break;
            case 39:
                {
                alt4=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }

            switch (alt4) {
                case 1 :
                    // InternalLegoLang.g:1863:2: ( ruleUnInteger )
                    {
                    // InternalLegoLang.g:1863:2: ( ruleUnInteger )
                    // InternalLegoLang.g:1864:3: ruleUnInteger
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVariableAccess().getUnIntegerParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleUnInteger();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVariableAccess().getUnIntegerParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLegoLang.g:1869:2: ( ruleUnString )
                    {
                    // InternalLegoLang.g:1869:2: ( ruleUnString )
                    // InternalLegoLang.g:1870:3: ruleUnString
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVariableAccess().getUnStringParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleUnString();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVariableAccess().getUnStringParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLegoLang.g:1875:2: ( ruleUnBoolean )
                    {
                    // InternalLegoLang.g:1875:2: ( ruleUnBoolean )
                    // InternalLegoLang.g:1876:3: ruleUnBoolean
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVariableAccess().getUnBooleanParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleUnBoolean();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVariableAccess().getUnBooleanParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalLegoLang.g:1881:2: ( ruleUnDouble )
                    {
                    // InternalLegoLang.g:1881:2: ( ruleUnDouble )
                    // InternalLegoLang.g:1882:3: ruleUnDouble
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVariableAccess().getUnDoubleParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleUnDouble();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVariableAccess().getUnDoubleParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalLegoLang.g:1887:2: ( ruleUnColor )
                    {
                    // InternalLegoLang.g:1887:2: ( ruleUnColor )
                    // InternalLegoLang.g:1888:3: ruleUnColor
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVariableAccess().getUnColorParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleUnColor();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVariableAccess().getUnColorParserRuleCall_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Variable__Alternatives"


    // $ANTLR start "rule__Comparaison__Alternatives"
    // InternalLegoLang.g:1897:1: rule__Comparaison__Alternatives : ( ( ruleGT ) | ( ruleEqual ) | ( ruleLT ) | ( ruleDifferent ) | ( ruleGTorEqual ) | ( ruleLTorEqual ) );
    public final void rule__Comparaison__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1901:1: ( ( ruleGT ) | ( ruleEqual ) | ( ruleLT ) | ( ruleDifferent ) | ( ruleGTorEqual ) | ( ruleLTorEqual ) )
            int alt5=6;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==31) ) {
                int LA5_1 = input.LA(2);

                if ( (synpred29_InternalLegoLang()) ) {
                    alt5=1;
                }
                else if ( (synpred30_InternalLegoLang()) ) {
                    alt5=2;
                }
                else if ( (synpred31_InternalLegoLang()) ) {
                    alt5=3;
                }
                else if ( (synpred32_InternalLegoLang()) ) {
                    alt5=4;
                }
                else if ( (synpred33_InternalLegoLang()) ) {
                    alt5=5;
                }
                else if ( (true) ) {
                    alt5=6;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 5, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // InternalLegoLang.g:1902:2: ( ruleGT )
                    {
                    // InternalLegoLang.g:1902:2: ( ruleGT )
                    // InternalLegoLang.g:1903:3: ruleGT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparaisonAccess().getGTParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleGT();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparaisonAccess().getGTParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLegoLang.g:1908:2: ( ruleEqual )
                    {
                    // InternalLegoLang.g:1908:2: ( ruleEqual )
                    // InternalLegoLang.g:1909:3: ruleEqual
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparaisonAccess().getEqualParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleEqual();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparaisonAccess().getEqualParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLegoLang.g:1914:2: ( ruleLT )
                    {
                    // InternalLegoLang.g:1914:2: ( ruleLT )
                    // InternalLegoLang.g:1915:3: ruleLT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparaisonAccess().getLTParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleLT();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparaisonAccess().getLTParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalLegoLang.g:1920:2: ( ruleDifferent )
                    {
                    // InternalLegoLang.g:1920:2: ( ruleDifferent )
                    // InternalLegoLang.g:1921:3: ruleDifferent
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparaisonAccess().getDifferentParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleDifferent();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparaisonAccess().getDifferentParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalLegoLang.g:1926:2: ( ruleGTorEqual )
                    {
                    // InternalLegoLang.g:1926:2: ( ruleGTorEqual )
                    // InternalLegoLang.g:1927:3: ruleGTorEqual
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparaisonAccess().getGTorEqualParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleGTorEqual();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparaisonAccess().getGTorEqualParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalLegoLang.g:1932:2: ( ruleLTorEqual )
                    {
                    // InternalLegoLang.g:1932:2: ( ruleLTorEqual )
                    // InternalLegoLang.g:1933:3: ruleLTorEqual
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getComparaisonAccess().getLTorEqualParserRuleCall_5()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleLTorEqual();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getComparaisonAccess().getLTorEqualParserRuleCall_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Comparaison__Alternatives"


    // $ANTLR start "rule__Engine__Alternatives"
    // InternalLegoLang.g:1942:1: rule__Engine__Alternatives : ( ( ruleWheelEngine ) | ( ruleMotorizedArmEngine ) | ( rulePaintballLauncherEngine ) );
    public final void rule__Engine__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1946:1: ( ( ruleWheelEngine ) | ( ruleMotorizedArmEngine ) | ( rulePaintballLauncherEngine ) )
            int alt6=3;
            switch ( input.LA(1) ) {
            case 19:
                {
                alt6=1;
                }
                break;
            case 21:
                {
                alt6=2;
                }
                break;
            case 22:
                {
                alt6=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }

            switch (alt6) {
                case 1 :
                    // InternalLegoLang.g:1947:2: ( ruleWheelEngine )
                    {
                    // InternalLegoLang.g:1947:2: ( ruleWheelEngine )
                    // InternalLegoLang.g:1948:3: ruleWheelEngine
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEngineAccess().getWheelEngineParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleWheelEngine();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEngineAccess().getWheelEngineParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLegoLang.g:1953:2: ( ruleMotorizedArmEngine )
                    {
                    // InternalLegoLang.g:1953:2: ( ruleMotorizedArmEngine )
                    // InternalLegoLang.g:1954:3: ruleMotorizedArmEngine
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEngineAccess().getMotorizedArmEngineParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleMotorizedArmEngine();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEngineAccess().getMotorizedArmEngineParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLegoLang.g:1959:2: ( rulePaintballLauncherEngine )
                    {
                    // InternalLegoLang.g:1959:2: ( rulePaintballLauncherEngine )
                    // InternalLegoLang.g:1960:3: rulePaintballLauncherEngine
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEngineAccess().getPaintballLauncherEngineParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulePaintballLauncherEngine();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEngineAccess().getPaintballLauncherEngineParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Engine__Alternatives"


    // $ANTLR start "rule__Sensor__Alternatives"
    // InternalLegoLang.g:1969:1: rule__Sensor__Alternatives : ( ( ruleLaserSensor ) | ( ruleColorSensor ) | ( ruleUltraSonicSensor ) | ( ruleGyroSensor ) | ( ruleGPSSensor ) );
    public final void rule__Sensor__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:1973:1: ( ( ruleLaserSensor ) | ( ruleColorSensor ) | ( ruleUltraSonicSensor ) | ( ruleGyroSensor ) | ( ruleGPSSensor ) )
            int alt7=5;
            switch ( input.LA(1) ) {
            case 24:
                {
                alt7=1;
                }
                break;
            case 23:
                {
                alt7=2;
                }
                break;
            case 27:
                {
                alt7=3;
                }
                break;
            case 26:
                {
                alt7=4;
                }
                break;
            case 25:
                {
                alt7=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }

            switch (alt7) {
                case 1 :
                    // InternalLegoLang.g:1974:2: ( ruleLaserSensor )
                    {
                    // InternalLegoLang.g:1974:2: ( ruleLaserSensor )
                    // InternalLegoLang.g:1975:3: ruleLaserSensor
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSensorAccess().getLaserSensorParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleLaserSensor();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSensorAccess().getLaserSensorParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLegoLang.g:1980:2: ( ruleColorSensor )
                    {
                    // InternalLegoLang.g:1980:2: ( ruleColorSensor )
                    // InternalLegoLang.g:1981:3: ruleColorSensor
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSensorAccess().getColorSensorParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleColorSensor();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSensorAccess().getColorSensorParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLegoLang.g:1986:2: ( ruleUltraSonicSensor )
                    {
                    // InternalLegoLang.g:1986:2: ( ruleUltraSonicSensor )
                    // InternalLegoLang.g:1987:3: ruleUltraSonicSensor
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSensorAccess().getUltraSonicSensorParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleUltraSonicSensor();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSensorAccess().getUltraSonicSensorParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalLegoLang.g:1992:2: ( ruleGyroSensor )
                    {
                    // InternalLegoLang.g:1992:2: ( ruleGyroSensor )
                    // InternalLegoLang.g:1993:3: ruleGyroSensor
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSensorAccess().getGyroSensorParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleGyroSensor();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSensorAccess().getGyroSensorParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalLegoLang.g:1998:2: ( ruleGPSSensor )
                    {
                    // InternalLegoLang.g:1998:2: ( ruleGPSSensor )
                    // InternalLegoLang.g:1999:3: ruleGPSSensor
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSensorAccess().getGPSSensorParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleGPSSensor();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSensorAccess().getGPSSensorParserRuleCall_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Sensor__Alternatives"


    // $ANTLR start "rule__EngineOperation__Alternatives"
    // InternalLegoLang.g:2008:1: rule__EngineOperation__Alternatives : ( ( ruleVitesseOperation ) | ( rulePositionOperation ) | ( ruleForceOperation ) );
    public final void rule__EngineOperation__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2012:1: ( ( ruleVitesseOperation ) | ( rulePositionOperation ) | ( ruleForceOperation ) )
            int alt8=3;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==29) ) {
                switch ( input.LA(2) ) {
                case 30:
                    {
                    alt8=1;
                    }
                    break;
                case 36:
                    {
                    alt8=2;
                    }
                    break;
                case 37:
                    {
                    alt8=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 8, 1, input);

                    throw nvae;
                }

            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalLegoLang.g:2013:2: ( ruleVitesseOperation )
                    {
                    // InternalLegoLang.g:2013:2: ( ruleVitesseOperation )
                    // InternalLegoLang.g:2014:3: ruleVitesseOperation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEngineOperationAccess().getVitesseOperationParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleVitesseOperation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEngineOperationAccess().getVitesseOperationParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLegoLang.g:2019:2: ( rulePositionOperation )
                    {
                    // InternalLegoLang.g:2019:2: ( rulePositionOperation )
                    // InternalLegoLang.g:2020:3: rulePositionOperation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEngineOperationAccess().getPositionOperationParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    rulePositionOperation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEngineOperationAccess().getPositionOperationParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLegoLang.g:2025:2: ( ruleForceOperation )
                    {
                    // InternalLegoLang.g:2025:2: ( ruleForceOperation )
                    // InternalLegoLang.g:2026:3: ruleForceOperation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEngineOperationAccess().getForceOperationParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleForceOperation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEngineOperationAccess().getForceOperationParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EngineOperation__Alternatives"


    // $ANTLR start "rule__SensorOperation__Alternatives"
    // InternalLegoLang.g:2035:1: rule__SensorOperation__Alternatives : ( ( ruleRangeOperation ) | ( ruleColorOperation ) | ( ruleIntensityOperation ) | ( ruleXGPSOperation ) | ( ruleYGPSOperation ) | ( ruleAngleOperation ) | ( ruleDistanceOperation ) );
    public final void rule__SensorOperation__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2039:1: ( ( ruleRangeOperation ) | ( ruleColorOperation ) | ( ruleIntensityOperation ) | ( ruleXGPSOperation ) | ( ruleYGPSOperation ) | ( ruleAngleOperation ) | ( ruleDistanceOperation ) )
            int alt9=7;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==38) ) {
                switch ( input.LA(2) ) {
                case 42:
                    {
                    alt9=4;
                    }
                    break;
                case 40:
                    {
                    alt9=3;
                    }
                    break;
                case 39:
                    {
                    alt9=2;
                    }
                    break;
                case 45:
                    {
                    alt9=7;
                    }
                    break;
                case 44:
                    {
                    alt9=6;
                    }
                    break;
                case 41:
                    {
                    alt9=1;
                    }
                    break;
                case 43:
                    {
                    alt9=5;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 9, 1, input);

                    throw nvae;
                }

            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalLegoLang.g:2040:2: ( ruleRangeOperation )
                    {
                    // InternalLegoLang.g:2040:2: ( ruleRangeOperation )
                    // InternalLegoLang.g:2041:3: ruleRangeOperation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSensorOperationAccess().getRangeOperationParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleRangeOperation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSensorOperationAccess().getRangeOperationParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLegoLang.g:2046:2: ( ruleColorOperation )
                    {
                    // InternalLegoLang.g:2046:2: ( ruleColorOperation )
                    // InternalLegoLang.g:2047:3: ruleColorOperation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSensorOperationAccess().getColorOperationParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleColorOperation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSensorOperationAccess().getColorOperationParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalLegoLang.g:2052:2: ( ruleIntensityOperation )
                    {
                    // InternalLegoLang.g:2052:2: ( ruleIntensityOperation )
                    // InternalLegoLang.g:2053:3: ruleIntensityOperation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSensorOperationAccess().getIntensityOperationParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleIntensityOperation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSensorOperationAccess().getIntensityOperationParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalLegoLang.g:2058:2: ( ruleXGPSOperation )
                    {
                    // InternalLegoLang.g:2058:2: ( ruleXGPSOperation )
                    // InternalLegoLang.g:2059:3: ruleXGPSOperation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSensorOperationAccess().getXGPSOperationParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleXGPSOperation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSensorOperationAccess().getXGPSOperationParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalLegoLang.g:2064:2: ( ruleYGPSOperation )
                    {
                    // InternalLegoLang.g:2064:2: ( ruleYGPSOperation )
                    // InternalLegoLang.g:2065:3: ruleYGPSOperation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSensorOperationAccess().getYGPSOperationParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleYGPSOperation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSensorOperationAccess().getYGPSOperationParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalLegoLang.g:2070:2: ( ruleAngleOperation )
                    {
                    // InternalLegoLang.g:2070:2: ( ruleAngleOperation )
                    // InternalLegoLang.g:2071:3: ruleAngleOperation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSensorOperationAccess().getAngleOperationParserRuleCall_5()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleAngleOperation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSensorOperationAccess().getAngleOperationParserRuleCall_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalLegoLang.g:2076:2: ( ruleDistanceOperation )
                    {
                    // InternalLegoLang.g:2076:2: ( ruleDistanceOperation )
                    // InternalLegoLang.g:2077:3: ruleDistanceOperation
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSensorOperationAccess().getDistanceOperationParserRuleCall_6()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleDistanceOperation();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSensorOperationAccess().getDistanceOperationParserRuleCall_6()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__SensorOperation__Alternatives"


    // $ANTLR start "rule__BooleanExpression__Alternatives"
    // InternalLegoLang.g:2086:1: rule__BooleanExpression__Alternatives : ( ( ruleAnd ) | ( ruleOr ) );
    public final void rule__BooleanExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2090:1: ( ( ruleAnd ) | ( ruleOr ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==31) ) {
                int LA10_1 = input.LA(2);

                if ( (synpred48_InternalLegoLang()) ) {
                    alt10=1;
                }
                else if ( (true) ) {
                    alt10=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 10, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalLegoLang.g:2091:2: ( ruleAnd )
                    {
                    // InternalLegoLang.g:2091:2: ( ruleAnd )
                    // InternalLegoLang.g:2092:3: ruleAnd
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanExpressionAccess().getAndParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleAnd();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanExpressionAccess().getAndParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLegoLang.g:2097:2: ( ruleOr )
                    {
                    // InternalLegoLang.g:2097:2: ( ruleOr )
                    // InternalLegoLang.g:2098:3: ruleOr
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBooleanExpressionAccess().getOrParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleOr();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBooleanExpressionAccess().getOrParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BooleanExpression__Alternatives"


    // $ANTLR start "rule__EString__Alternatives"
    // InternalLegoLang.g:2107:1: rule__EString__Alternatives : ( ( ruleFQN ) | ( RULE_ID ) );
    public final void rule__EString__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2111:1: ( ( ruleFQN ) | ( RULE_ID ) )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==RULE_ID) ) {
                int LA11_1 = input.LA(2);

                if ( (synpred49_InternalLegoLang()) ) {
                    alt11=1;
                }
                else if ( (true) ) {
                    alt11=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 11, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalLegoLang.g:2112:2: ( ruleFQN )
                    {
                    // InternalLegoLang.g:2112:2: ( ruleFQN )
                    // InternalLegoLang.g:2113:3: ruleFQN
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEStringAccess().getFQNParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleFQN();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEStringAccess().getFQNParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLegoLang.g:2118:2: ( RULE_ID )
                    {
                    // InternalLegoLang.g:2118:2: ( RULE_ID )
                    // InternalLegoLang.g:2119:3: RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
                    }
                    match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EString__Alternatives"


    // $ANTLR start "rule__EBoolean__Alternatives"
    // InternalLegoLang.g:2128:1: rule__EBoolean__Alternatives : ( ( 'true' ) | ( 'false' ) );
    public final void rule__EBoolean__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2132:1: ( ( 'true' ) | ( 'false' ) )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==11) ) {
                alt12=1;
            }
            else if ( (LA12_0==12) ) {
                alt12=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalLegoLang.g:2133:2: ( 'true' )
                    {
                    // InternalLegoLang.g:2133:2: ( 'true' )
                    // InternalLegoLang.g:2134:3: 'true'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); 
                    }
                    match(input,11,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLegoLang.g:2139:2: ( 'false' )
                    {
                    // InternalLegoLang.g:2139:2: ( 'false' )
                    // InternalLegoLang.g:2140:3: 'false'
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); 
                    }
                    match(input,12,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EBoolean__Alternatives"


    // $ANTLR start "rule__Colors__Alternatives"
    // InternalLegoLang.g:2149:1: rule__Colors__Alternatives : ( ( ( 'black' ) ) | ( ( 'white' ) ) );
    public final void rule__Colors__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2153:1: ( ( ( 'black' ) ) | ( ( 'white' ) ) )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==13) ) {
                alt13=1;
            }
            else if ( (LA13_0==14) ) {
                alt13=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalLegoLang.g:2154:2: ( ( 'black' ) )
                    {
                    // InternalLegoLang.g:2154:2: ( ( 'black' ) )
                    // InternalLegoLang.g:2155:3: ( 'black' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColorsAccess().getBlackEnumLiteralDeclaration_0()); 
                    }
                    // InternalLegoLang.g:2156:3: ( 'black' )
                    // InternalLegoLang.g:2156:4: 'black'
                    {
                    match(input,13,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColorsAccess().getBlackEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalLegoLang.g:2160:2: ( ( 'white' ) )
                    {
                    // InternalLegoLang.g:2160:2: ( ( 'white' ) )
                    // InternalLegoLang.g:2161:3: ( 'white' )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getColorsAccess().getWhiteEnumLiteralDeclaration_1()); 
                    }
                    // InternalLegoLang.g:2162:3: ( 'white' )
                    // InternalLegoLang.g:2162:4: 'white'
                    {
                    match(input,14,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getColorsAccess().getWhiteEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Colors__Alternatives"


    // $ANTLR start "rule__Program__Group__0"
    // InternalLegoLang.g:2170:1: rule__Program__Group__0 : rule__Program__Group__0__Impl rule__Program__Group__1 ;
    public final void rule__Program__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2174:1: ( rule__Program__Group__0__Impl rule__Program__Group__1 )
            // InternalLegoLang.g:2175:2: rule__Program__Group__0__Impl rule__Program__Group__1
            {
            pushFollow(FOLLOW_3);
            rule__Program__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Program__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__0"


    // $ANTLR start "rule__Program__Group__0__Impl"
    // InternalLegoLang.g:2182:1: rule__Program__Group__0__Impl : ( () ) ;
    public final void rule__Program__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2186:1: ( ( () ) )
            // InternalLegoLang.g:2187:1: ( () )
            {
            // InternalLegoLang.g:2187:1: ( () )
            // InternalLegoLang.g:2188:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getProgramAction_0()); 
            }
            // InternalLegoLang.g:2189:2: ()
            // InternalLegoLang.g:2189:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getProgramAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__0__Impl"


    // $ANTLR start "rule__Program__Group__1"
    // InternalLegoLang.g:2197:1: rule__Program__Group__1 : rule__Program__Group__1__Impl rule__Program__Group__2 ;
    public final void rule__Program__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2201:1: ( rule__Program__Group__1__Impl rule__Program__Group__2 )
            // InternalLegoLang.g:2202:2: rule__Program__Group__1__Impl rule__Program__Group__2
            {
            pushFollow(FOLLOW_4);
            rule__Program__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Program__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__1"


    // $ANTLR start "rule__Program__Group__1__Impl"
    // InternalLegoLang.g:2209:1: rule__Program__Group__1__Impl : ( 'Program' ) ;
    public final void rule__Program__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2213:1: ( ( 'Program' ) )
            // InternalLegoLang.g:2214:1: ( 'Program' )
            {
            // InternalLegoLang.g:2214:1: ( 'Program' )
            // InternalLegoLang.g:2215:2: 'Program'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getProgramKeyword_1()); 
            }
            match(input,15,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getProgramKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__1__Impl"


    // $ANTLR start "rule__Program__Group__2"
    // InternalLegoLang.g:2224:1: rule__Program__Group__2 : rule__Program__Group__2__Impl rule__Program__Group__3 ;
    public final void rule__Program__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2228:1: ( rule__Program__Group__2__Impl rule__Program__Group__3 )
            // InternalLegoLang.g:2229:2: rule__Program__Group__2__Impl rule__Program__Group__3
            {
            pushFollow(FOLLOW_5);
            rule__Program__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Program__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__2"


    // $ANTLR start "rule__Program__Group__2__Impl"
    // InternalLegoLang.g:2236:1: rule__Program__Group__2__Impl : ( ( rule__Program__NameAssignment_2 ) ) ;
    public final void rule__Program__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2240:1: ( ( ( rule__Program__NameAssignment_2 ) ) )
            // InternalLegoLang.g:2241:1: ( ( rule__Program__NameAssignment_2 ) )
            {
            // InternalLegoLang.g:2241:1: ( ( rule__Program__NameAssignment_2 ) )
            // InternalLegoLang.g:2242:2: ( rule__Program__NameAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getNameAssignment_2()); 
            }
            // InternalLegoLang.g:2243:2: ( rule__Program__NameAssignment_2 )
            // InternalLegoLang.g:2243:3: rule__Program__NameAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Program__NameAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getNameAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__2__Impl"


    // $ANTLR start "rule__Program__Group__3"
    // InternalLegoLang.g:2251:1: rule__Program__Group__3 : rule__Program__Group__3__Impl rule__Program__Group__4 ;
    public final void rule__Program__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2255:1: ( rule__Program__Group__3__Impl rule__Program__Group__4 )
            // InternalLegoLang.g:2256:2: rule__Program__Group__3__Impl rule__Program__Group__4
            {
            pushFollow(FOLLOW_6);
            rule__Program__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Program__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__3"


    // $ANTLR start "rule__Program__Group__3__Impl"
    // InternalLegoLang.g:2263:1: rule__Program__Group__3__Impl : ( '{' ) ;
    public final void rule__Program__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2267:1: ( ( '{' ) )
            // InternalLegoLang.g:2268:1: ( '{' )
            {
            // InternalLegoLang.g:2268:1: ( '{' )
            // InternalLegoLang.g:2269:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_3()); 
            }
            match(input,16,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__3__Impl"


    // $ANTLR start "rule__Program__Group__4"
    // InternalLegoLang.g:2278:1: rule__Program__Group__4 : rule__Program__Group__4__Impl rule__Program__Group__5 ;
    public final void rule__Program__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2282:1: ( rule__Program__Group__4__Impl rule__Program__Group__5 )
            // InternalLegoLang.g:2283:2: rule__Program__Group__4__Impl rule__Program__Group__5
            {
            pushFollow(FOLLOW_6);
            rule__Program__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Program__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__4"


    // $ANTLR start "rule__Program__Group__4__Impl"
    // InternalLegoLang.g:2290:1: rule__Program__Group__4__Impl : ( ( rule__Program__StatementAssignment_4 )* ) ;
    public final void rule__Program__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2294:1: ( ( ( rule__Program__StatementAssignment_4 )* ) )
            // InternalLegoLang.g:2295:1: ( ( rule__Program__StatementAssignment_4 )* )
            {
            // InternalLegoLang.g:2295:1: ( ( rule__Program__StatementAssignment_4 )* )
            // InternalLegoLang.g:2296:2: ( rule__Program__StatementAssignment_4 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getStatementAssignment_4()); 
            }
            // InternalLegoLang.g:2297:2: ( rule__Program__StatementAssignment_4 )*
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( ((LA14_0>=RULE_ID && LA14_0<=RULE_STRING)||(LA14_0>=11 && LA14_0<=14)||LA14_0==19||(LA14_0>=21 && LA14_0<=29)||LA14_0==31||LA14_0==34||(LA14_0>=38 && LA14_0<=39)||LA14_0==48||(LA14_0>=50 && LA14_0<=51)||LA14_0==53||(LA14_0>=65 && LA14_0<=66)||(LA14_0>=68 && LA14_0<=70)) ) {
                    alt14=1;
                }


                switch (alt14) {
            	case 1 :
            	    // InternalLegoLang.g:2297:3: rule__Program__StatementAssignment_4
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__Program__StatementAssignment_4();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop14;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getStatementAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__4__Impl"


    // $ANTLR start "rule__Program__Group__5"
    // InternalLegoLang.g:2305:1: rule__Program__Group__5 : rule__Program__Group__5__Impl rule__Program__Group__6 ;
    public final void rule__Program__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2309:1: ( rule__Program__Group__5__Impl rule__Program__Group__6 )
            // InternalLegoLang.g:2310:2: rule__Program__Group__5__Impl rule__Program__Group__6
            {
            pushFollow(FOLLOW_6);
            rule__Program__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Program__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__5"


    // $ANTLR start "rule__Program__Group__5__Impl"
    // InternalLegoLang.g:2317:1: rule__Program__Group__5__Impl : ( ( ';' )? ) ;
    public final void rule__Program__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2321:1: ( ( ( ';' )? ) )
            // InternalLegoLang.g:2322:1: ( ( ';' )? )
            {
            // InternalLegoLang.g:2322:1: ( ( ';' )? )
            // InternalLegoLang.g:2323:2: ( ';' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getSemicolonKeyword_5()); 
            }
            // InternalLegoLang.g:2324:2: ( ';' )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==17) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // InternalLegoLang.g:2324:3: ';'
                    {
                    match(input,17,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getSemicolonKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__5__Impl"


    // $ANTLR start "rule__Program__Group__6"
    // InternalLegoLang.g:2332:1: rule__Program__Group__6 : rule__Program__Group__6__Impl ;
    public final void rule__Program__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2336:1: ( rule__Program__Group__6__Impl )
            // InternalLegoLang.g:2337:2: rule__Program__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Program__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__6"


    // $ANTLR start "rule__Program__Group__6__Impl"
    // InternalLegoLang.g:2343:1: rule__Program__Group__6__Impl : ( '}' ) ;
    public final void rule__Program__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2347:1: ( ( '}' ) )
            // InternalLegoLang.g:2348:1: ( '}' )
            {
            // InternalLegoLang.g:2348:1: ( '}' )
            // InternalLegoLang.g:2349:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_6()); 
            }
            match(input,18,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__Group__6__Impl"


    // $ANTLR start "rule__WheelEngine__Group__0"
    // InternalLegoLang.g:2359:1: rule__WheelEngine__Group__0 : rule__WheelEngine__Group__0__Impl rule__WheelEngine__Group__1 ;
    public final void rule__WheelEngine__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2363:1: ( rule__WheelEngine__Group__0__Impl rule__WheelEngine__Group__1 )
            // InternalLegoLang.g:2364:2: rule__WheelEngine__Group__0__Impl rule__WheelEngine__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__WheelEngine__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WheelEngine__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WheelEngine__Group__0"


    // $ANTLR start "rule__WheelEngine__Group__0__Impl"
    // InternalLegoLang.g:2371:1: rule__WheelEngine__Group__0__Impl : ( 'WheelEngine' ) ;
    public final void rule__WheelEngine__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2375:1: ( ( 'WheelEngine' ) )
            // InternalLegoLang.g:2376:1: ( 'WheelEngine' )
            {
            // InternalLegoLang.g:2376:1: ( 'WheelEngine' )
            // InternalLegoLang.g:2377:2: 'WheelEngine'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWheelEngineAccess().getWheelEngineKeyword_0()); 
            }
            match(input,19,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWheelEngineAccess().getWheelEngineKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WheelEngine__Group__0__Impl"


    // $ANTLR start "rule__WheelEngine__Group__1"
    // InternalLegoLang.g:2386:1: rule__WheelEngine__Group__1 : rule__WheelEngine__Group__1__Impl rule__WheelEngine__Group__2 ;
    public final void rule__WheelEngine__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2390:1: ( rule__WheelEngine__Group__1__Impl rule__WheelEngine__Group__2 )
            // InternalLegoLang.g:2391:2: rule__WheelEngine__Group__1__Impl rule__WheelEngine__Group__2
            {
            pushFollow(FOLLOW_8);
            rule__WheelEngine__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WheelEngine__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WheelEngine__Group__1"


    // $ANTLR start "rule__WheelEngine__Group__1__Impl"
    // InternalLegoLang.g:2398:1: rule__WheelEngine__Group__1__Impl : ( ( rule__WheelEngine__NameAssignment_1 ) ) ;
    public final void rule__WheelEngine__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2402:1: ( ( ( rule__WheelEngine__NameAssignment_1 ) ) )
            // InternalLegoLang.g:2403:1: ( ( rule__WheelEngine__NameAssignment_1 ) )
            {
            // InternalLegoLang.g:2403:1: ( ( rule__WheelEngine__NameAssignment_1 ) )
            // InternalLegoLang.g:2404:2: ( rule__WheelEngine__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWheelEngineAccess().getNameAssignment_1()); 
            }
            // InternalLegoLang.g:2405:2: ( rule__WheelEngine__NameAssignment_1 )
            // InternalLegoLang.g:2405:3: rule__WheelEngine__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__WheelEngine__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWheelEngineAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WheelEngine__Group__1__Impl"


    // $ANTLR start "rule__WheelEngine__Group__2"
    // InternalLegoLang.g:2413:1: rule__WheelEngine__Group__2 : rule__WheelEngine__Group__2__Impl rule__WheelEngine__Group__3 ;
    public final void rule__WheelEngine__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2417:1: ( rule__WheelEngine__Group__2__Impl rule__WheelEngine__Group__3 )
            // InternalLegoLang.g:2418:2: rule__WheelEngine__Group__2__Impl rule__WheelEngine__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__WheelEngine__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WheelEngine__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WheelEngine__Group__2"


    // $ANTLR start "rule__WheelEngine__Group__2__Impl"
    // InternalLegoLang.g:2425:1: rule__WheelEngine__Group__2__Impl : ( 'on' ) ;
    public final void rule__WheelEngine__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2429:1: ( ( 'on' ) )
            // InternalLegoLang.g:2430:1: ( 'on' )
            {
            // InternalLegoLang.g:2430:1: ( 'on' )
            // InternalLegoLang.g:2431:2: 'on'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWheelEngineAccess().getOnKeyword_2()); 
            }
            match(input,20,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWheelEngineAccess().getOnKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WheelEngine__Group__2__Impl"


    // $ANTLR start "rule__WheelEngine__Group__3"
    // InternalLegoLang.g:2440:1: rule__WheelEngine__Group__3 : rule__WheelEngine__Group__3__Impl ;
    public final void rule__WheelEngine__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2444:1: ( rule__WheelEngine__Group__3__Impl )
            // InternalLegoLang.g:2445:2: rule__WheelEngine__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WheelEngine__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WheelEngine__Group__3"


    // $ANTLR start "rule__WheelEngine__Group__3__Impl"
    // InternalLegoLang.g:2451:1: rule__WheelEngine__Group__3__Impl : ( ( rule__WheelEngine__PositionAssignment_3 ) ) ;
    public final void rule__WheelEngine__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2455:1: ( ( ( rule__WheelEngine__PositionAssignment_3 ) ) )
            // InternalLegoLang.g:2456:1: ( ( rule__WheelEngine__PositionAssignment_3 ) )
            {
            // InternalLegoLang.g:2456:1: ( ( rule__WheelEngine__PositionAssignment_3 ) )
            // InternalLegoLang.g:2457:2: ( rule__WheelEngine__PositionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWheelEngineAccess().getPositionAssignment_3()); 
            }
            // InternalLegoLang.g:2458:2: ( rule__WheelEngine__PositionAssignment_3 )
            // InternalLegoLang.g:2458:3: rule__WheelEngine__PositionAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__WheelEngine__PositionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWheelEngineAccess().getPositionAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WheelEngine__Group__3__Impl"


    // $ANTLR start "rule__MotorizedArmEngine__Group__0"
    // InternalLegoLang.g:2467:1: rule__MotorizedArmEngine__Group__0 : rule__MotorizedArmEngine__Group__0__Impl rule__MotorizedArmEngine__Group__1 ;
    public final void rule__MotorizedArmEngine__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2471:1: ( rule__MotorizedArmEngine__Group__0__Impl rule__MotorizedArmEngine__Group__1 )
            // InternalLegoLang.g:2472:2: rule__MotorizedArmEngine__Group__0__Impl rule__MotorizedArmEngine__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__MotorizedArmEngine__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MotorizedArmEngine__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MotorizedArmEngine__Group__0"


    // $ANTLR start "rule__MotorizedArmEngine__Group__0__Impl"
    // InternalLegoLang.g:2479:1: rule__MotorizedArmEngine__Group__0__Impl : ( 'MotorizedArmEngine' ) ;
    public final void rule__MotorizedArmEngine__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2483:1: ( ( 'MotorizedArmEngine' ) )
            // InternalLegoLang.g:2484:1: ( 'MotorizedArmEngine' )
            {
            // InternalLegoLang.g:2484:1: ( 'MotorizedArmEngine' )
            // InternalLegoLang.g:2485:2: 'MotorizedArmEngine'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMotorizedArmEngineAccess().getMotorizedArmEngineKeyword_0()); 
            }
            match(input,21,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMotorizedArmEngineAccess().getMotorizedArmEngineKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MotorizedArmEngine__Group__0__Impl"


    // $ANTLR start "rule__MotorizedArmEngine__Group__1"
    // InternalLegoLang.g:2494:1: rule__MotorizedArmEngine__Group__1 : rule__MotorizedArmEngine__Group__1__Impl rule__MotorizedArmEngine__Group__2 ;
    public final void rule__MotorizedArmEngine__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2498:1: ( rule__MotorizedArmEngine__Group__1__Impl rule__MotorizedArmEngine__Group__2 )
            // InternalLegoLang.g:2499:2: rule__MotorizedArmEngine__Group__1__Impl rule__MotorizedArmEngine__Group__2
            {
            pushFollow(FOLLOW_8);
            rule__MotorizedArmEngine__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MotorizedArmEngine__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MotorizedArmEngine__Group__1"


    // $ANTLR start "rule__MotorizedArmEngine__Group__1__Impl"
    // InternalLegoLang.g:2506:1: rule__MotorizedArmEngine__Group__1__Impl : ( ( rule__MotorizedArmEngine__NameAssignment_1 ) ) ;
    public final void rule__MotorizedArmEngine__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2510:1: ( ( ( rule__MotorizedArmEngine__NameAssignment_1 ) ) )
            // InternalLegoLang.g:2511:1: ( ( rule__MotorizedArmEngine__NameAssignment_1 ) )
            {
            // InternalLegoLang.g:2511:1: ( ( rule__MotorizedArmEngine__NameAssignment_1 ) )
            // InternalLegoLang.g:2512:2: ( rule__MotorizedArmEngine__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMotorizedArmEngineAccess().getNameAssignment_1()); 
            }
            // InternalLegoLang.g:2513:2: ( rule__MotorizedArmEngine__NameAssignment_1 )
            // InternalLegoLang.g:2513:3: rule__MotorizedArmEngine__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__MotorizedArmEngine__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMotorizedArmEngineAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MotorizedArmEngine__Group__1__Impl"


    // $ANTLR start "rule__MotorizedArmEngine__Group__2"
    // InternalLegoLang.g:2521:1: rule__MotorizedArmEngine__Group__2 : rule__MotorizedArmEngine__Group__2__Impl rule__MotorizedArmEngine__Group__3 ;
    public final void rule__MotorizedArmEngine__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2525:1: ( rule__MotorizedArmEngine__Group__2__Impl rule__MotorizedArmEngine__Group__3 )
            // InternalLegoLang.g:2526:2: rule__MotorizedArmEngine__Group__2__Impl rule__MotorizedArmEngine__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__MotorizedArmEngine__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MotorizedArmEngine__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MotorizedArmEngine__Group__2"


    // $ANTLR start "rule__MotorizedArmEngine__Group__2__Impl"
    // InternalLegoLang.g:2533:1: rule__MotorizedArmEngine__Group__2__Impl : ( 'on' ) ;
    public final void rule__MotorizedArmEngine__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2537:1: ( ( 'on' ) )
            // InternalLegoLang.g:2538:1: ( 'on' )
            {
            // InternalLegoLang.g:2538:1: ( 'on' )
            // InternalLegoLang.g:2539:2: 'on'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMotorizedArmEngineAccess().getOnKeyword_2()); 
            }
            match(input,20,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMotorizedArmEngineAccess().getOnKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MotorizedArmEngine__Group__2__Impl"


    // $ANTLR start "rule__MotorizedArmEngine__Group__3"
    // InternalLegoLang.g:2548:1: rule__MotorizedArmEngine__Group__3 : rule__MotorizedArmEngine__Group__3__Impl ;
    public final void rule__MotorizedArmEngine__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2552:1: ( rule__MotorizedArmEngine__Group__3__Impl )
            // InternalLegoLang.g:2553:2: rule__MotorizedArmEngine__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MotorizedArmEngine__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MotorizedArmEngine__Group__3"


    // $ANTLR start "rule__MotorizedArmEngine__Group__3__Impl"
    // InternalLegoLang.g:2559:1: rule__MotorizedArmEngine__Group__3__Impl : ( ( rule__MotorizedArmEngine__PositionAssignment_3 ) ) ;
    public final void rule__MotorizedArmEngine__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2563:1: ( ( ( rule__MotorizedArmEngine__PositionAssignment_3 ) ) )
            // InternalLegoLang.g:2564:1: ( ( rule__MotorizedArmEngine__PositionAssignment_3 ) )
            {
            // InternalLegoLang.g:2564:1: ( ( rule__MotorizedArmEngine__PositionAssignment_3 ) )
            // InternalLegoLang.g:2565:2: ( rule__MotorizedArmEngine__PositionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMotorizedArmEngineAccess().getPositionAssignment_3()); 
            }
            // InternalLegoLang.g:2566:2: ( rule__MotorizedArmEngine__PositionAssignment_3 )
            // InternalLegoLang.g:2566:3: rule__MotorizedArmEngine__PositionAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__MotorizedArmEngine__PositionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMotorizedArmEngineAccess().getPositionAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MotorizedArmEngine__Group__3__Impl"


    // $ANTLR start "rule__PaintballLauncherEngine__Group__0"
    // InternalLegoLang.g:2575:1: rule__PaintballLauncherEngine__Group__0 : rule__PaintballLauncherEngine__Group__0__Impl rule__PaintballLauncherEngine__Group__1 ;
    public final void rule__PaintballLauncherEngine__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2579:1: ( rule__PaintballLauncherEngine__Group__0__Impl rule__PaintballLauncherEngine__Group__1 )
            // InternalLegoLang.g:2580:2: rule__PaintballLauncherEngine__Group__0__Impl rule__PaintballLauncherEngine__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__PaintballLauncherEngine__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PaintballLauncherEngine__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PaintballLauncherEngine__Group__0"


    // $ANTLR start "rule__PaintballLauncherEngine__Group__0__Impl"
    // InternalLegoLang.g:2587:1: rule__PaintballLauncherEngine__Group__0__Impl : ( 'PaintballLauncherEngine' ) ;
    public final void rule__PaintballLauncherEngine__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2591:1: ( ( 'PaintballLauncherEngine' ) )
            // InternalLegoLang.g:2592:1: ( 'PaintballLauncherEngine' )
            {
            // InternalLegoLang.g:2592:1: ( 'PaintballLauncherEngine' )
            // InternalLegoLang.g:2593:2: 'PaintballLauncherEngine'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPaintballLauncherEngineAccess().getPaintballLauncherEngineKeyword_0()); 
            }
            match(input,22,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPaintballLauncherEngineAccess().getPaintballLauncherEngineKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PaintballLauncherEngine__Group__0__Impl"


    // $ANTLR start "rule__PaintballLauncherEngine__Group__1"
    // InternalLegoLang.g:2602:1: rule__PaintballLauncherEngine__Group__1 : rule__PaintballLauncherEngine__Group__1__Impl rule__PaintballLauncherEngine__Group__2 ;
    public final void rule__PaintballLauncherEngine__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2606:1: ( rule__PaintballLauncherEngine__Group__1__Impl rule__PaintballLauncherEngine__Group__2 )
            // InternalLegoLang.g:2607:2: rule__PaintballLauncherEngine__Group__1__Impl rule__PaintballLauncherEngine__Group__2
            {
            pushFollow(FOLLOW_8);
            rule__PaintballLauncherEngine__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PaintballLauncherEngine__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PaintballLauncherEngine__Group__1"


    // $ANTLR start "rule__PaintballLauncherEngine__Group__1__Impl"
    // InternalLegoLang.g:2614:1: rule__PaintballLauncherEngine__Group__1__Impl : ( ( rule__PaintballLauncherEngine__NameAssignment_1 ) ) ;
    public final void rule__PaintballLauncherEngine__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2618:1: ( ( ( rule__PaintballLauncherEngine__NameAssignment_1 ) ) )
            // InternalLegoLang.g:2619:1: ( ( rule__PaintballLauncherEngine__NameAssignment_1 ) )
            {
            // InternalLegoLang.g:2619:1: ( ( rule__PaintballLauncherEngine__NameAssignment_1 ) )
            // InternalLegoLang.g:2620:2: ( rule__PaintballLauncherEngine__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPaintballLauncherEngineAccess().getNameAssignment_1()); 
            }
            // InternalLegoLang.g:2621:2: ( rule__PaintballLauncherEngine__NameAssignment_1 )
            // InternalLegoLang.g:2621:3: rule__PaintballLauncherEngine__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__PaintballLauncherEngine__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPaintballLauncherEngineAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PaintballLauncherEngine__Group__1__Impl"


    // $ANTLR start "rule__PaintballLauncherEngine__Group__2"
    // InternalLegoLang.g:2629:1: rule__PaintballLauncherEngine__Group__2 : rule__PaintballLauncherEngine__Group__2__Impl rule__PaintballLauncherEngine__Group__3 ;
    public final void rule__PaintballLauncherEngine__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2633:1: ( rule__PaintballLauncherEngine__Group__2__Impl rule__PaintballLauncherEngine__Group__3 )
            // InternalLegoLang.g:2634:2: rule__PaintballLauncherEngine__Group__2__Impl rule__PaintballLauncherEngine__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__PaintballLauncherEngine__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PaintballLauncherEngine__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PaintballLauncherEngine__Group__2"


    // $ANTLR start "rule__PaintballLauncherEngine__Group__2__Impl"
    // InternalLegoLang.g:2641:1: rule__PaintballLauncherEngine__Group__2__Impl : ( 'on' ) ;
    public final void rule__PaintballLauncherEngine__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2645:1: ( ( 'on' ) )
            // InternalLegoLang.g:2646:1: ( 'on' )
            {
            // InternalLegoLang.g:2646:1: ( 'on' )
            // InternalLegoLang.g:2647:2: 'on'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPaintballLauncherEngineAccess().getOnKeyword_2()); 
            }
            match(input,20,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPaintballLauncherEngineAccess().getOnKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PaintballLauncherEngine__Group__2__Impl"


    // $ANTLR start "rule__PaintballLauncherEngine__Group__3"
    // InternalLegoLang.g:2656:1: rule__PaintballLauncherEngine__Group__3 : rule__PaintballLauncherEngine__Group__3__Impl ;
    public final void rule__PaintballLauncherEngine__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2660:1: ( rule__PaintballLauncherEngine__Group__3__Impl )
            // InternalLegoLang.g:2661:2: rule__PaintballLauncherEngine__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PaintballLauncherEngine__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PaintballLauncherEngine__Group__3"


    // $ANTLR start "rule__PaintballLauncherEngine__Group__3__Impl"
    // InternalLegoLang.g:2667:1: rule__PaintballLauncherEngine__Group__3__Impl : ( ( rule__PaintballLauncherEngine__PositionAssignment_3 ) ) ;
    public final void rule__PaintballLauncherEngine__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2671:1: ( ( ( rule__PaintballLauncherEngine__PositionAssignment_3 ) ) )
            // InternalLegoLang.g:2672:1: ( ( rule__PaintballLauncherEngine__PositionAssignment_3 ) )
            {
            // InternalLegoLang.g:2672:1: ( ( rule__PaintballLauncherEngine__PositionAssignment_3 ) )
            // InternalLegoLang.g:2673:2: ( rule__PaintballLauncherEngine__PositionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPaintballLauncherEngineAccess().getPositionAssignment_3()); 
            }
            // InternalLegoLang.g:2674:2: ( rule__PaintballLauncherEngine__PositionAssignment_3 )
            // InternalLegoLang.g:2674:3: rule__PaintballLauncherEngine__PositionAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__PaintballLauncherEngine__PositionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPaintballLauncherEngineAccess().getPositionAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PaintballLauncherEngine__Group__3__Impl"


    // $ANTLR start "rule__ColorSensor__Group__0"
    // InternalLegoLang.g:2683:1: rule__ColorSensor__Group__0 : rule__ColorSensor__Group__0__Impl rule__ColorSensor__Group__1 ;
    public final void rule__ColorSensor__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2687:1: ( rule__ColorSensor__Group__0__Impl rule__ColorSensor__Group__1 )
            // InternalLegoLang.g:2688:2: rule__ColorSensor__Group__0__Impl rule__ColorSensor__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__ColorSensor__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColorSensor__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorSensor__Group__0"


    // $ANTLR start "rule__ColorSensor__Group__0__Impl"
    // InternalLegoLang.g:2695:1: rule__ColorSensor__Group__0__Impl : ( 'ColorSensor' ) ;
    public final void rule__ColorSensor__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2699:1: ( ( 'ColorSensor' ) )
            // InternalLegoLang.g:2700:1: ( 'ColorSensor' )
            {
            // InternalLegoLang.g:2700:1: ( 'ColorSensor' )
            // InternalLegoLang.g:2701:2: 'ColorSensor'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorSensorAccess().getColorSensorKeyword_0()); 
            }
            match(input,23,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorSensorAccess().getColorSensorKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorSensor__Group__0__Impl"


    // $ANTLR start "rule__ColorSensor__Group__1"
    // InternalLegoLang.g:2710:1: rule__ColorSensor__Group__1 : rule__ColorSensor__Group__1__Impl rule__ColorSensor__Group__2 ;
    public final void rule__ColorSensor__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2714:1: ( rule__ColorSensor__Group__1__Impl rule__ColorSensor__Group__2 )
            // InternalLegoLang.g:2715:2: rule__ColorSensor__Group__1__Impl rule__ColorSensor__Group__2
            {
            pushFollow(FOLLOW_8);
            rule__ColorSensor__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColorSensor__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorSensor__Group__1"


    // $ANTLR start "rule__ColorSensor__Group__1__Impl"
    // InternalLegoLang.g:2722:1: rule__ColorSensor__Group__1__Impl : ( ( rule__ColorSensor__NameAssignment_1 ) ) ;
    public final void rule__ColorSensor__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2726:1: ( ( ( rule__ColorSensor__NameAssignment_1 ) ) )
            // InternalLegoLang.g:2727:1: ( ( rule__ColorSensor__NameAssignment_1 ) )
            {
            // InternalLegoLang.g:2727:1: ( ( rule__ColorSensor__NameAssignment_1 ) )
            // InternalLegoLang.g:2728:2: ( rule__ColorSensor__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorSensorAccess().getNameAssignment_1()); 
            }
            // InternalLegoLang.g:2729:2: ( rule__ColorSensor__NameAssignment_1 )
            // InternalLegoLang.g:2729:3: rule__ColorSensor__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ColorSensor__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorSensorAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorSensor__Group__1__Impl"


    // $ANTLR start "rule__ColorSensor__Group__2"
    // InternalLegoLang.g:2737:1: rule__ColorSensor__Group__2 : rule__ColorSensor__Group__2__Impl rule__ColorSensor__Group__3 ;
    public final void rule__ColorSensor__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2741:1: ( rule__ColorSensor__Group__2__Impl rule__ColorSensor__Group__3 )
            // InternalLegoLang.g:2742:2: rule__ColorSensor__Group__2__Impl rule__ColorSensor__Group__3
            {
            pushFollow(FOLLOW_9);
            rule__ColorSensor__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColorSensor__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorSensor__Group__2"


    // $ANTLR start "rule__ColorSensor__Group__2__Impl"
    // InternalLegoLang.g:2749:1: rule__ColorSensor__Group__2__Impl : ( 'on' ) ;
    public final void rule__ColorSensor__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2753:1: ( ( 'on' ) )
            // InternalLegoLang.g:2754:1: ( 'on' )
            {
            // InternalLegoLang.g:2754:1: ( 'on' )
            // InternalLegoLang.g:2755:2: 'on'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorSensorAccess().getOnKeyword_2()); 
            }
            match(input,20,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorSensorAccess().getOnKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorSensor__Group__2__Impl"


    // $ANTLR start "rule__ColorSensor__Group__3"
    // InternalLegoLang.g:2764:1: rule__ColorSensor__Group__3 : rule__ColorSensor__Group__3__Impl ;
    public final void rule__ColorSensor__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2768:1: ( rule__ColorSensor__Group__3__Impl )
            // InternalLegoLang.g:2769:2: rule__ColorSensor__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColorSensor__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorSensor__Group__3"


    // $ANTLR start "rule__ColorSensor__Group__3__Impl"
    // InternalLegoLang.g:2775:1: rule__ColorSensor__Group__3__Impl : ( ( rule__ColorSensor__PositionAssignment_3 ) ) ;
    public final void rule__ColorSensor__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2779:1: ( ( ( rule__ColorSensor__PositionAssignment_3 ) ) )
            // InternalLegoLang.g:2780:1: ( ( rule__ColorSensor__PositionAssignment_3 ) )
            {
            // InternalLegoLang.g:2780:1: ( ( rule__ColorSensor__PositionAssignment_3 ) )
            // InternalLegoLang.g:2781:2: ( rule__ColorSensor__PositionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorSensorAccess().getPositionAssignment_3()); 
            }
            // InternalLegoLang.g:2782:2: ( rule__ColorSensor__PositionAssignment_3 )
            // InternalLegoLang.g:2782:3: rule__ColorSensor__PositionAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__ColorSensor__PositionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorSensorAccess().getPositionAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorSensor__Group__3__Impl"


    // $ANTLR start "rule__LaserSensor__Group__0"
    // InternalLegoLang.g:2791:1: rule__LaserSensor__Group__0 : rule__LaserSensor__Group__0__Impl rule__LaserSensor__Group__1 ;
    public final void rule__LaserSensor__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2795:1: ( rule__LaserSensor__Group__0__Impl rule__LaserSensor__Group__1 )
            // InternalLegoLang.g:2796:2: rule__LaserSensor__Group__0__Impl rule__LaserSensor__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__LaserSensor__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LaserSensor__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LaserSensor__Group__0"


    // $ANTLR start "rule__LaserSensor__Group__0__Impl"
    // InternalLegoLang.g:2803:1: rule__LaserSensor__Group__0__Impl : ( 'LaserSensor' ) ;
    public final void rule__LaserSensor__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2807:1: ( ( 'LaserSensor' ) )
            // InternalLegoLang.g:2808:1: ( 'LaserSensor' )
            {
            // InternalLegoLang.g:2808:1: ( 'LaserSensor' )
            // InternalLegoLang.g:2809:2: 'LaserSensor'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLaserSensorAccess().getLaserSensorKeyword_0()); 
            }
            match(input,24,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLaserSensorAccess().getLaserSensorKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LaserSensor__Group__0__Impl"


    // $ANTLR start "rule__LaserSensor__Group__1"
    // InternalLegoLang.g:2818:1: rule__LaserSensor__Group__1 : rule__LaserSensor__Group__1__Impl rule__LaserSensor__Group__2 ;
    public final void rule__LaserSensor__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2822:1: ( rule__LaserSensor__Group__1__Impl rule__LaserSensor__Group__2 )
            // InternalLegoLang.g:2823:2: rule__LaserSensor__Group__1__Impl rule__LaserSensor__Group__2
            {
            pushFollow(FOLLOW_8);
            rule__LaserSensor__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LaserSensor__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LaserSensor__Group__1"


    // $ANTLR start "rule__LaserSensor__Group__1__Impl"
    // InternalLegoLang.g:2830:1: rule__LaserSensor__Group__1__Impl : ( ( rule__LaserSensor__NameAssignment_1 ) ) ;
    public final void rule__LaserSensor__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2834:1: ( ( ( rule__LaserSensor__NameAssignment_1 ) ) )
            // InternalLegoLang.g:2835:1: ( ( rule__LaserSensor__NameAssignment_1 ) )
            {
            // InternalLegoLang.g:2835:1: ( ( rule__LaserSensor__NameAssignment_1 ) )
            // InternalLegoLang.g:2836:2: ( rule__LaserSensor__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLaserSensorAccess().getNameAssignment_1()); 
            }
            // InternalLegoLang.g:2837:2: ( rule__LaserSensor__NameAssignment_1 )
            // InternalLegoLang.g:2837:3: rule__LaserSensor__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__LaserSensor__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLaserSensorAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LaserSensor__Group__1__Impl"


    // $ANTLR start "rule__LaserSensor__Group__2"
    // InternalLegoLang.g:2845:1: rule__LaserSensor__Group__2 : rule__LaserSensor__Group__2__Impl rule__LaserSensor__Group__3 ;
    public final void rule__LaserSensor__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2849:1: ( rule__LaserSensor__Group__2__Impl rule__LaserSensor__Group__3 )
            // InternalLegoLang.g:2850:2: rule__LaserSensor__Group__2__Impl rule__LaserSensor__Group__3
            {
            pushFollow(FOLLOW_9);
            rule__LaserSensor__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LaserSensor__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LaserSensor__Group__2"


    // $ANTLR start "rule__LaserSensor__Group__2__Impl"
    // InternalLegoLang.g:2857:1: rule__LaserSensor__Group__2__Impl : ( 'on' ) ;
    public final void rule__LaserSensor__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2861:1: ( ( 'on' ) )
            // InternalLegoLang.g:2862:1: ( 'on' )
            {
            // InternalLegoLang.g:2862:1: ( 'on' )
            // InternalLegoLang.g:2863:2: 'on'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLaserSensorAccess().getOnKeyword_2()); 
            }
            match(input,20,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLaserSensorAccess().getOnKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LaserSensor__Group__2__Impl"


    // $ANTLR start "rule__LaserSensor__Group__3"
    // InternalLegoLang.g:2872:1: rule__LaserSensor__Group__3 : rule__LaserSensor__Group__3__Impl ;
    public final void rule__LaserSensor__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2876:1: ( rule__LaserSensor__Group__3__Impl )
            // InternalLegoLang.g:2877:2: rule__LaserSensor__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LaserSensor__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LaserSensor__Group__3"


    // $ANTLR start "rule__LaserSensor__Group__3__Impl"
    // InternalLegoLang.g:2883:1: rule__LaserSensor__Group__3__Impl : ( ( rule__LaserSensor__PositionAssignment_3 ) ) ;
    public final void rule__LaserSensor__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2887:1: ( ( ( rule__LaserSensor__PositionAssignment_3 ) ) )
            // InternalLegoLang.g:2888:1: ( ( rule__LaserSensor__PositionAssignment_3 ) )
            {
            // InternalLegoLang.g:2888:1: ( ( rule__LaserSensor__PositionAssignment_3 ) )
            // InternalLegoLang.g:2889:2: ( rule__LaserSensor__PositionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLaserSensorAccess().getPositionAssignment_3()); 
            }
            // InternalLegoLang.g:2890:2: ( rule__LaserSensor__PositionAssignment_3 )
            // InternalLegoLang.g:2890:3: rule__LaserSensor__PositionAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__LaserSensor__PositionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLaserSensorAccess().getPositionAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LaserSensor__Group__3__Impl"


    // $ANTLR start "rule__GPSSensor__Group__0"
    // InternalLegoLang.g:2899:1: rule__GPSSensor__Group__0 : rule__GPSSensor__Group__0__Impl rule__GPSSensor__Group__1 ;
    public final void rule__GPSSensor__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2903:1: ( rule__GPSSensor__Group__0__Impl rule__GPSSensor__Group__1 )
            // InternalLegoLang.g:2904:2: rule__GPSSensor__Group__0__Impl rule__GPSSensor__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__GPSSensor__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GPSSensor__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GPSSensor__Group__0"


    // $ANTLR start "rule__GPSSensor__Group__0__Impl"
    // InternalLegoLang.g:2911:1: rule__GPSSensor__Group__0__Impl : ( 'GPSSensor' ) ;
    public final void rule__GPSSensor__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2915:1: ( ( 'GPSSensor' ) )
            // InternalLegoLang.g:2916:1: ( 'GPSSensor' )
            {
            // InternalLegoLang.g:2916:1: ( 'GPSSensor' )
            // InternalLegoLang.g:2917:2: 'GPSSensor'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGPSSensorAccess().getGPSSensorKeyword_0()); 
            }
            match(input,25,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGPSSensorAccess().getGPSSensorKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GPSSensor__Group__0__Impl"


    // $ANTLR start "rule__GPSSensor__Group__1"
    // InternalLegoLang.g:2926:1: rule__GPSSensor__Group__1 : rule__GPSSensor__Group__1__Impl rule__GPSSensor__Group__2 ;
    public final void rule__GPSSensor__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2930:1: ( rule__GPSSensor__Group__1__Impl rule__GPSSensor__Group__2 )
            // InternalLegoLang.g:2931:2: rule__GPSSensor__Group__1__Impl rule__GPSSensor__Group__2
            {
            pushFollow(FOLLOW_8);
            rule__GPSSensor__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GPSSensor__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GPSSensor__Group__1"


    // $ANTLR start "rule__GPSSensor__Group__1__Impl"
    // InternalLegoLang.g:2938:1: rule__GPSSensor__Group__1__Impl : ( ( rule__GPSSensor__NameAssignment_1 ) ) ;
    public final void rule__GPSSensor__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2942:1: ( ( ( rule__GPSSensor__NameAssignment_1 ) ) )
            // InternalLegoLang.g:2943:1: ( ( rule__GPSSensor__NameAssignment_1 ) )
            {
            // InternalLegoLang.g:2943:1: ( ( rule__GPSSensor__NameAssignment_1 ) )
            // InternalLegoLang.g:2944:2: ( rule__GPSSensor__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGPSSensorAccess().getNameAssignment_1()); 
            }
            // InternalLegoLang.g:2945:2: ( rule__GPSSensor__NameAssignment_1 )
            // InternalLegoLang.g:2945:3: rule__GPSSensor__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__GPSSensor__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGPSSensorAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GPSSensor__Group__1__Impl"


    // $ANTLR start "rule__GPSSensor__Group__2"
    // InternalLegoLang.g:2953:1: rule__GPSSensor__Group__2 : rule__GPSSensor__Group__2__Impl rule__GPSSensor__Group__3 ;
    public final void rule__GPSSensor__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2957:1: ( rule__GPSSensor__Group__2__Impl rule__GPSSensor__Group__3 )
            // InternalLegoLang.g:2958:2: rule__GPSSensor__Group__2__Impl rule__GPSSensor__Group__3
            {
            pushFollow(FOLLOW_9);
            rule__GPSSensor__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GPSSensor__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GPSSensor__Group__2"


    // $ANTLR start "rule__GPSSensor__Group__2__Impl"
    // InternalLegoLang.g:2965:1: rule__GPSSensor__Group__2__Impl : ( 'on' ) ;
    public final void rule__GPSSensor__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2969:1: ( ( 'on' ) )
            // InternalLegoLang.g:2970:1: ( 'on' )
            {
            // InternalLegoLang.g:2970:1: ( 'on' )
            // InternalLegoLang.g:2971:2: 'on'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGPSSensorAccess().getOnKeyword_2()); 
            }
            match(input,20,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGPSSensorAccess().getOnKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GPSSensor__Group__2__Impl"


    // $ANTLR start "rule__GPSSensor__Group__3"
    // InternalLegoLang.g:2980:1: rule__GPSSensor__Group__3 : rule__GPSSensor__Group__3__Impl ;
    public final void rule__GPSSensor__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2984:1: ( rule__GPSSensor__Group__3__Impl )
            // InternalLegoLang.g:2985:2: rule__GPSSensor__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GPSSensor__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GPSSensor__Group__3"


    // $ANTLR start "rule__GPSSensor__Group__3__Impl"
    // InternalLegoLang.g:2991:1: rule__GPSSensor__Group__3__Impl : ( ( rule__GPSSensor__PositionAssignment_3 ) ) ;
    public final void rule__GPSSensor__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:2995:1: ( ( ( rule__GPSSensor__PositionAssignment_3 ) ) )
            // InternalLegoLang.g:2996:1: ( ( rule__GPSSensor__PositionAssignment_3 ) )
            {
            // InternalLegoLang.g:2996:1: ( ( rule__GPSSensor__PositionAssignment_3 ) )
            // InternalLegoLang.g:2997:2: ( rule__GPSSensor__PositionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGPSSensorAccess().getPositionAssignment_3()); 
            }
            // InternalLegoLang.g:2998:2: ( rule__GPSSensor__PositionAssignment_3 )
            // InternalLegoLang.g:2998:3: rule__GPSSensor__PositionAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__GPSSensor__PositionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGPSSensorAccess().getPositionAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GPSSensor__Group__3__Impl"


    // $ANTLR start "rule__GyroSensor__Group__0"
    // InternalLegoLang.g:3007:1: rule__GyroSensor__Group__0 : rule__GyroSensor__Group__0__Impl rule__GyroSensor__Group__1 ;
    public final void rule__GyroSensor__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3011:1: ( rule__GyroSensor__Group__0__Impl rule__GyroSensor__Group__1 )
            // InternalLegoLang.g:3012:2: rule__GyroSensor__Group__0__Impl rule__GyroSensor__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__GyroSensor__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GyroSensor__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GyroSensor__Group__0"


    // $ANTLR start "rule__GyroSensor__Group__0__Impl"
    // InternalLegoLang.g:3019:1: rule__GyroSensor__Group__0__Impl : ( 'GyroSensor' ) ;
    public final void rule__GyroSensor__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3023:1: ( ( 'GyroSensor' ) )
            // InternalLegoLang.g:3024:1: ( 'GyroSensor' )
            {
            // InternalLegoLang.g:3024:1: ( 'GyroSensor' )
            // InternalLegoLang.g:3025:2: 'GyroSensor'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGyroSensorAccess().getGyroSensorKeyword_0()); 
            }
            match(input,26,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGyroSensorAccess().getGyroSensorKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GyroSensor__Group__0__Impl"


    // $ANTLR start "rule__GyroSensor__Group__1"
    // InternalLegoLang.g:3034:1: rule__GyroSensor__Group__1 : rule__GyroSensor__Group__1__Impl rule__GyroSensor__Group__2 ;
    public final void rule__GyroSensor__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3038:1: ( rule__GyroSensor__Group__1__Impl rule__GyroSensor__Group__2 )
            // InternalLegoLang.g:3039:2: rule__GyroSensor__Group__1__Impl rule__GyroSensor__Group__2
            {
            pushFollow(FOLLOW_8);
            rule__GyroSensor__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GyroSensor__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GyroSensor__Group__1"


    // $ANTLR start "rule__GyroSensor__Group__1__Impl"
    // InternalLegoLang.g:3046:1: rule__GyroSensor__Group__1__Impl : ( ( rule__GyroSensor__NameAssignment_1 ) ) ;
    public final void rule__GyroSensor__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3050:1: ( ( ( rule__GyroSensor__NameAssignment_1 ) ) )
            // InternalLegoLang.g:3051:1: ( ( rule__GyroSensor__NameAssignment_1 ) )
            {
            // InternalLegoLang.g:3051:1: ( ( rule__GyroSensor__NameAssignment_1 ) )
            // InternalLegoLang.g:3052:2: ( rule__GyroSensor__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGyroSensorAccess().getNameAssignment_1()); 
            }
            // InternalLegoLang.g:3053:2: ( rule__GyroSensor__NameAssignment_1 )
            // InternalLegoLang.g:3053:3: rule__GyroSensor__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__GyroSensor__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGyroSensorAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GyroSensor__Group__1__Impl"


    // $ANTLR start "rule__GyroSensor__Group__2"
    // InternalLegoLang.g:3061:1: rule__GyroSensor__Group__2 : rule__GyroSensor__Group__2__Impl rule__GyroSensor__Group__3 ;
    public final void rule__GyroSensor__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3065:1: ( rule__GyroSensor__Group__2__Impl rule__GyroSensor__Group__3 )
            // InternalLegoLang.g:3066:2: rule__GyroSensor__Group__2__Impl rule__GyroSensor__Group__3
            {
            pushFollow(FOLLOW_9);
            rule__GyroSensor__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GyroSensor__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GyroSensor__Group__2"


    // $ANTLR start "rule__GyroSensor__Group__2__Impl"
    // InternalLegoLang.g:3073:1: rule__GyroSensor__Group__2__Impl : ( 'on' ) ;
    public final void rule__GyroSensor__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3077:1: ( ( 'on' ) )
            // InternalLegoLang.g:3078:1: ( 'on' )
            {
            // InternalLegoLang.g:3078:1: ( 'on' )
            // InternalLegoLang.g:3079:2: 'on'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGyroSensorAccess().getOnKeyword_2()); 
            }
            match(input,20,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGyroSensorAccess().getOnKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GyroSensor__Group__2__Impl"


    // $ANTLR start "rule__GyroSensor__Group__3"
    // InternalLegoLang.g:3088:1: rule__GyroSensor__Group__3 : rule__GyroSensor__Group__3__Impl ;
    public final void rule__GyroSensor__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3092:1: ( rule__GyroSensor__Group__3__Impl )
            // InternalLegoLang.g:3093:2: rule__GyroSensor__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GyroSensor__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GyroSensor__Group__3"


    // $ANTLR start "rule__GyroSensor__Group__3__Impl"
    // InternalLegoLang.g:3099:1: rule__GyroSensor__Group__3__Impl : ( ( rule__GyroSensor__PositionAssignment_3 ) ) ;
    public final void rule__GyroSensor__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3103:1: ( ( ( rule__GyroSensor__PositionAssignment_3 ) ) )
            // InternalLegoLang.g:3104:1: ( ( rule__GyroSensor__PositionAssignment_3 ) )
            {
            // InternalLegoLang.g:3104:1: ( ( rule__GyroSensor__PositionAssignment_3 ) )
            // InternalLegoLang.g:3105:2: ( rule__GyroSensor__PositionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGyroSensorAccess().getPositionAssignment_3()); 
            }
            // InternalLegoLang.g:3106:2: ( rule__GyroSensor__PositionAssignment_3 )
            // InternalLegoLang.g:3106:3: rule__GyroSensor__PositionAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__GyroSensor__PositionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGyroSensorAccess().getPositionAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GyroSensor__Group__3__Impl"


    // $ANTLR start "rule__UltraSonicSensor__Group__0"
    // InternalLegoLang.g:3115:1: rule__UltraSonicSensor__Group__0 : rule__UltraSonicSensor__Group__0__Impl rule__UltraSonicSensor__Group__1 ;
    public final void rule__UltraSonicSensor__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3119:1: ( rule__UltraSonicSensor__Group__0__Impl rule__UltraSonicSensor__Group__1 )
            // InternalLegoLang.g:3120:2: rule__UltraSonicSensor__Group__0__Impl rule__UltraSonicSensor__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__UltraSonicSensor__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UltraSonicSensor__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UltraSonicSensor__Group__0"


    // $ANTLR start "rule__UltraSonicSensor__Group__0__Impl"
    // InternalLegoLang.g:3127:1: rule__UltraSonicSensor__Group__0__Impl : ( 'UltraSonicSensor' ) ;
    public final void rule__UltraSonicSensor__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3131:1: ( ( 'UltraSonicSensor' ) )
            // InternalLegoLang.g:3132:1: ( 'UltraSonicSensor' )
            {
            // InternalLegoLang.g:3132:1: ( 'UltraSonicSensor' )
            // InternalLegoLang.g:3133:2: 'UltraSonicSensor'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUltraSonicSensorAccess().getUltraSonicSensorKeyword_0()); 
            }
            match(input,27,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUltraSonicSensorAccess().getUltraSonicSensorKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UltraSonicSensor__Group__0__Impl"


    // $ANTLR start "rule__UltraSonicSensor__Group__1"
    // InternalLegoLang.g:3142:1: rule__UltraSonicSensor__Group__1 : rule__UltraSonicSensor__Group__1__Impl rule__UltraSonicSensor__Group__2 ;
    public final void rule__UltraSonicSensor__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3146:1: ( rule__UltraSonicSensor__Group__1__Impl rule__UltraSonicSensor__Group__2 )
            // InternalLegoLang.g:3147:2: rule__UltraSonicSensor__Group__1__Impl rule__UltraSonicSensor__Group__2
            {
            pushFollow(FOLLOW_8);
            rule__UltraSonicSensor__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UltraSonicSensor__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UltraSonicSensor__Group__1"


    // $ANTLR start "rule__UltraSonicSensor__Group__1__Impl"
    // InternalLegoLang.g:3154:1: rule__UltraSonicSensor__Group__1__Impl : ( ( rule__UltraSonicSensor__NameAssignment_1 ) ) ;
    public final void rule__UltraSonicSensor__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3158:1: ( ( ( rule__UltraSonicSensor__NameAssignment_1 ) ) )
            // InternalLegoLang.g:3159:1: ( ( rule__UltraSonicSensor__NameAssignment_1 ) )
            {
            // InternalLegoLang.g:3159:1: ( ( rule__UltraSonicSensor__NameAssignment_1 ) )
            // InternalLegoLang.g:3160:2: ( rule__UltraSonicSensor__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUltraSonicSensorAccess().getNameAssignment_1()); 
            }
            // InternalLegoLang.g:3161:2: ( rule__UltraSonicSensor__NameAssignment_1 )
            // InternalLegoLang.g:3161:3: rule__UltraSonicSensor__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__UltraSonicSensor__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUltraSonicSensorAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UltraSonicSensor__Group__1__Impl"


    // $ANTLR start "rule__UltraSonicSensor__Group__2"
    // InternalLegoLang.g:3169:1: rule__UltraSonicSensor__Group__2 : rule__UltraSonicSensor__Group__2__Impl rule__UltraSonicSensor__Group__3 ;
    public final void rule__UltraSonicSensor__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3173:1: ( rule__UltraSonicSensor__Group__2__Impl rule__UltraSonicSensor__Group__3 )
            // InternalLegoLang.g:3174:2: rule__UltraSonicSensor__Group__2__Impl rule__UltraSonicSensor__Group__3
            {
            pushFollow(FOLLOW_9);
            rule__UltraSonicSensor__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UltraSonicSensor__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UltraSonicSensor__Group__2"


    // $ANTLR start "rule__UltraSonicSensor__Group__2__Impl"
    // InternalLegoLang.g:3181:1: rule__UltraSonicSensor__Group__2__Impl : ( 'on' ) ;
    public final void rule__UltraSonicSensor__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3185:1: ( ( 'on' ) )
            // InternalLegoLang.g:3186:1: ( 'on' )
            {
            // InternalLegoLang.g:3186:1: ( 'on' )
            // InternalLegoLang.g:3187:2: 'on'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUltraSonicSensorAccess().getOnKeyword_2()); 
            }
            match(input,20,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUltraSonicSensorAccess().getOnKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UltraSonicSensor__Group__2__Impl"


    // $ANTLR start "rule__UltraSonicSensor__Group__3"
    // InternalLegoLang.g:3196:1: rule__UltraSonicSensor__Group__3 : rule__UltraSonicSensor__Group__3__Impl ;
    public final void rule__UltraSonicSensor__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3200:1: ( rule__UltraSonicSensor__Group__3__Impl )
            // InternalLegoLang.g:3201:2: rule__UltraSonicSensor__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UltraSonicSensor__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UltraSonicSensor__Group__3"


    // $ANTLR start "rule__UltraSonicSensor__Group__3__Impl"
    // InternalLegoLang.g:3207:1: rule__UltraSonicSensor__Group__3__Impl : ( ( rule__UltraSonicSensor__PositionAssignment_3 ) ) ;
    public final void rule__UltraSonicSensor__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3211:1: ( ( ( rule__UltraSonicSensor__PositionAssignment_3 ) ) )
            // InternalLegoLang.g:3212:1: ( ( rule__UltraSonicSensor__PositionAssignment_3 ) )
            {
            // InternalLegoLang.g:3212:1: ( ( rule__UltraSonicSensor__PositionAssignment_3 ) )
            // InternalLegoLang.g:3213:2: ( rule__UltraSonicSensor__PositionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUltraSonicSensorAccess().getPositionAssignment_3()); 
            }
            // InternalLegoLang.g:3214:2: ( rule__UltraSonicSensor__PositionAssignment_3 )
            // InternalLegoLang.g:3214:3: rule__UltraSonicSensor__PositionAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__UltraSonicSensor__PositionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUltraSonicSensorAccess().getPositionAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UltraSonicSensor__Group__3__Impl"


    // $ANTLR start "rule__Car__Group__0"
    // InternalLegoLang.g:3223:1: rule__Car__Group__0 : rule__Car__Group__0__Impl rule__Car__Group__1 ;
    public final void rule__Car__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3227:1: ( rule__Car__Group__0__Impl rule__Car__Group__1 )
            // InternalLegoLang.g:3228:2: rule__Car__Group__0__Impl rule__Car__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__Car__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Car__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__Group__0"


    // $ANTLR start "rule__Car__Group__0__Impl"
    // InternalLegoLang.g:3235:1: rule__Car__Group__0__Impl : ( 'Car' ) ;
    public final void rule__Car__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3239:1: ( ( 'Car' ) )
            // InternalLegoLang.g:3240:1: ( 'Car' )
            {
            // InternalLegoLang.g:3240:1: ( 'Car' )
            // InternalLegoLang.g:3241:2: 'Car'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCarAccess().getCarKeyword_0()); 
            }
            match(input,28,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCarAccess().getCarKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__Group__0__Impl"


    // $ANTLR start "rule__Car__Group__1"
    // InternalLegoLang.g:3250:1: rule__Car__Group__1 : rule__Car__Group__1__Impl rule__Car__Group__2 ;
    public final void rule__Car__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3254:1: ( rule__Car__Group__1__Impl rule__Car__Group__2 )
            // InternalLegoLang.g:3255:2: rule__Car__Group__1__Impl rule__Car__Group__2
            {
            pushFollow(FOLLOW_5);
            rule__Car__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Car__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__Group__1"


    // $ANTLR start "rule__Car__Group__1__Impl"
    // InternalLegoLang.g:3262:1: rule__Car__Group__1__Impl : ( ( rule__Car__NameAssignment_1 ) ) ;
    public final void rule__Car__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3266:1: ( ( ( rule__Car__NameAssignment_1 ) ) )
            // InternalLegoLang.g:3267:1: ( ( rule__Car__NameAssignment_1 ) )
            {
            // InternalLegoLang.g:3267:1: ( ( rule__Car__NameAssignment_1 ) )
            // InternalLegoLang.g:3268:2: ( rule__Car__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCarAccess().getNameAssignment_1()); 
            }
            // InternalLegoLang.g:3269:2: ( rule__Car__NameAssignment_1 )
            // InternalLegoLang.g:3269:3: rule__Car__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Car__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCarAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__Group__1__Impl"


    // $ANTLR start "rule__Car__Group__2"
    // InternalLegoLang.g:3277:1: rule__Car__Group__2 : rule__Car__Group__2__Impl rule__Car__Group__3 ;
    public final void rule__Car__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3281:1: ( rule__Car__Group__2__Impl rule__Car__Group__3 )
            // InternalLegoLang.g:3282:2: rule__Car__Group__2__Impl rule__Car__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__Car__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Car__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__Group__2"


    // $ANTLR start "rule__Car__Group__2__Impl"
    // InternalLegoLang.g:3289:1: rule__Car__Group__2__Impl : ( '{' ) ;
    public final void rule__Car__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3293:1: ( ( '{' ) )
            // InternalLegoLang.g:3294:1: ( '{' )
            {
            // InternalLegoLang.g:3294:1: ( '{' )
            // InternalLegoLang.g:3295:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCarAccess().getLeftCurlyBracketKeyword_2()); 
            }
            match(input,16,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCarAccess().getLeftCurlyBracketKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__Group__2__Impl"


    // $ANTLR start "rule__Car__Group__3"
    // InternalLegoLang.g:3304:1: rule__Car__Group__3 : rule__Car__Group__3__Impl rule__Car__Group__4 ;
    public final void rule__Car__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3308:1: ( rule__Car__Group__3__Impl rule__Car__Group__4 )
            // InternalLegoLang.g:3309:2: rule__Car__Group__3__Impl rule__Car__Group__4
            {
            pushFollow(FOLLOW_10);
            rule__Car__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Car__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__Group__3"


    // $ANTLR start "rule__Car__Group__3__Impl"
    // InternalLegoLang.g:3316:1: rule__Car__Group__3__Impl : ( ( rule__Car__SensorAssignment_3 )* ) ;
    public final void rule__Car__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3320:1: ( ( ( rule__Car__SensorAssignment_3 )* ) )
            // InternalLegoLang.g:3321:1: ( ( rule__Car__SensorAssignment_3 )* )
            {
            // InternalLegoLang.g:3321:1: ( ( rule__Car__SensorAssignment_3 )* )
            // InternalLegoLang.g:3322:2: ( rule__Car__SensorAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCarAccess().getSensorAssignment_3()); 
            }
            // InternalLegoLang.g:3323:2: ( rule__Car__SensorAssignment_3 )*
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( ((LA16_0>=23 && LA16_0<=27)) ) {
                    alt16=1;
                }


                switch (alt16) {
            	case 1 :
            	    // InternalLegoLang.g:3323:3: rule__Car__SensorAssignment_3
            	    {
            	    pushFollow(FOLLOW_11);
            	    rule__Car__SensorAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop16;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCarAccess().getSensorAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__Group__3__Impl"


    // $ANTLR start "rule__Car__Group__4"
    // InternalLegoLang.g:3331:1: rule__Car__Group__4 : rule__Car__Group__4__Impl rule__Car__Group__5 ;
    public final void rule__Car__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3335:1: ( rule__Car__Group__4__Impl rule__Car__Group__5 )
            // InternalLegoLang.g:3336:2: rule__Car__Group__4__Impl rule__Car__Group__5
            {
            pushFollow(FOLLOW_10);
            rule__Car__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Car__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__Group__4"


    // $ANTLR start "rule__Car__Group__4__Impl"
    // InternalLegoLang.g:3343:1: rule__Car__Group__4__Impl : ( ( rule__Car__EngineAssignment_4 )* ) ;
    public final void rule__Car__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3347:1: ( ( ( rule__Car__EngineAssignment_4 )* ) )
            // InternalLegoLang.g:3348:1: ( ( rule__Car__EngineAssignment_4 )* )
            {
            // InternalLegoLang.g:3348:1: ( ( rule__Car__EngineAssignment_4 )* )
            // InternalLegoLang.g:3349:2: ( rule__Car__EngineAssignment_4 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCarAccess().getEngineAssignment_4()); 
            }
            // InternalLegoLang.g:3350:2: ( rule__Car__EngineAssignment_4 )*
            loop17:
            do {
                int alt17=2;
                int LA17_0 = input.LA(1);

                if ( (LA17_0==19||(LA17_0>=21 && LA17_0<=22)) ) {
                    alt17=1;
                }


                switch (alt17) {
            	case 1 :
            	    // InternalLegoLang.g:3350:3: rule__Car__EngineAssignment_4
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__Car__EngineAssignment_4();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop17;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCarAccess().getEngineAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__Group__4__Impl"


    // $ANTLR start "rule__Car__Group__5"
    // InternalLegoLang.g:3358:1: rule__Car__Group__5 : rule__Car__Group__5__Impl ;
    public final void rule__Car__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3362:1: ( rule__Car__Group__5__Impl )
            // InternalLegoLang.g:3363:2: rule__Car__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Car__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__Group__5"


    // $ANTLR start "rule__Car__Group__5__Impl"
    // InternalLegoLang.g:3369:1: rule__Car__Group__5__Impl : ( '}' ) ;
    public final void rule__Car__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3373:1: ( ( '}' ) )
            // InternalLegoLang.g:3374:1: ( '}' )
            {
            // InternalLegoLang.g:3374:1: ( '}' )
            // InternalLegoLang.g:3375:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCarAccess().getRightCurlyBracketKeyword_5()); 
            }
            match(input,18,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCarAccess().getRightCurlyBracketKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__Group__5__Impl"


    // $ANTLR start "rule__VitesseOperation__Group__0"
    // InternalLegoLang.g:3385:1: rule__VitesseOperation__Group__0 : rule__VitesseOperation__Group__0__Impl rule__VitesseOperation__Group__1 ;
    public final void rule__VitesseOperation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3389:1: ( rule__VitesseOperation__Group__0__Impl rule__VitesseOperation__Group__1 )
            // InternalLegoLang.g:3390:2: rule__VitesseOperation__Group__0__Impl rule__VitesseOperation__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__VitesseOperation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VitesseOperation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__Group__0"


    // $ANTLR start "rule__VitesseOperation__Group__0__Impl"
    // InternalLegoLang.g:3397:1: rule__VitesseOperation__Group__0__Impl : ( 'set' ) ;
    public final void rule__VitesseOperation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3401:1: ( ( 'set' ) )
            // InternalLegoLang.g:3402:1: ( 'set' )
            {
            // InternalLegoLang.g:3402:1: ( 'set' )
            // InternalLegoLang.g:3403:2: 'set'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVitesseOperationAccess().getSetKeyword_0()); 
            }
            match(input,29,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVitesseOperationAccess().getSetKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__Group__0__Impl"


    // $ANTLR start "rule__VitesseOperation__Group__1"
    // InternalLegoLang.g:3412:1: rule__VitesseOperation__Group__1 : rule__VitesseOperation__Group__1__Impl rule__VitesseOperation__Group__2 ;
    public final void rule__VitesseOperation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3416:1: ( rule__VitesseOperation__Group__1__Impl rule__VitesseOperation__Group__2 )
            // InternalLegoLang.g:3417:2: rule__VitesseOperation__Group__1__Impl rule__VitesseOperation__Group__2
            {
            pushFollow(FOLLOW_13);
            rule__VitesseOperation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VitesseOperation__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__Group__1"


    // $ANTLR start "rule__VitesseOperation__Group__1__Impl"
    // InternalLegoLang.g:3424:1: rule__VitesseOperation__Group__1__Impl : ( 'vitesse' ) ;
    public final void rule__VitesseOperation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3428:1: ( ( 'vitesse' ) )
            // InternalLegoLang.g:3429:1: ( 'vitesse' )
            {
            // InternalLegoLang.g:3429:1: ( 'vitesse' )
            // InternalLegoLang.g:3430:2: 'vitesse'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVitesseOperationAccess().getVitesseKeyword_1()); 
            }
            match(input,30,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVitesseOperationAccess().getVitesseKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__Group__1__Impl"


    // $ANTLR start "rule__VitesseOperation__Group__2"
    // InternalLegoLang.g:3439:1: rule__VitesseOperation__Group__2 : rule__VitesseOperation__Group__2__Impl rule__VitesseOperation__Group__3 ;
    public final void rule__VitesseOperation__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3443:1: ( rule__VitesseOperation__Group__2__Impl rule__VitesseOperation__Group__3 )
            // InternalLegoLang.g:3444:2: rule__VitesseOperation__Group__2__Impl rule__VitesseOperation__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__VitesseOperation__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VitesseOperation__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__Group__2"


    // $ANTLR start "rule__VitesseOperation__Group__2__Impl"
    // InternalLegoLang.g:3451:1: rule__VitesseOperation__Group__2__Impl : ( '(' ) ;
    public final void rule__VitesseOperation__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3455:1: ( ( '(' ) )
            // InternalLegoLang.g:3456:1: ( '(' )
            {
            // InternalLegoLang.g:3456:1: ( '(' )
            // InternalLegoLang.g:3457:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVitesseOperationAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVitesseOperationAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__Group__2__Impl"


    // $ANTLR start "rule__VitesseOperation__Group__3"
    // InternalLegoLang.g:3466:1: rule__VitesseOperation__Group__3 : rule__VitesseOperation__Group__3__Impl rule__VitesseOperation__Group__4 ;
    public final void rule__VitesseOperation__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3470:1: ( rule__VitesseOperation__Group__3__Impl rule__VitesseOperation__Group__4 )
            // InternalLegoLang.g:3471:2: rule__VitesseOperation__Group__3__Impl rule__VitesseOperation__Group__4
            {
            pushFollow(FOLLOW_14);
            rule__VitesseOperation__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VitesseOperation__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__Group__3"


    // $ANTLR start "rule__VitesseOperation__Group__3__Impl"
    // InternalLegoLang.g:3478:1: rule__VitesseOperation__Group__3__Impl : ( ( rule__VitesseOperation__WheelengineAssignment_3 ) ) ;
    public final void rule__VitesseOperation__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3482:1: ( ( ( rule__VitesseOperation__WheelengineAssignment_3 ) ) )
            // InternalLegoLang.g:3483:1: ( ( rule__VitesseOperation__WheelengineAssignment_3 ) )
            {
            // InternalLegoLang.g:3483:1: ( ( rule__VitesseOperation__WheelengineAssignment_3 ) )
            // InternalLegoLang.g:3484:2: ( rule__VitesseOperation__WheelengineAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVitesseOperationAccess().getWheelengineAssignment_3()); 
            }
            // InternalLegoLang.g:3485:2: ( rule__VitesseOperation__WheelengineAssignment_3 )
            // InternalLegoLang.g:3485:3: rule__VitesseOperation__WheelengineAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__VitesseOperation__WheelengineAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVitesseOperationAccess().getWheelengineAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__Group__3__Impl"


    // $ANTLR start "rule__VitesseOperation__Group__4"
    // InternalLegoLang.g:3493:1: rule__VitesseOperation__Group__4 : rule__VitesseOperation__Group__4__Impl rule__VitesseOperation__Group__5 ;
    public final void rule__VitesseOperation__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3497:1: ( rule__VitesseOperation__Group__4__Impl rule__VitesseOperation__Group__5 )
            // InternalLegoLang.g:3498:2: rule__VitesseOperation__Group__4__Impl rule__VitesseOperation__Group__5
            {
            pushFollow(FOLLOW_15);
            rule__VitesseOperation__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VitesseOperation__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__Group__4"


    // $ANTLR start "rule__VitesseOperation__Group__4__Impl"
    // InternalLegoLang.g:3505:1: rule__VitesseOperation__Group__4__Impl : ( ')' ) ;
    public final void rule__VitesseOperation__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3509:1: ( ( ')' ) )
            // InternalLegoLang.g:3510:1: ( ')' )
            {
            // InternalLegoLang.g:3510:1: ( ')' )
            // InternalLegoLang.g:3511:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVitesseOperationAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVitesseOperationAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__Group__4__Impl"


    // $ANTLR start "rule__VitesseOperation__Group__5"
    // InternalLegoLang.g:3520:1: rule__VitesseOperation__Group__5 : rule__VitesseOperation__Group__5__Impl rule__VitesseOperation__Group__6 ;
    public final void rule__VitesseOperation__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3524:1: ( rule__VitesseOperation__Group__5__Impl rule__VitesseOperation__Group__6 )
            // InternalLegoLang.g:3525:2: rule__VitesseOperation__Group__5__Impl rule__VitesseOperation__Group__6
            {
            pushFollow(FOLLOW_16);
            rule__VitesseOperation__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VitesseOperation__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__Group__5"


    // $ANTLR start "rule__VitesseOperation__Group__5__Impl"
    // InternalLegoLang.g:3532:1: rule__VitesseOperation__Group__5__Impl : ( '=' ) ;
    public final void rule__VitesseOperation__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3536:1: ( ( '=' ) )
            // InternalLegoLang.g:3537:1: ( '=' )
            {
            // InternalLegoLang.g:3537:1: ( '=' )
            // InternalLegoLang.g:3538:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVitesseOperationAccess().getEqualsSignKeyword_5()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVitesseOperationAccess().getEqualsSignKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__Group__5__Impl"


    // $ANTLR start "rule__VitesseOperation__Group__6"
    // InternalLegoLang.g:3547:1: rule__VitesseOperation__Group__6 : rule__VitesseOperation__Group__6__Impl ;
    public final void rule__VitesseOperation__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3551:1: ( rule__VitesseOperation__Group__6__Impl )
            // InternalLegoLang.g:3552:2: rule__VitesseOperation__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VitesseOperation__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__Group__6"


    // $ANTLR start "rule__VitesseOperation__Group__6__Impl"
    // InternalLegoLang.g:3558:1: rule__VitesseOperation__Group__6__Impl : ( ( rule__VitesseOperation__RightAssignment_6 ) ) ;
    public final void rule__VitesseOperation__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3562:1: ( ( ( rule__VitesseOperation__RightAssignment_6 ) ) )
            // InternalLegoLang.g:3563:1: ( ( rule__VitesseOperation__RightAssignment_6 ) )
            {
            // InternalLegoLang.g:3563:1: ( ( rule__VitesseOperation__RightAssignment_6 ) )
            // InternalLegoLang.g:3564:2: ( rule__VitesseOperation__RightAssignment_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVitesseOperationAccess().getRightAssignment_6()); 
            }
            // InternalLegoLang.g:3565:2: ( rule__VitesseOperation__RightAssignment_6 )
            // InternalLegoLang.g:3565:3: rule__VitesseOperation__RightAssignment_6
            {
            pushFollow(FOLLOW_2);
            rule__VitesseOperation__RightAssignment_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVitesseOperationAccess().getRightAssignment_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__Group__6__Impl"


    // $ANTLR start "rule__BreakMotor__Group__0"
    // InternalLegoLang.g:3574:1: rule__BreakMotor__Group__0 : rule__BreakMotor__Group__0__Impl rule__BreakMotor__Group__1 ;
    public final void rule__BreakMotor__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3578:1: ( rule__BreakMotor__Group__0__Impl rule__BreakMotor__Group__1 )
            // InternalLegoLang.g:3579:2: rule__BreakMotor__Group__0__Impl rule__BreakMotor__Group__1
            {
            pushFollow(FOLLOW_17);
            rule__BreakMotor__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BreakMotor__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakMotor__Group__0"


    // $ANTLR start "rule__BreakMotor__Group__0__Impl"
    // InternalLegoLang.g:3586:1: rule__BreakMotor__Group__0__Impl : ( 'break' ) ;
    public final void rule__BreakMotor__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3590:1: ( ( 'break' ) )
            // InternalLegoLang.g:3591:1: ( 'break' )
            {
            // InternalLegoLang.g:3591:1: ( 'break' )
            // InternalLegoLang.g:3592:2: 'break'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakMotorAccess().getBreakKeyword_0()); 
            }
            match(input,34,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakMotorAccess().getBreakKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakMotor__Group__0__Impl"


    // $ANTLR start "rule__BreakMotor__Group__1"
    // InternalLegoLang.g:3601:1: rule__BreakMotor__Group__1 : rule__BreakMotor__Group__1__Impl rule__BreakMotor__Group__2 ;
    public final void rule__BreakMotor__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3605:1: ( rule__BreakMotor__Group__1__Impl rule__BreakMotor__Group__2 )
            // InternalLegoLang.g:3606:2: rule__BreakMotor__Group__1__Impl rule__BreakMotor__Group__2
            {
            pushFollow(FOLLOW_13);
            rule__BreakMotor__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BreakMotor__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakMotor__Group__1"


    // $ANTLR start "rule__BreakMotor__Group__1__Impl"
    // InternalLegoLang.g:3613:1: rule__BreakMotor__Group__1__Impl : ( 'motor' ) ;
    public final void rule__BreakMotor__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3617:1: ( ( 'motor' ) )
            // InternalLegoLang.g:3618:1: ( 'motor' )
            {
            // InternalLegoLang.g:3618:1: ( 'motor' )
            // InternalLegoLang.g:3619:2: 'motor'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakMotorAccess().getMotorKeyword_1()); 
            }
            match(input,35,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakMotorAccess().getMotorKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakMotor__Group__1__Impl"


    // $ANTLR start "rule__BreakMotor__Group__2"
    // InternalLegoLang.g:3628:1: rule__BreakMotor__Group__2 : rule__BreakMotor__Group__2__Impl rule__BreakMotor__Group__3 ;
    public final void rule__BreakMotor__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3632:1: ( rule__BreakMotor__Group__2__Impl rule__BreakMotor__Group__3 )
            // InternalLegoLang.g:3633:2: rule__BreakMotor__Group__2__Impl rule__BreakMotor__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__BreakMotor__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BreakMotor__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakMotor__Group__2"


    // $ANTLR start "rule__BreakMotor__Group__2__Impl"
    // InternalLegoLang.g:3640:1: rule__BreakMotor__Group__2__Impl : ( '(' ) ;
    public final void rule__BreakMotor__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3644:1: ( ( '(' ) )
            // InternalLegoLang.g:3645:1: ( '(' )
            {
            // InternalLegoLang.g:3645:1: ( '(' )
            // InternalLegoLang.g:3646:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakMotorAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakMotorAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakMotor__Group__2__Impl"


    // $ANTLR start "rule__BreakMotor__Group__3"
    // InternalLegoLang.g:3655:1: rule__BreakMotor__Group__3 : rule__BreakMotor__Group__3__Impl rule__BreakMotor__Group__4 ;
    public final void rule__BreakMotor__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3659:1: ( rule__BreakMotor__Group__3__Impl rule__BreakMotor__Group__4 )
            // InternalLegoLang.g:3660:2: rule__BreakMotor__Group__3__Impl rule__BreakMotor__Group__4
            {
            pushFollow(FOLLOW_14);
            rule__BreakMotor__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BreakMotor__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakMotor__Group__3"


    // $ANTLR start "rule__BreakMotor__Group__3__Impl"
    // InternalLegoLang.g:3667:1: rule__BreakMotor__Group__3__Impl : ( ( rule__BreakMotor__EngineAssignment_3 ) ) ;
    public final void rule__BreakMotor__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3671:1: ( ( ( rule__BreakMotor__EngineAssignment_3 ) ) )
            // InternalLegoLang.g:3672:1: ( ( rule__BreakMotor__EngineAssignment_3 ) )
            {
            // InternalLegoLang.g:3672:1: ( ( rule__BreakMotor__EngineAssignment_3 ) )
            // InternalLegoLang.g:3673:2: ( rule__BreakMotor__EngineAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakMotorAccess().getEngineAssignment_3()); 
            }
            // InternalLegoLang.g:3674:2: ( rule__BreakMotor__EngineAssignment_3 )
            // InternalLegoLang.g:3674:3: rule__BreakMotor__EngineAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__BreakMotor__EngineAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakMotorAccess().getEngineAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakMotor__Group__3__Impl"


    // $ANTLR start "rule__BreakMotor__Group__4"
    // InternalLegoLang.g:3682:1: rule__BreakMotor__Group__4 : rule__BreakMotor__Group__4__Impl ;
    public final void rule__BreakMotor__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3686:1: ( rule__BreakMotor__Group__4__Impl )
            // InternalLegoLang.g:3687:2: rule__BreakMotor__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BreakMotor__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakMotor__Group__4"


    // $ANTLR start "rule__BreakMotor__Group__4__Impl"
    // InternalLegoLang.g:3693:1: rule__BreakMotor__Group__4__Impl : ( ')' ) ;
    public final void rule__BreakMotor__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3697:1: ( ( ')' ) )
            // InternalLegoLang.g:3698:1: ( ')' )
            {
            // InternalLegoLang.g:3698:1: ( ')' )
            // InternalLegoLang.g:3699:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakMotorAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakMotorAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakMotor__Group__4__Impl"


    // $ANTLR start "rule__PositionOperation__Group__0"
    // InternalLegoLang.g:3709:1: rule__PositionOperation__Group__0 : rule__PositionOperation__Group__0__Impl rule__PositionOperation__Group__1 ;
    public final void rule__PositionOperation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3713:1: ( rule__PositionOperation__Group__0__Impl rule__PositionOperation__Group__1 )
            // InternalLegoLang.g:3714:2: rule__PositionOperation__Group__0__Impl rule__PositionOperation__Group__1
            {
            pushFollow(FOLLOW_18);
            rule__PositionOperation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PositionOperation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__Group__0"


    // $ANTLR start "rule__PositionOperation__Group__0__Impl"
    // InternalLegoLang.g:3721:1: rule__PositionOperation__Group__0__Impl : ( 'set' ) ;
    public final void rule__PositionOperation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3725:1: ( ( 'set' ) )
            // InternalLegoLang.g:3726:1: ( 'set' )
            {
            // InternalLegoLang.g:3726:1: ( 'set' )
            // InternalLegoLang.g:3727:2: 'set'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPositionOperationAccess().getSetKeyword_0()); 
            }
            match(input,29,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPositionOperationAccess().getSetKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__Group__0__Impl"


    // $ANTLR start "rule__PositionOperation__Group__1"
    // InternalLegoLang.g:3736:1: rule__PositionOperation__Group__1 : rule__PositionOperation__Group__1__Impl rule__PositionOperation__Group__2 ;
    public final void rule__PositionOperation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3740:1: ( rule__PositionOperation__Group__1__Impl rule__PositionOperation__Group__2 )
            // InternalLegoLang.g:3741:2: rule__PositionOperation__Group__1__Impl rule__PositionOperation__Group__2
            {
            pushFollow(FOLLOW_13);
            rule__PositionOperation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PositionOperation__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__Group__1"


    // $ANTLR start "rule__PositionOperation__Group__1__Impl"
    // InternalLegoLang.g:3748:1: rule__PositionOperation__Group__1__Impl : ( 'degres' ) ;
    public final void rule__PositionOperation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3752:1: ( ( 'degres' ) )
            // InternalLegoLang.g:3753:1: ( 'degres' )
            {
            // InternalLegoLang.g:3753:1: ( 'degres' )
            // InternalLegoLang.g:3754:2: 'degres'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPositionOperationAccess().getDegresKeyword_1()); 
            }
            match(input,36,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPositionOperationAccess().getDegresKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__Group__1__Impl"


    // $ANTLR start "rule__PositionOperation__Group__2"
    // InternalLegoLang.g:3763:1: rule__PositionOperation__Group__2 : rule__PositionOperation__Group__2__Impl rule__PositionOperation__Group__3 ;
    public final void rule__PositionOperation__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3767:1: ( rule__PositionOperation__Group__2__Impl rule__PositionOperation__Group__3 )
            // InternalLegoLang.g:3768:2: rule__PositionOperation__Group__2__Impl rule__PositionOperation__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__PositionOperation__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PositionOperation__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__Group__2"


    // $ANTLR start "rule__PositionOperation__Group__2__Impl"
    // InternalLegoLang.g:3775:1: rule__PositionOperation__Group__2__Impl : ( '(' ) ;
    public final void rule__PositionOperation__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3779:1: ( ( '(' ) )
            // InternalLegoLang.g:3780:1: ( '(' )
            {
            // InternalLegoLang.g:3780:1: ( '(' )
            // InternalLegoLang.g:3781:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPositionOperationAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPositionOperationAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__Group__2__Impl"


    // $ANTLR start "rule__PositionOperation__Group__3"
    // InternalLegoLang.g:3790:1: rule__PositionOperation__Group__3 : rule__PositionOperation__Group__3__Impl rule__PositionOperation__Group__4 ;
    public final void rule__PositionOperation__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3794:1: ( rule__PositionOperation__Group__3__Impl rule__PositionOperation__Group__4 )
            // InternalLegoLang.g:3795:2: rule__PositionOperation__Group__3__Impl rule__PositionOperation__Group__4
            {
            pushFollow(FOLLOW_14);
            rule__PositionOperation__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PositionOperation__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__Group__3"


    // $ANTLR start "rule__PositionOperation__Group__3__Impl"
    // InternalLegoLang.g:3802:1: rule__PositionOperation__Group__3__Impl : ( ( rule__PositionOperation__MotorizedarmengineAssignment_3 ) ) ;
    public final void rule__PositionOperation__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3806:1: ( ( ( rule__PositionOperation__MotorizedarmengineAssignment_3 ) ) )
            // InternalLegoLang.g:3807:1: ( ( rule__PositionOperation__MotorizedarmengineAssignment_3 ) )
            {
            // InternalLegoLang.g:3807:1: ( ( rule__PositionOperation__MotorizedarmengineAssignment_3 ) )
            // InternalLegoLang.g:3808:2: ( rule__PositionOperation__MotorizedarmengineAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPositionOperationAccess().getMotorizedarmengineAssignment_3()); 
            }
            // InternalLegoLang.g:3809:2: ( rule__PositionOperation__MotorizedarmengineAssignment_3 )
            // InternalLegoLang.g:3809:3: rule__PositionOperation__MotorizedarmengineAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__PositionOperation__MotorizedarmengineAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPositionOperationAccess().getMotorizedarmengineAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__Group__3__Impl"


    // $ANTLR start "rule__PositionOperation__Group__4"
    // InternalLegoLang.g:3817:1: rule__PositionOperation__Group__4 : rule__PositionOperation__Group__4__Impl rule__PositionOperation__Group__5 ;
    public final void rule__PositionOperation__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3821:1: ( rule__PositionOperation__Group__4__Impl rule__PositionOperation__Group__5 )
            // InternalLegoLang.g:3822:2: rule__PositionOperation__Group__4__Impl rule__PositionOperation__Group__5
            {
            pushFollow(FOLLOW_15);
            rule__PositionOperation__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PositionOperation__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__Group__4"


    // $ANTLR start "rule__PositionOperation__Group__4__Impl"
    // InternalLegoLang.g:3829:1: rule__PositionOperation__Group__4__Impl : ( ')' ) ;
    public final void rule__PositionOperation__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3833:1: ( ( ')' ) )
            // InternalLegoLang.g:3834:1: ( ')' )
            {
            // InternalLegoLang.g:3834:1: ( ')' )
            // InternalLegoLang.g:3835:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPositionOperationAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPositionOperationAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__Group__4__Impl"


    // $ANTLR start "rule__PositionOperation__Group__5"
    // InternalLegoLang.g:3844:1: rule__PositionOperation__Group__5 : rule__PositionOperation__Group__5__Impl rule__PositionOperation__Group__6 ;
    public final void rule__PositionOperation__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3848:1: ( rule__PositionOperation__Group__5__Impl rule__PositionOperation__Group__6 )
            // InternalLegoLang.g:3849:2: rule__PositionOperation__Group__5__Impl rule__PositionOperation__Group__6
            {
            pushFollow(FOLLOW_16);
            rule__PositionOperation__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PositionOperation__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__Group__5"


    // $ANTLR start "rule__PositionOperation__Group__5__Impl"
    // InternalLegoLang.g:3856:1: rule__PositionOperation__Group__5__Impl : ( '=' ) ;
    public final void rule__PositionOperation__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3860:1: ( ( '=' ) )
            // InternalLegoLang.g:3861:1: ( '=' )
            {
            // InternalLegoLang.g:3861:1: ( '=' )
            // InternalLegoLang.g:3862:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPositionOperationAccess().getEqualsSignKeyword_5()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPositionOperationAccess().getEqualsSignKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__Group__5__Impl"


    // $ANTLR start "rule__PositionOperation__Group__6"
    // InternalLegoLang.g:3871:1: rule__PositionOperation__Group__6 : rule__PositionOperation__Group__6__Impl ;
    public final void rule__PositionOperation__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3875:1: ( rule__PositionOperation__Group__6__Impl )
            // InternalLegoLang.g:3876:2: rule__PositionOperation__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PositionOperation__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__Group__6"


    // $ANTLR start "rule__PositionOperation__Group__6__Impl"
    // InternalLegoLang.g:3882:1: rule__PositionOperation__Group__6__Impl : ( ( rule__PositionOperation__RightAssignment_6 ) ) ;
    public final void rule__PositionOperation__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3886:1: ( ( ( rule__PositionOperation__RightAssignment_6 ) ) )
            // InternalLegoLang.g:3887:1: ( ( rule__PositionOperation__RightAssignment_6 ) )
            {
            // InternalLegoLang.g:3887:1: ( ( rule__PositionOperation__RightAssignment_6 ) )
            // InternalLegoLang.g:3888:2: ( rule__PositionOperation__RightAssignment_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPositionOperationAccess().getRightAssignment_6()); 
            }
            // InternalLegoLang.g:3889:2: ( rule__PositionOperation__RightAssignment_6 )
            // InternalLegoLang.g:3889:3: rule__PositionOperation__RightAssignment_6
            {
            pushFollow(FOLLOW_2);
            rule__PositionOperation__RightAssignment_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPositionOperationAccess().getRightAssignment_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__Group__6__Impl"


    // $ANTLR start "rule__ForceOperation__Group__0"
    // InternalLegoLang.g:3898:1: rule__ForceOperation__Group__0 : rule__ForceOperation__Group__0__Impl rule__ForceOperation__Group__1 ;
    public final void rule__ForceOperation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3902:1: ( rule__ForceOperation__Group__0__Impl rule__ForceOperation__Group__1 )
            // InternalLegoLang.g:3903:2: rule__ForceOperation__Group__0__Impl rule__ForceOperation__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__ForceOperation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForceOperation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__Group__0"


    // $ANTLR start "rule__ForceOperation__Group__0__Impl"
    // InternalLegoLang.g:3910:1: rule__ForceOperation__Group__0__Impl : ( 'set' ) ;
    public final void rule__ForceOperation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3914:1: ( ( 'set' ) )
            // InternalLegoLang.g:3915:1: ( 'set' )
            {
            // InternalLegoLang.g:3915:1: ( 'set' )
            // InternalLegoLang.g:3916:2: 'set'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForceOperationAccess().getSetKeyword_0()); 
            }
            match(input,29,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForceOperationAccess().getSetKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__Group__0__Impl"


    // $ANTLR start "rule__ForceOperation__Group__1"
    // InternalLegoLang.g:3925:1: rule__ForceOperation__Group__1 : rule__ForceOperation__Group__1__Impl rule__ForceOperation__Group__2 ;
    public final void rule__ForceOperation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3929:1: ( rule__ForceOperation__Group__1__Impl rule__ForceOperation__Group__2 )
            // InternalLegoLang.g:3930:2: rule__ForceOperation__Group__1__Impl rule__ForceOperation__Group__2
            {
            pushFollow(FOLLOW_13);
            rule__ForceOperation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForceOperation__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__Group__1"


    // $ANTLR start "rule__ForceOperation__Group__1__Impl"
    // InternalLegoLang.g:3937:1: rule__ForceOperation__Group__1__Impl : ( 'strength' ) ;
    public final void rule__ForceOperation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3941:1: ( ( 'strength' ) )
            // InternalLegoLang.g:3942:1: ( 'strength' )
            {
            // InternalLegoLang.g:3942:1: ( 'strength' )
            // InternalLegoLang.g:3943:2: 'strength'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForceOperationAccess().getStrengthKeyword_1()); 
            }
            match(input,37,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForceOperationAccess().getStrengthKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__Group__1__Impl"


    // $ANTLR start "rule__ForceOperation__Group__2"
    // InternalLegoLang.g:3952:1: rule__ForceOperation__Group__2 : rule__ForceOperation__Group__2__Impl rule__ForceOperation__Group__3 ;
    public final void rule__ForceOperation__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3956:1: ( rule__ForceOperation__Group__2__Impl rule__ForceOperation__Group__3 )
            // InternalLegoLang.g:3957:2: rule__ForceOperation__Group__2__Impl rule__ForceOperation__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__ForceOperation__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForceOperation__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__Group__2"


    // $ANTLR start "rule__ForceOperation__Group__2__Impl"
    // InternalLegoLang.g:3964:1: rule__ForceOperation__Group__2__Impl : ( '(' ) ;
    public final void rule__ForceOperation__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3968:1: ( ( '(' ) )
            // InternalLegoLang.g:3969:1: ( '(' )
            {
            // InternalLegoLang.g:3969:1: ( '(' )
            // InternalLegoLang.g:3970:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForceOperationAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForceOperationAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__Group__2__Impl"


    // $ANTLR start "rule__ForceOperation__Group__3"
    // InternalLegoLang.g:3979:1: rule__ForceOperation__Group__3 : rule__ForceOperation__Group__3__Impl rule__ForceOperation__Group__4 ;
    public final void rule__ForceOperation__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3983:1: ( rule__ForceOperation__Group__3__Impl rule__ForceOperation__Group__4 )
            // InternalLegoLang.g:3984:2: rule__ForceOperation__Group__3__Impl rule__ForceOperation__Group__4
            {
            pushFollow(FOLLOW_14);
            rule__ForceOperation__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForceOperation__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__Group__3"


    // $ANTLR start "rule__ForceOperation__Group__3__Impl"
    // InternalLegoLang.g:3991:1: rule__ForceOperation__Group__3__Impl : ( ( rule__ForceOperation__PaintballlauncherengineAssignment_3 ) ) ;
    public final void rule__ForceOperation__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:3995:1: ( ( ( rule__ForceOperation__PaintballlauncherengineAssignment_3 ) ) )
            // InternalLegoLang.g:3996:1: ( ( rule__ForceOperation__PaintballlauncherengineAssignment_3 ) )
            {
            // InternalLegoLang.g:3996:1: ( ( rule__ForceOperation__PaintballlauncherengineAssignment_3 ) )
            // InternalLegoLang.g:3997:2: ( rule__ForceOperation__PaintballlauncherengineAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForceOperationAccess().getPaintballlauncherengineAssignment_3()); 
            }
            // InternalLegoLang.g:3998:2: ( rule__ForceOperation__PaintballlauncherengineAssignment_3 )
            // InternalLegoLang.g:3998:3: rule__ForceOperation__PaintballlauncherengineAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__ForceOperation__PaintballlauncherengineAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForceOperationAccess().getPaintballlauncherengineAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__Group__3__Impl"


    // $ANTLR start "rule__ForceOperation__Group__4"
    // InternalLegoLang.g:4006:1: rule__ForceOperation__Group__4 : rule__ForceOperation__Group__4__Impl rule__ForceOperation__Group__5 ;
    public final void rule__ForceOperation__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4010:1: ( rule__ForceOperation__Group__4__Impl rule__ForceOperation__Group__5 )
            // InternalLegoLang.g:4011:2: rule__ForceOperation__Group__4__Impl rule__ForceOperation__Group__5
            {
            pushFollow(FOLLOW_15);
            rule__ForceOperation__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForceOperation__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__Group__4"


    // $ANTLR start "rule__ForceOperation__Group__4__Impl"
    // InternalLegoLang.g:4018:1: rule__ForceOperation__Group__4__Impl : ( ')' ) ;
    public final void rule__ForceOperation__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4022:1: ( ( ')' ) )
            // InternalLegoLang.g:4023:1: ( ')' )
            {
            // InternalLegoLang.g:4023:1: ( ')' )
            // InternalLegoLang.g:4024:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForceOperationAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForceOperationAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__Group__4__Impl"


    // $ANTLR start "rule__ForceOperation__Group__5"
    // InternalLegoLang.g:4033:1: rule__ForceOperation__Group__5 : rule__ForceOperation__Group__5__Impl rule__ForceOperation__Group__6 ;
    public final void rule__ForceOperation__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4037:1: ( rule__ForceOperation__Group__5__Impl rule__ForceOperation__Group__6 )
            // InternalLegoLang.g:4038:2: rule__ForceOperation__Group__5__Impl rule__ForceOperation__Group__6
            {
            pushFollow(FOLLOW_16);
            rule__ForceOperation__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ForceOperation__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__Group__5"


    // $ANTLR start "rule__ForceOperation__Group__5__Impl"
    // InternalLegoLang.g:4045:1: rule__ForceOperation__Group__5__Impl : ( '=' ) ;
    public final void rule__ForceOperation__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4049:1: ( ( '=' ) )
            // InternalLegoLang.g:4050:1: ( '=' )
            {
            // InternalLegoLang.g:4050:1: ( '=' )
            // InternalLegoLang.g:4051:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForceOperationAccess().getEqualsSignKeyword_5()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForceOperationAccess().getEqualsSignKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__Group__5__Impl"


    // $ANTLR start "rule__ForceOperation__Group__6"
    // InternalLegoLang.g:4060:1: rule__ForceOperation__Group__6 : rule__ForceOperation__Group__6__Impl ;
    public final void rule__ForceOperation__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4064:1: ( rule__ForceOperation__Group__6__Impl )
            // InternalLegoLang.g:4065:2: rule__ForceOperation__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ForceOperation__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__Group__6"


    // $ANTLR start "rule__ForceOperation__Group__6__Impl"
    // InternalLegoLang.g:4071:1: rule__ForceOperation__Group__6__Impl : ( ( rule__ForceOperation__RightAssignment_6 ) ) ;
    public final void rule__ForceOperation__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4075:1: ( ( ( rule__ForceOperation__RightAssignment_6 ) ) )
            // InternalLegoLang.g:4076:1: ( ( rule__ForceOperation__RightAssignment_6 ) )
            {
            // InternalLegoLang.g:4076:1: ( ( rule__ForceOperation__RightAssignment_6 ) )
            // InternalLegoLang.g:4077:2: ( rule__ForceOperation__RightAssignment_6 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForceOperationAccess().getRightAssignment_6()); 
            }
            // InternalLegoLang.g:4078:2: ( rule__ForceOperation__RightAssignment_6 )
            // InternalLegoLang.g:4078:3: rule__ForceOperation__RightAssignment_6
            {
            pushFollow(FOLLOW_2);
            rule__ForceOperation__RightAssignment_6();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForceOperationAccess().getRightAssignment_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__Group__6__Impl"


    // $ANTLR start "rule__ColorOperation__Group__0"
    // InternalLegoLang.g:4087:1: rule__ColorOperation__Group__0 : rule__ColorOperation__Group__0__Impl rule__ColorOperation__Group__1 ;
    public final void rule__ColorOperation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4091:1: ( rule__ColorOperation__Group__0__Impl rule__ColorOperation__Group__1 )
            // InternalLegoLang.g:4092:2: rule__ColorOperation__Group__0__Impl rule__ColorOperation__Group__1
            {
            pushFollow(FOLLOW_20);
            rule__ColorOperation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColorOperation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorOperation__Group__0"


    // $ANTLR start "rule__ColorOperation__Group__0__Impl"
    // InternalLegoLang.g:4099:1: rule__ColorOperation__Group__0__Impl : ( 'get' ) ;
    public final void rule__ColorOperation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4103:1: ( ( 'get' ) )
            // InternalLegoLang.g:4104:1: ( 'get' )
            {
            // InternalLegoLang.g:4104:1: ( 'get' )
            // InternalLegoLang.g:4105:2: 'get'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorOperationAccess().getGetKeyword_0()); 
            }
            match(input,38,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorOperationAccess().getGetKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorOperation__Group__0__Impl"


    // $ANTLR start "rule__ColorOperation__Group__1"
    // InternalLegoLang.g:4114:1: rule__ColorOperation__Group__1 : rule__ColorOperation__Group__1__Impl rule__ColorOperation__Group__2 ;
    public final void rule__ColorOperation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4118:1: ( rule__ColorOperation__Group__1__Impl rule__ColorOperation__Group__2 )
            // InternalLegoLang.g:4119:2: rule__ColorOperation__Group__1__Impl rule__ColorOperation__Group__2
            {
            pushFollow(FOLLOW_13);
            rule__ColorOperation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColorOperation__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorOperation__Group__1"


    // $ANTLR start "rule__ColorOperation__Group__1__Impl"
    // InternalLegoLang.g:4126:1: rule__ColorOperation__Group__1__Impl : ( 'color' ) ;
    public final void rule__ColorOperation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4130:1: ( ( 'color' ) )
            // InternalLegoLang.g:4131:1: ( 'color' )
            {
            // InternalLegoLang.g:4131:1: ( 'color' )
            // InternalLegoLang.g:4132:2: 'color'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorOperationAccess().getColorKeyword_1()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorOperationAccess().getColorKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorOperation__Group__1__Impl"


    // $ANTLR start "rule__ColorOperation__Group__2"
    // InternalLegoLang.g:4141:1: rule__ColorOperation__Group__2 : rule__ColorOperation__Group__2__Impl rule__ColorOperation__Group__3 ;
    public final void rule__ColorOperation__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4145:1: ( rule__ColorOperation__Group__2__Impl rule__ColorOperation__Group__3 )
            // InternalLegoLang.g:4146:2: rule__ColorOperation__Group__2__Impl rule__ColorOperation__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__ColorOperation__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColorOperation__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorOperation__Group__2"


    // $ANTLR start "rule__ColorOperation__Group__2__Impl"
    // InternalLegoLang.g:4153:1: rule__ColorOperation__Group__2__Impl : ( '(' ) ;
    public final void rule__ColorOperation__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4157:1: ( ( '(' ) )
            // InternalLegoLang.g:4158:1: ( '(' )
            {
            // InternalLegoLang.g:4158:1: ( '(' )
            // InternalLegoLang.g:4159:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorOperationAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorOperationAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorOperation__Group__2__Impl"


    // $ANTLR start "rule__ColorOperation__Group__3"
    // InternalLegoLang.g:4168:1: rule__ColorOperation__Group__3 : rule__ColorOperation__Group__3__Impl rule__ColorOperation__Group__4 ;
    public final void rule__ColorOperation__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4172:1: ( rule__ColorOperation__Group__3__Impl rule__ColorOperation__Group__4 )
            // InternalLegoLang.g:4173:2: rule__ColorOperation__Group__3__Impl rule__ColorOperation__Group__4
            {
            pushFollow(FOLLOW_14);
            rule__ColorOperation__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ColorOperation__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorOperation__Group__3"


    // $ANTLR start "rule__ColorOperation__Group__3__Impl"
    // InternalLegoLang.g:4180:1: rule__ColorOperation__Group__3__Impl : ( ( rule__ColorOperation__ColorsensorAssignment_3 ) ) ;
    public final void rule__ColorOperation__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4184:1: ( ( ( rule__ColorOperation__ColorsensorAssignment_3 ) ) )
            // InternalLegoLang.g:4185:1: ( ( rule__ColorOperation__ColorsensorAssignment_3 ) )
            {
            // InternalLegoLang.g:4185:1: ( ( rule__ColorOperation__ColorsensorAssignment_3 ) )
            // InternalLegoLang.g:4186:2: ( rule__ColorOperation__ColorsensorAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorOperationAccess().getColorsensorAssignment_3()); 
            }
            // InternalLegoLang.g:4187:2: ( rule__ColorOperation__ColorsensorAssignment_3 )
            // InternalLegoLang.g:4187:3: rule__ColorOperation__ColorsensorAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__ColorOperation__ColorsensorAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorOperationAccess().getColorsensorAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorOperation__Group__3__Impl"


    // $ANTLR start "rule__ColorOperation__Group__4"
    // InternalLegoLang.g:4195:1: rule__ColorOperation__Group__4 : rule__ColorOperation__Group__4__Impl ;
    public final void rule__ColorOperation__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4199:1: ( rule__ColorOperation__Group__4__Impl )
            // InternalLegoLang.g:4200:2: rule__ColorOperation__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ColorOperation__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorOperation__Group__4"


    // $ANTLR start "rule__ColorOperation__Group__4__Impl"
    // InternalLegoLang.g:4206:1: rule__ColorOperation__Group__4__Impl : ( ')' ) ;
    public final void rule__ColorOperation__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4210:1: ( ( ')' ) )
            // InternalLegoLang.g:4211:1: ( ')' )
            {
            // InternalLegoLang.g:4211:1: ( ')' )
            // InternalLegoLang.g:4212:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorOperationAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorOperationAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorOperation__Group__4__Impl"


    // $ANTLR start "rule__IntensityOperation__Group__0"
    // InternalLegoLang.g:4222:1: rule__IntensityOperation__Group__0 : rule__IntensityOperation__Group__0__Impl rule__IntensityOperation__Group__1 ;
    public final void rule__IntensityOperation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4226:1: ( rule__IntensityOperation__Group__0__Impl rule__IntensityOperation__Group__1 )
            // InternalLegoLang.g:4227:2: rule__IntensityOperation__Group__0__Impl rule__IntensityOperation__Group__1
            {
            pushFollow(FOLLOW_21);
            rule__IntensityOperation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IntensityOperation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntensityOperation__Group__0"


    // $ANTLR start "rule__IntensityOperation__Group__0__Impl"
    // InternalLegoLang.g:4234:1: rule__IntensityOperation__Group__0__Impl : ( 'get' ) ;
    public final void rule__IntensityOperation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4238:1: ( ( 'get' ) )
            // InternalLegoLang.g:4239:1: ( 'get' )
            {
            // InternalLegoLang.g:4239:1: ( 'get' )
            // InternalLegoLang.g:4240:2: 'get'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntensityOperationAccess().getGetKeyword_0()); 
            }
            match(input,38,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntensityOperationAccess().getGetKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntensityOperation__Group__0__Impl"


    // $ANTLR start "rule__IntensityOperation__Group__1"
    // InternalLegoLang.g:4249:1: rule__IntensityOperation__Group__1 : rule__IntensityOperation__Group__1__Impl rule__IntensityOperation__Group__2 ;
    public final void rule__IntensityOperation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4253:1: ( rule__IntensityOperation__Group__1__Impl rule__IntensityOperation__Group__2 )
            // InternalLegoLang.g:4254:2: rule__IntensityOperation__Group__1__Impl rule__IntensityOperation__Group__2
            {
            pushFollow(FOLLOW_13);
            rule__IntensityOperation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IntensityOperation__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntensityOperation__Group__1"


    // $ANTLR start "rule__IntensityOperation__Group__1__Impl"
    // InternalLegoLang.g:4261:1: rule__IntensityOperation__Group__1__Impl : ( 'intensity' ) ;
    public final void rule__IntensityOperation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4265:1: ( ( 'intensity' ) )
            // InternalLegoLang.g:4266:1: ( 'intensity' )
            {
            // InternalLegoLang.g:4266:1: ( 'intensity' )
            // InternalLegoLang.g:4267:2: 'intensity'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntensityOperationAccess().getIntensityKeyword_1()); 
            }
            match(input,40,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntensityOperationAccess().getIntensityKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntensityOperation__Group__1__Impl"


    // $ANTLR start "rule__IntensityOperation__Group__2"
    // InternalLegoLang.g:4276:1: rule__IntensityOperation__Group__2 : rule__IntensityOperation__Group__2__Impl rule__IntensityOperation__Group__3 ;
    public final void rule__IntensityOperation__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4280:1: ( rule__IntensityOperation__Group__2__Impl rule__IntensityOperation__Group__3 )
            // InternalLegoLang.g:4281:2: rule__IntensityOperation__Group__2__Impl rule__IntensityOperation__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__IntensityOperation__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IntensityOperation__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntensityOperation__Group__2"


    // $ANTLR start "rule__IntensityOperation__Group__2__Impl"
    // InternalLegoLang.g:4288:1: rule__IntensityOperation__Group__2__Impl : ( '(' ) ;
    public final void rule__IntensityOperation__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4292:1: ( ( '(' ) )
            // InternalLegoLang.g:4293:1: ( '(' )
            {
            // InternalLegoLang.g:4293:1: ( '(' )
            // InternalLegoLang.g:4294:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntensityOperationAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntensityOperationAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntensityOperation__Group__2__Impl"


    // $ANTLR start "rule__IntensityOperation__Group__3"
    // InternalLegoLang.g:4303:1: rule__IntensityOperation__Group__3 : rule__IntensityOperation__Group__3__Impl rule__IntensityOperation__Group__4 ;
    public final void rule__IntensityOperation__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4307:1: ( rule__IntensityOperation__Group__3__Impl rule__IntensityOperation__Group__4 )
            // InternalLegoLang.g:4308:2: rule__IntensityOperation__Group__3__Impl rule__IntensityOperation__Group__4
            {
            pushFollow(FOLLOW_14);
            rule__IntensityOperation__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__IntensityOperation__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntensityOperation__Group__3"


    // $ANTLR start "rule__IntensityOperation__Group__3__Impl"
    // InternalLegoLang.g:4315:1: rule__IntensityOperation__Group__3__Impl : ( ( rule__IntensityOperation__ColorsensorAssignment_3 ) ) ;
    public final void rule__IntensityOperation__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4319:1: ( ( ( rule__IntensityOperation__ColorsensorAssignment_3 ) ) )
            // InternalLegoLang.g:4320:1: ( ( rule__IntensityOperation__ColorsensorAssignment_3 ) )
            {
            // InternalLegoLang.g:4320:1: ( ( rule__IntensityOperation__ColorsensorAssignment_3 ) )
            // InternalLegoLang.g:4321:2: ( rule__IntensityOperation__ColorsensorAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntensityOperationAccess().getColorsensorAssignment_3()); 
            }
            // InternalLegoLang.g:4322:2: ( rule__IntensityOperation__ColorsensorAssignment_3 )
            // InternalLegoLang.g:4322:3: rule__IntensityOperation__ColorsensorAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__IntensityOperation__ColorsensorAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntensityOperationAccess().getColorsensorAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntensityOperation__Group__3__Impl"


    // $ANTLR start "rule__IntensityOperation__Group__4"
    // InternalLegoLang.g:4330:1: rule__IntensityOperation__Group__4 : rule__IntensityOperation__Group__4__Impl ;
    public final void rule__IntensityOperation__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4334:1: ( rule__IntensityOperation__Group__4__Impl )
            // InternalLegoLang.g:4335:2: rule__IntensityOperation__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__IntensityOperation__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntensityOperation__Group__4"


    // $ANTLR start "rule__IntensityOperation__Group__4__Impl"
    // InternalLegoLang.g:4341:1: rule__IntensityOperation__Group__4__Impl : ( ')' ) ;
    public final void rule__IntensityOperation__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4345:1: ( ( ')' ) )
            // InternalLegoLang.g:4346:1: ( ')' )
            {
            // InternalLegoLang.g:4346:1: ( ')' )
            // InternalLegoLang.g:4347:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntensityOperationAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntensityOperationAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntensityOperation__Group__4__Impl"


    // $ANTLR start "rule__RangeOperation__Group__0"
    // InternalLegoLang.g:4357:1: rule__RangeOperation__Group__0 : rule__RangeOperation__Group__0__Impl rule__RangeOperation__Group__1 ;
    public final void rule__RangeOperation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4361:1: ( rule__RangeOperation__Group__0__Impl rule__RangeOperation__Group__1 )
            // InternalLegoLang.g:4362:2: rule__RangeOperation__Group__0__Impl rule__RangeOperation__Group__1
            {
            pushFollow(FOLLOW_22);
            rule__RangeOperation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RangeOperation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeOperation__Group__0"


    // $ANTLR start "rule__RangeOperation__Group__0__Impl"
    // InternalLegoLang.g:4369:1: rule__RangeOperation__Group__0__Impl : ( 'get' ) ;
    public final void rule__RangeOperation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4373:1: ( ( 'get' ) )
            // InternalLegoLang.g:4374:1: ( 'get' )
            {
            // InternalLegoLang.g:4374:1: ( 'get' )
            // InternalLegoLang.g:4375:2: 'get'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeOperationAccess().getGetKeyword_0()); 
            }
            match(input,38,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeOperationAccess().getGetKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeOperation__Group__0__Impl"


    // $ANTLR start "rule__RangeOperation__Group__1"
    // InternalLegoLang.g:4384:1: rule__RangeOperation__Group__1 : rule__RangeOperation__Group__1__Impl rule__RangeOperation__Group__2 ;
    public final void rule__RangeOperation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4388:1: ( rule__RangeOperation__Group__1__Impl rule__RangeOperation__Group__2 )
            // InternalLegoLang.g:4389:2: rule__RangeOperation__Group__1__Impl rule__RangeOperation__Group__2
            {
            pushFollow(FOLLOW_13);
            rule__RangeOperation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RangeOperation__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeOperation__Group__1"


    // $ANTLR start "rule__RangeOperation__Group__1__Impl"
    // InternalLegoLang.g:4396:1: rule__RangeOperation__Group__1__Impl : ( 'range' ) ;
    public final void rule__RangeOperation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4400:1: ( ( 'range' ) )
            // InternalLegoLang.g:4401:1: ( 'range' )
            {
            // InternalLegoLang.g:4401:1: ( 'range' )
            // InternalLegoLang.g:4402:2: 'range'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeOperationAccess().getRangeKeyword_1()); 
            }
            match(input,41,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeOperationAccess().getRangeKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeOperation__Group__1__Impl"


    // $ANTLR start "rule__RangeOperation__Group__2"
    // InternalLegoLang.g:4411:1: rule__RangeOperation__Group__2 : rule__RangeOperation__Group__2__Impl rule__RangeOperation__Group__3 ;
    public final void rule__RangeOperation__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4415:1: ( rule__RangeOperation__Group__2__Impl rule__RangeOperation__Group__3 )
            // InternalLegoLang.g:4416:2: rule__RangeOperation__Group__2__Impl rule__RangeOperation__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__RangeOperation__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RangeOperation__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeOperation__Group__2"


    // $ANTLR start "rule__RangeOperation__Group__2__Impl"
    // InternalLegoLang.g:4423:1: rule__RangeOperation__Group__2__Impl : ( '(' ) ;
    public final void rule__RangeOperation__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4427:1: ( ( '(' ) )
            // InternalLegoLang.g:4428:1: ( '(' )
            {
            // InternalLegoLang.g:4428:1: ( '(' )
            // InternalLegoLang.g:4429:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeOperationAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeOperationAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeOperation__Group__2__Impl"


    // $ANTLR start "rule__RangeOperation__Group__3"
    // InternalLegoLang.g:4438:1: rule__RangeOperation__Group__3 : rule__RangeOperation__Group__3__Impl rule__RangeOperation__Group__4 ;
    public final void rule__RangeOperation__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4442:1: ( rule__RangeOperation__Group__3__Impl rule__RangeOperation__Group__4 )
            // InternalLegoLang.g:4443:2: rule__RangeOperation__Group__3__Impl rule__RangeOperation__Group__4
            {
            pushFollow(FOLLOW_14);
            rule__RangeOperation__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__RangeOperation__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeOperation__Group__3"


    // $ANTLR start "rule__RangeOperation__Group__3__Impl"
    // InternalLegoLang.g:4450:1: rule__RangeOperation__Group__3__Impl : ( ( rule__RangeOperation__LasersensorAssignment_3 ) ) ;
    public final void rule__RangeOperation__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4454:1: ( ( ( rule__RangeOperation__LasersensorAssignment_3 ) ) )
            // InternalLegoLang.g:4455:1: ( ( rule__RangeOperation__LasersensorAssignment_3 ) )
            {
            // InternalLegoLang.g:4455:1: ( ( rule__RangeOperation__LasersensorAssignment_3 ) )
            // InternalLegoLang.g:4456:2: ( rule__RangeOperation__LasersensorAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeOperationAccess().getLasersensorAssignment_3()); 
            }
            // InternalLegoLang.g:4457:2: ( rule__RangeOperation__LasersensorAssignment_3 )
            // InternalLegoLang.g:4457:3: rule__RangeOperation__LasersensorAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__RangeOperation__LasersensorAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeOperationAccess().getLasersensorAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeOperation__Group__3__Impl"


    // $ANTLR start "rule__RangeOperation__Group__4"
    // InternalLegoLang.g:4465:1: rule__RangeOperation__Group__4 : rule__RangeOperation__Group__4__Impl ;
    public final void rule__RangeOperation__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4469:1: ( rule__RangeOperation__Group__4__Impl )
            // InternalLegoLang.g:4470:2: rule__RangeOperation__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__RangeOperation__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeOperation__Group__4"


    // $ANTLR start "rule__RangeOperation__Group__4__Impl"
    // InternalLegoLang.g:4476:1: rule__RangeOperation__Group__4__Impl : ( ')' ) ;
    public final void rule__RangeOperation__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4480:1: ( ( ')' ) )
            // InternalLegoLang.g:4481:1: ( ')' )
            {
            // InternalLegoLang.g:4481:1: ( ')' )
            // InternalLegoLang.g:4482:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeOperationAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeOperationAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeOperation__Group__4__Impl"


    // $ANTLR start "rule__XGPSOperation__Group__0"
    // InternalLegoLang.g:4492:1: rule__XGPSOperation__Group__0 : rule__XGPSOperation__Group__0__Impl rule__XGPSOperation__Group__1 ;
    public final void rule__XGPSOperation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4496:1: ( rule__XGPSOperation__Group__0__Impl rule__XGPSOperation__Group__1 )
            // InternalLegoLang.g:4497:2: rule__XGPSOperation__Group__0__Impl rule__XGPSOperation__Group__1
            {
            pushFollow(FOLLOW_23);
            rule__XGPSOperation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XGPSOperation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XGPSOperation__Group__0"


    // $ANTLR start "rule__XGPSOperation__Group__0__Impl"
    // InternalLegoLang.g:4504:1: rule__XGPSOperation__Group__0__Impl : ( 'get' ) ;
    public final void rule__XGPSOperation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4508:1: ( ( 'get' ) )
            // InternalLegoLang.g:4509:1: ( 'get' )
            {
            // InternalLegoLang.g:4509:1: ( 'get' )
            // InternalLegoLang.g:4510:2: 'get'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXGPSOperationAccess().getGetKeyword_0()); 
            }
            match(input,38,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXGPSOperationAccess().getGetKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XGPSOperation__Group__0__Impl"


    // $ANTLR start "rule__XGPSOperation__Group__1"
    // InternalLegoLang.g:4519:1: rule__XGPSOperation__Group__1 : rule__XGPSOperation__Group__1__Impl rule__XGPSOperation__Group__2 ;
    public final void rule__XGPSOperation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4523:1: ( rule__XGPSOperation__Group__1__Impl rule__XGPSOperation__Group__2 )
            // InternalLegoLang.g:4524:2: rule__XGPSOperation__Group__1__Impl rule__XGPSOperation__Group__2
            {
            pushFollow(FOLLOW_13);
            rule__XGPSOperation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XGPSOperation__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XGPSOperation__Group__1"


    // $ANTLR start "rule__XGPSOperation__Group__1__Impl"
    // InternalLegoLang.g:4531:1: rule__XGPSOperation__Group__1__Impl : ( 'x' ) ;
    public final void rule__XGPSOperation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4535:1: ( ( 'x' ) )
            // InternalLegoLang.g:4536:1: ( 'x' )
            {
            // InternalLegoLang.g:4536:1: ( 'x' )
            // InternalLegoLang.g:4537:2: 'x'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXGPSOperationAccess().getXKeyword_1()); 
            }
            match(input,42,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXGPSOperationAccess().getXKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XGPSOperation__Group__1__Impl"


    // $ANTLR start "rule__XGPSOperation__Group__2"
    // InternalLegoLang.g:4546:1: rule__XGPSOperation__Group__2 : rule__XGPSOperation__Group__2__Impl rule__XGPSOperation__Group__3 ;
    public final void rule__XGPSOperation__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4550:1: ( rule__XGPSOperation__Group__2__Impl rule__XGPSOperation__Group__3 )
            // InternalLegoLang.g:4551:2: rule__XGPSOperation__Group__2__Impl rule__XGPSOperation__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__XGPSOperation__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XGPSOperation__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XGPSOperation__Group__2"


    // $ANTLR start "rule__XGPSOperation__Group__2__Impl"
    // InternalLegoLang.g:4558:1: rule__XGPSOperation__Group__2__Impl : ( '(' ) ;
    public final void rule__XGPSOperation__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4562:1: ( ( '(' ) )
            // InternalLegoLang.g:4563:1: ( '(' )
            {
            // InternalLegoLang.g:4563:1: ( '(' )
            // InternalLegoLang.g:4564:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXGPSOperationAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXGPSOperationAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XGPSOperation__Group__2__Impl"


    // $ANTLR start "rule__XGPSOperation__Group__3"
    // InternalLegoLang.g:4573:1: rule__XGPSOperation__Group__3 : rule__XGPSOperation__Group__3__Impl rule__XGPSOperation__Group__4 ;
    public final void rule__XGPSOperation__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4577:1: ( rule__XGPSOperation__Group__3__Impl rule__XGPSOperation__Group__4 )
            // InternalLegoLang.g:4578:2: rule__XGPSOperation__Group__3__Impl rule__XGPSOperation__Group__4
            {
            pushFollow(FOLLOW_14);
            rule__XGPSOperation__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__XGPSOperation__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XGPSOperation__Group__3"


    // $ANTLR start "rule__XGPSOperation__Group__3__Impl"
    // InternalLegoLang.g:4585:1: rule__XGPSOperation__Group__3__Impl : ( ( rule__XGPSOperation__GpssensorAssignment_3 ) ) ;
    public final void rule__XGPSOperation__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4589:1: ( ( ( rule__XGPSOperation__GpssensorAssignment_3 ) ) )
            // InternalLegoLang.g:4590:1: ( ( rule__XGPSOperation__GpssensorAssignment_3 ) )
            {
            // InternalLegoLang.g:4590:1: ( ( rule__XGPSOperation__GpssensorAssignment_3 ) )
            // InternalLegoLang.g:4591:2: ( rule__XGPSOperation__GpssensorAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXGPSOperationAccess().getGpssensorAssignment_3()); 
            }
            // InternalLegoLang.g:4592:2: ( rule__XGPSOperation__GpssensorAssignment_3 )
            // InternalLegoLang.g:4592:3: rule__XGPSOperation__GpssensorAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__XGPSOperation__GpssensorAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXGPSOperationAccess().getGpssensorAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XGPSOperation__Group__3__Impl"


    // $ANTLR start "rule__XGPSOperation__Group__4"
    // InternalLegoLang.g:4600:1: rule__XGPSOperation__Group__4 : rule__XGPSOperation__Group__4__Impl ;
    public final void rule__XGPSOperation__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4604:1: ( rule__XGPSOperation__Group__4__Impl )
            // InternalLegoLang.g:4605:2: rule__XGPSOperation__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__XGPSOperation__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XGPSOperation__Group__4"


    // $ANTLR start "rule__XGPSOperation__Group__4__Impl"
    // InternalLegoLang.g:4611:1: rule__XGPSOperation__Group__4__Impl : ( ')' ) ;
    public final void rule__XGPSOperation__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4615:1: ( ( ')' ) )
            // InternalLegoLang.g:4616:1: ( ')' )
            {
            // InternalLegoLang.g:4616:1: ( ')' )
            // InternalLegoLang.g:4617:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXGPSOperationAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXGPSOperationAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XGPSOperation__Group__4__Impl"


    // $ANTLR start "rule__YGPSOperation__Group__0"
    // InternalLegoLang.g:4627:1: rule__YGPSOperation__Group__0 : rule__YGPSOperation__Group__0__Impl rule__YGPSOperation__Group__1 ;
    public final void rule__YGPSOperation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4631:1: ( rule__YGPSOperation__Group__0__Impl rule__YGPSOperation__Group__1 )
            // InternalLegoLang.g:4632:2: rule__YGPSOperation__Group__0__Impl rule__YGPSOperation__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__YGPSOperation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__YGPSOperation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__YGPSOperation__Group__0"


    // $ANTLR start "rule__YGPSOperation__Group__0__Impl"
    // InternalLegoLang.g:4639:1: rule__YGPSOperation__Group__0__Impl : ( 'get' ) ;
    public final void rule__YGPSOperation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4643:1: ( ( 'get' ) )
            // InternalLegoLang.g:4644:1: ( 'get' )
            {
            // InternalLegoLang.g:4644:1: ( 'get' )
            // InternalLegoLang.g:4645:2: 'get'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getYGPSOperationAccess().getGetKeyword_0()); 
            }
            match(input,38,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getYGPSOperationAccess().getGetKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__YGPSOperation__Group__0__Impl"


    // $ANTLR start "rule__YGPSOperation__Group__1"
    // InternalLegoLang.g:4654:1: rule__YGPSOperation__Group__1 : rule__YGPSOperation__Group__1__Impl rule__YGPSOperation__Group__2 ;
    public final void rule__YGPSOperation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4658:1: ( rule__YGPSOperation__Group__1__Impl rule__YGPSOperation__Group__2 )
            // InternalLegoLang.g:4659:2: rule__YGPSOperation__Group__1__Impl rule__YGPSOperation__Group__2
            {
            pushFollow(FOLLOW_13);
            rule__YGPSOperation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__YGPSOperation__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__YGPSOperation__Group__1"


    // $ANTLR start "rule__YGPSOperation__Group__1__Impl"
    // InternalLegoLang.g:4666:1: rule__YGPSOperation__Group__1__Impl : ( 'y' ) ;
    public final void rule__YGPSOperation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4670:1: ( ( 'y' ) )
            // InternalLegoLang.g:4671:1: ( 'y' )
            {
            // InternalLegoLang.g:4671:1: ( 'y' )
            // InternalLegoLang.g:4672:2: 'y'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getYGPSOperationAccess().getYKeyword_1()); 
            }
            match(input,43,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getYGPSOperationAccess().getYKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__YGPSOperation__Group__1__Impl"


    // $ANTLR start "rule__YGPSOperation__Group__2"
    // InternalLegoLang.g:4681:1: rule__YGPSOperation__Group__2 : rule__YGPSOperation__Group__2__Impl rule__YGPSOperation__Group__3 ;
    public final void rule__YGPSOperation__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4685:1: ( rule__YGPSOperation__Group__2__Impl rule__YGPSOperation__Group__3 )
            // InternalLegoLang.g:4686:2: rule__YGPSOperation__Group__2__Impl rule__YGPSOperation__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__YGPSOperation__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__YGPSOperation__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__YGPSOperation__Group__2"


    // $ANTLR start "rule__YGPSOperation__Group__2__Impl"
    // InternalLegoLang.g:4693:1: rule__YGPSOperation__Group__2__Impl : ( '(' ) ;
    public final void rule__YGPSOperation__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4697:1: ( ( '(' ) )
            // InternalLegoLang.g:4698:1: ( '(' )
            {
            // InternalLegoLang.g:4698:1: ( '(' )
            // InternalLegoLang.g:4699:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getYGPSOperationAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getYGPSOperationAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__YGPSOperation__Group__2__Impl"


    // $ANTLR start "rule__YGPSOperation__Group__3"
    // InternalLegoLang.g:4708:1: rule__YGPSOperation__Group__3 : rule__YGPSOperation__Group__3__Impl rule__YGPSOperation__Group__4 ;
    public final void rule__YGPSOperation__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4712:1: ( rule__YGPSOperation__Group__3__Impl rule__YGPSOperation__Group__4 )
            // InternalLegoLang.g:4713:2: rule__YGPSOperation__Group__3__Impl rule__YGPSOperation__Group__4
            {
            pushFollow(FOLLOW_14);
            rule__YGPSOperation__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__YGPSOperation__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__YGPSOperation__Group__3"


    // $ANTLR start "rule__YGPSOperation__Group__3__Impl"
    // InternalLegoLang.g:4720:1: rule__YGPSOperation__Group__3__Impl : ( ( rule__YGPSOperation__GpssensorAssignment_3 ) ) ;
    public final void rule__YGPSOperation__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4724:1: ( ( ( rule__YGPSOperation__GpssensorAssignment_3 ) ) )
            // InternalLegoLang.g:4725:1: ( ( rule__YGPSOperation__GpssensorAssignment_3 ) )
            {
            // InternalLegoLang.g:4725:1: ( ( rule__YGPSOperation__GpssensorAssignment_3 ) )
            // InternalLegoLang.g:4726:2: ( rule__YGPSOperation__GpssensorAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getYGPSOperationAccess().getGpssensorAssignment_3()); 
            }
            // InternalLegoLang.g:4727:2: ( rule__YGPSOperation__GpssensorAssignment_3 )
            // InternalLegoLang.g:4727:3: rule__YGPSOperation__GpssensorAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__YGPSOperation__GpssensorAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getYGPSOperationAccess().getGpssensorAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__YGPSOperation__Group__3__Impl"


    // $ANTLR start "rule__YGPSOperation__Group__4"
    // InternalLegoLang.g:4735:1: rule__YGPSOperation__Group__4 : rule__YGPSOperation__Group__4__Impl ;
    public final void rule__YGPSOperation__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4739:1: ( rule__YGPSOperation__Group__4__Impl )
            // InternalLegoLang.g:4740:2: rule__YGPSOperation__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__YGPSOperation__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__YGPSOperation__Group__4"


    // $ANTLR start "rule__YGPSOperation__Group__4__Impl"
    // InternalLegoLang.g:4746:1: rule__YGPSOperation__Group__4__Impl : ( ')' ) ;
    public final void rule__YGPSOperation__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4750:1: ( ( ')' ) )
            // InternalLegoLang.g:4751:1: ( ')' )
            {
            // InternalLegoLang.g:4751:1: ( ')' )
            // InternalLegoLang.g:4752:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getYGPSOperationAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getYGPSOperationAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__YGPSOperation__Group__4__Impl"


    // $ANTLR start "rule__AngleOperation__Group__0"
    // InternalLegoLang.g:4762:1: rule__AngleOperation__Group__0 : rule__AngleOperation__Group__0__Impl rule__AngleOperation__Group__1 ;
    public final void rule__AngleOperation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4766:1: ( rule__AngleOperation__Group__0__Impl rule__AngleOperation__Group__1 )
            // InternalLegoLang.g:4767:2: rule__AngleOperation__Group__0__Impl rule__AngleOperation__Group__1
            {
            pushFollow(FOLLOW_25);
            rule__AngleOperation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AngleOperation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AngleOperation__Group__0"


    // $ANTLR start "rule__AngleOperation__Group__0__Impl"
    // InternalLegoLang.g:4774:1: rule__AngleOperation__Group__0__Impl : ( 'get' ) ;
    public final void rule__AngleOperation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4778:1: ( ( 'get' ) )
            // InternalLegoLang.g:4779:1: ( 'get' )
            {
            // InternalLegoLang.g:4779:1: ( 'get' )
            // InternalLegoLang.g:4780:2: 'get'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAngleOperationAccess().getGetKeyword_0()); 
            }
            match(input,38,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAngleOperationAccess().getGetKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AngleOperation__Group__0__Impl"


    // $ANTLR start "rule__AngleOperation__Group__1"
    // InternalLegoLang.g:4789:1: rule__AngleOperation__Group__1 : rule__AngleOperation__Group__1__Impl rule__AngleOperation__Group__2 ;
    public final void rule__AngleOperation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4793:1: ( rule__AngleOperation__Group__1__Impl rule__AngleOperation__Group__2 )
            // InternalLegoLang.g:4794:2: rule__AngleOperation__Group__1__Impl rule__AngleOperation__Group__2
            {
            pushFollow(FOLLOW_13);
            rule__AngleOperation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AngleOperation__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AngleOperation__Group__1"


    // $ANTLR start "rule__AngleOperation__Group__1__Impl"
    // InternalLegoLang.g:4801:1: rule__AngleOperation__Group__1__Impl : ( 'angle' ) ;
    public final void rule__AngleOperation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4805:1: ( ( 'angle' ) )
            // InternalLegoLang.g:4806:1: ( 'angle' )
            {
            // InternalLegoLang.g:4806:1: ( 'angle' )
            // InternalLegoLang.g:4807:2: 'angle'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAngleOperationAccess().getAngleKeyword_1()); 
            }
            match(input,44,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAngleOperationAccess().getAngleKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AngleOperation__Group__1__Impl"


    // $ANTLR start "rule__AngleOperation__Group__2"
    // InternalLegoLang.g:4816:1: rule__AngleOperation__Group__2 : rule__AngleOperation__Group__2__Impl rule__AngleOperation__Group__3 ;
    public final void rule__AngleOperation__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4820:1: ( rule__AngleOperation__Group__2__Impl rule__AngleOperation__Group__3 )
            // InternalLegoLang.g:4821:2: rule__AngleOperation__Group__2__Impl rule__AngleOperation__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__AngleOperation__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AngleOperation__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AngleOperation__Group__2"


    // $ANTLR start "rule__AngleOperation__Group__2__Impl"
    // InternalLegoLang.g:4828:1: rule__AngleOperation__Group__2__Impl : ( '(' ) ;
    public final void rule__AngleOperation__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4832:1: ( ( '(' ) )
            // InternalLegoLang.g:4833:1: ( '(' )
            {
            // InternalLegoLang.g:4833:1: ( '(' )
            // InternalLegoLang.g:4834:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAngleOperationAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAngleOperationAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AngleOperation__Group__2__Impl"


    // $ANTLR start "rule__AngleOperation__Group__3"
    // InternalLegoLang.g:4843:1: rule__AngleOperation__Group__3 : rule__AngleOperation__Group__3__Impl rule__AngleOperation__Group__4 ;
    public final void rule__AngleOperation__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4847:1: ( rule__AngleOperation__Group__3__Impl rule__AngleOperation__Group__4 )
            // InternalLegoLang.g:4848:2: rule__AngleOperation__Group__3__Impl rule__AngleOperation__Group__4
            {
            pushFollow(FOLLOW_14);
            rule__AngleOperation__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__AngleOperation__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AngleOperation__Group__3"


    // $ANTLR start "rule__AngleOperation__Group__3__Impl"
    // InternalLegoLang.g:4855:1: rule__AngleOperation__Group__3__Impl : ( ( rule__AngleOperation__GyrosensorAssignment_3 ) ) ;
    public final void rule__AngleOperation__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4859:1: ( ( ( rule__AngleOperation__GyrosensorAssignment_3 ) ) )
            // InternalLegoLang.g:4860:1: ( ( rule__AngleOperation__GyrosensorAssignment_3 ) )
            {
            // InternalLegoLang.g:4860:1: ( ( rule__AngleOperation__GyrosensorAssignment_3 ) )
            // InternalLegoLang.g:4861:2: ( rule__AngleOperation__GyrosensorAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAngleOperationAccess().getGyrosensorAssignment_3()); 
            }
            // InternalLegoLang.g:4862:2: ( rule__AngleOperation__GyrosensorAssignment_3 )
            // InternalLegoLang.g:4862:3: rule__AngleOperation__GyrosensorAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__AngleOperation__GyrosensorAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAngleOperationAccess().getGyrosensorAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AngleOperation__Group__3__Impl"


    // $ANTLR start "rule__AngleOperation__Group__4"
    // InternalLegoLang.g:4870:1: rule__AngleOperation__Group__4 : rule__AngleOperation__Group__4__Impl ;
    public final void rule__AngleOperation__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4874:1: ( rule__AngleOperation__Group__4__Impl )
            // InternalLegoLang.g:4875:2: rule__AngleOperation__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__AngleOperation__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AngleOperation__Group__4"


    // $ANTLR start "rule__AngleOperation__Group__4__Impl"
    // InternalLegoLang.g:4881:1: rule__AngleOperation__Group__4__Impl : ( ')' ) ;
    public final void rule__AngleOperation__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4885:1: ( ( ')' ) )
            // InternalLegoLang.g:4886:1: ( ')' )
            {
            // InternalLegoLang.g:4886:1: ( ')' )
            // InternalLegoLang.g:4887:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAngleOperationAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAngleOperationAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AngleOperation__Group__4__Impl"


    // $ANTLR start "rule__DistanceOperation__Group__0"
    // InternalLegoLang.g:4897:1: rule__DistanceOperation__Group__0 : rule__DistanceOperation__Group__0__Impl rule__DistanceOperation__Group__1 ;
    public final void rule__DistanceOperation__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4901:1: ( rule__DistanceOperation__Group__0__Impl rule__DistanceOperation__Group__1 )
            // InternalLegoLang.g:4902:2: rule__DistanceOperation__Group__0__Impl rule__DistanceOperation__Group__1
            {
            pushFollow(FOLLOW_26);
            rule__DistanceOperation__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DistanceOperation__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DistanceOperation__Group__0"


    // $ANTLR start "rule__DistanceOperation__Group__0__Impl"
    // InternalLegoLang.g:4909:1: rule__DistanceOperation__Group__0__Impl : ( 'get' ) ;
    public final void rule__DistanceOperation__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4913:1: ( ( 'get' ) )
            // InternalLegoLang.g:4914:1: ( 'get' )
            {
            // InternalLegoLang.g:4914:1: ( 'get' )
            // InternalLegoLang.g:4915:2: 'get'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDistanceOperationAccess().getGetKeyword_0()); 
            }
            match(input,38,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDistanceOperationAccess().getGetKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DistanceOperation__Group__0__Impl"


    // $ANTLR start "rule__DistanceOperation__Group__1"
    // InternalLegoLang.g:4924:1: rule__DistanceOperation__Group__1 : rule__DistanceOperation__Group__1__Impl rule__DistanceOperation__Group__2 ;
    public final void rule__DistanceOperation__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4928:1: ( rule__DistanceOperation__Group__1__Impl rule__DistanceOperation__Group__2 )
            // InternalLegoLang.g:4929:2: rule__DistanceOperation__Group__1__Impl rule__DistanceOperation__Group__2
            {
            pushFollow(FOLLOW_13);
            rule__DistanceOperation__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DistanceOperation__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DistanceOperation__Group__1"


    // $ANTLR start "rule__DistanceOperation__Group__1__Impl"
    // InternalLegoLang.g:4936:1: rule__DistanceOperation__Group__1__Impl : ( 'distance' ) ;
    public final void rule__DistanceOperation__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4940:1: ( ( 'distance' ) )
            // InternalLegoLang.g:4941:1: ( 'distance' )
            {
            // InternalLegoLang.g:4941:1: ( 'distance' )
            // InternalLegoLang.g:4942:2: 'distance'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDistanceOperationAccess().getDistanceKeyword_1()); 
            }
            match(input,45,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDistanceOperationAccess().getDistanceKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DistanceOperation__Group__1__Impl"


    // $ANTLR start "rule__DistanceOperation__Group__2"
    // InternalLegoLang.g:4951:1: rule__DistanceOperation__Group__2 : rule__DistanceOperation__Group__2__Impl rule__DistanceOperation__Group__3 ;
    public final void rule__DistanceOperation__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4955:1: ( rule__DistanceOperation__Group__2__Impl rule__DistanceOperation__Group__3 )
            // InternalLegoLang.g:4956:2: rule__DistanceOperation__Group__2__Impl rule__DistanceOperation__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__DistanceOperation__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DistanceOperation__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DistanceOperation__Group__2"


    // $ANTLR start "rule__DistanceOperation__Group__2__Impl"
    // InternalLegoLang.g:4963:1: rule__DistanceOperation__Group__2__Impl : ( '(' ) ;
    public final void rule__DistanceOperation__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4967:1: ( ( '(' ) )
            // InternalLegoLang.g:4968:1: ( '(' )
            {
            // InternalLegoLang.g:4968:1: ( '(' )
            // InternalLegoLang.g:4969:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDistanceOperationAccess().getLeftParenthesisKeyword_2()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDistanceOperationAccess().getLeftParenthesisKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DistanceOperation__Group__2__Impl"


    // $ANTLR start "rule__DistanceOperation__Group__3"
    // InternalLegoLang.g:4978:1: rule__DistanceOperation__Group__3 : rule__DistanceOperation__Group__3__Impl rule__DistanceOperation__Group__4 ;
    public final void rule__DistanceOperation__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4982:1: ( rule__DistanceOperation__Group__3__Impl rule__DistanceOperation__Group__4 )
            // InternalLegoLang.g:4983:2: rule__DistanceOperation__Group__3__Impl rule__DistanceOperation__Group__4
            {
            pushFollow(FOLLOW_14);
            rule__DistanceOperation__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DistanceOperation__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DistanceOperation__Group__3"


    // $ANTLR start "rule__DistanceOperation__Group__3__Impl"
    // InternalLegoLang.g:4990:1: rule__DistanceOperation__Group__3__Impl : ( ( rule__DistanceOperation__UltrasonicsensorAssignment_3 ) ) ;
    public final void rule__DistanceOperation__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:4994:1: ( ( ( rule__DistanceOperation__UltrasonicsensorAssignment_3 ) ) )
            // InternalLegoLang.g:4995:1: ( ( rule__DistanceOperation__UltrasonicsensorAssignment_3 ) )
            {
            // InternalLegoLang.g:4995:1: ( ( rule__DistanceOperation__UltrasonicsensorAssignment_3 ) )
            // InternalLegoLang.g:4996:2: ( rule__DistanceOperation__UltrasonicsensorAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDistanceOperationAccess().getUltrasonicsensorAssignment_3()); 
            }
            // InternalLegoLang.g:4997:2: ( rule__DistanceOperation__UltrasonicsensorAssignment_3 )
            // InternalLegoLang.g:4997:3: rule__DistanceOperation__UltrasonicsensorAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__DistanceOperation__UltrasonicsensorAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDistanceOperationAccess().getUltrasonicsensorAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DistanceOperation__Group__3__Impl"


    // $ANTLR start "rule__DistanceOperation__Group__4"
    // InternalLegoLang.g:5005:1: rule__DistanceOperation__Group__4 : rule__DistanceOperation__Group__4__Impl ;
    public final void rule__DistanceOperation__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5009:1: ( rule__DistanceOperation__Group__4__Impl )
            // InternalLegoLang.g:5010:2: rule__DistanceOperation__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DistanceOperation__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DistanceOperation__Group__4"


    // $ANTLR start "rule__DistanceOperation__Group__4__Impl"
    // InternalLegoLang.g:5016:1: rule__DistanceOperation__Group__4__Impl : ( ')' ) ;
    public final void rule__DistanceOperation__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5020:1: ( ( ')' ) )
            // InternalLegoLang.g:5021:1: ( ')' )
            {
            // InternalLegoLang.g:5021:1: ( ')' )
            // InternalLegoLang.g:5022:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDistanceOperationAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDistanceOperationAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DistanceOperation__Group__4__Impl"


    // $ANTLR start "rule__And__Group__0"
    // InternalLegoLang.g:5032:1: rule__And__Group__0 : rule__And__Group__0__Impl rule__And__Group__1 ;
    public final void rule__And__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5036:1: ( rule__And__Group__0__Impl rule__And__Group__1 )
            // InternalLegoLang.g:5037:2: rule__And__Group__0__Impl rule__And__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__And__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__And__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__0"


    // $ANTLR start "rule__And__Group__0__Impl"
    // InternalLegoLang.g:5044:1: rule__And__Group__0__Impl : ( () ) ;
    public final void rule__And__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5048:1: ( ( () ) )
            // InternalLegoLang.g:5049:1: ( () )
            {
            // InternalLegoLang.g:5049:1: ( () )
            // InternalLegoLang.g:5050:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getAndAction_0()); 
            }
            // InternalLegoLang.g:5051:2: ()
            // InternalLegoLang.g:5051:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getAndAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__0__Impl"


    // $ANTLR start "rule__And__Group__1"
    // InternalLegoLang.g:5059:1: rule__And__Group__1 : rule__And__Group__1__Impl rule__And__Group__2 ;
    public final void rule__And__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5063:1: ( rule__And__Group__1__Impl rule__And__Group__2 )
            // InternalLegoLang.g:5064:2: rule__And__Group__1__Impl rule__And__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__And__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__And__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__1"


    // $ANTLR start "rule__And__Group__1__Impl"
    // InternalLegoLang.g:5071:1: rule__And__Group__1__Impl : ( '(' ) ;
    public final void rule__And__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5075:1: ( ( '(' ) )
            // InternalLegoLang.g:5076:1: ( '(' )
            {
            // InternalLegoLang.g:5076:1: ( '(' )
            // InternalLegoLang.g:5077:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__1__Impl"


    // $ANTLR start "rule__And__Group__2"
    // InternalLegoLang.g:5086:1: rule__And__Group__2 : rule__And__Group__2__Impl rule__And__Group__3 ;
    public final void rule__And__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5090:1: ( rule__And__Group__2__Impl rule__And__Group__3 )
            // InternalLegoLang.g:5091:2: rule__And__Group__2__Impl rule__And__Group__3
            {
            pushFollow(FOLLOW_27);
            rule__And__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__And__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__2"


    // $ANTLR start "rule__And__Group__2__Impl"
    // InternalLegoLang.g:5098:1: rule__And__Group__2__Impl : ( ( rule__And__LeftAssignment_2 ) ) ;
    public final void rule__And__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5102:1: ( ( ( rule__And__LeftAssignment_2 ) ) )
            // InternalLegoLang.g:5103:1: ( ( rule__And__LeftAssignment_2 ) )
            {
            // InternalLegoLang.g:5103:1: ( ( rule__And__LeftAssignment_2 ) )
            // InternalLegoLang.g:5104:2: ( rule__And__LeftAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getLeftAssignment_2()); 
            }
            // InternalLegoLang.g:5105:2: ( rule__And__LeftAssignment_2 )
            // InternalLegoLang.g:5105:3: rule__And__LeftAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__And__LeftAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getLeftAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__2__Impl"


    // $ANTLR start "rule__And__Group__3"
    // InternalLegoLang.g:5113:1: rule__And__Group__3 : rule__And__Group__3__Impl rule__And__Group__4 ;
    public final void rule__And__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5117:1: ( rule__And__Group__3__Impl rule__And__Group__4 )
            // InternalLegoLang.g:5118:2: rule__And__Group__3__Impl rule__And__Group__4
            {
            pushFollow(FOLLOW_27);
            rule__And__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__And__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__3"


    // $ANTLR start "rule__And__Group__3__Impl"
    // InternalLegoLang.g:5125:1: rule__And__Group__3__Impl : ( ( rule__And__Group_3__0 )? ) ;
    public final void rule__And__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5129:1: ( ( ( rule__And__Group_3__0 )? ) )
            // InternalLegoLang.g:5130:1: ( ( rule__And__Group_3__0 )? )
            {
            // InternalLegoLang.g:5130:1: ( ( rule__And__Group_3__0 )? )
            // InternalLegoLang.g:5131:2: ( rule__And__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getGroup_3()); 
            }
            // InternalLegoLang.g:5132:2: ( rule__And__Group_3__0 )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==46) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // InternalLegoLang.g:5132:3: rule__And__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__And__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__3__Impl"


    // $ANTLR start "rule__And__Group__4"
    // InternalLegoLang.g:5140:1: rule__And__Group__4 : rule__And__Group__4__Impl ;
    public final void rule__And__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5144:1: ( rule__And__Group__4__Impl )
            // InternalLegoLang.g:5145:2: rule__And__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__And__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__4"


    // $ANTLR start "rule__And__Group__4__Impl"
    // InternalLegoLang.g:5151:1: rule__And__Group__4__Impl : ( ')' ) ;
    public final void rule__And__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5155:1: ( ( ')' ) )
            // InternalLegoLang.g:5156:1: ( ')' )
            {
            // InternalLegoLang.g:5156:1: ( ')' )
            // InternalLegoLang.g:5157:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group__4__Impl"


    // $ANTLR start "rule__And__Group_3__0"
    // InternalLegoLang.g:5167:1: rule__And__Group_3__0 : rule__And__Group_3__0__Impl rule__And__Group_3__1 ;
    public final void rule__And__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5171:1: ( rule__And__Group_3__0__Impl rule__And__Group_3__1 )
            // InternalLegoLang.g:5172:2: rule__And__Group_3__0__Impl rule__And__Group_3__1
            {
            pushFollow(FOLLOW_16);
            rule__And__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__And__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_3__0"


    // $ANTLR start "rule__And__Group_3__0__Impl"
    // InternalLegoLang.g:5179:1: rule__And__Group_3__0__Impl : ( 'and' ) ;
    public final void rule__And__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5183:1: ( ( 'and' ) )
            // InternalLegoLang.g:5184:1: ( 'and' )
            {
            // InternalLegoLang.g:5184:1: ( 'and' )
            // InternalLegoLang.g:5185:2: 'and'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getAndKeyword_3_0()); 
            }
            match(input,46,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getAndKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_3__0__Impl"


    // $ANTLR start "rule__And__Group_3__1"
    // InternalLegoLang.g:5194:1: rule__And__Group_3__1 : rule__And__Group_3__1__Impl ;
    public final void rule__And__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5198:1: ( rule__And__Group_3__1__Impl )
            // InternalLegoLang.g:5199:2: rule__And__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__And__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_3__1"


    // $ANTLR start "rule__And__Group_3__1__Impl"
    // InternalLegoLang.g:5205:1: rule__And__Group_3__1__Impl : ( ( rule__And__RightAssignment_3_1 ) ) ;
    public final void rule__And__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5209:1: ( ( ( rule__And__RightAssignment_3_1 ) ) )
            // InternalLegoLang.g:5210:1: ( ( rule__And__RightAssignment_3_1 ) )
            {
            // InternalLegoLang.g:5210:1: ( ( rule__And__RightAssignment_3_1 ) )
            // InternalLegoLang.g:5211:2: ( rule__And__RightAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getRightAssignment_3_1()); 
            }
            // InternalLegoLang.g:5212:2: ( rule__And__RightAssignment_3_1 )
            // InternalLegoLang.g:5212:3: rule__And__RightAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__And__RightAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getRightAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__Group_3__1__Impl"


    // $ANTLR start "rule__Or__Group__0"
    // InternalLegoLang.g:5221:1: rule__Or__Group__0 : rule__Or__Group__0__Impl rule__Or__Group__1 ;
    public final void rule__Or__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5225:1: ( rule__Or__Group__0__Impl rule__Or__Group__1 )
            // InternalLegoLang.g:5226:2: rule__Or__Group__0__Impl rule__Or__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__Or__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Or__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__0"


    // $ANTLR start "rule__Or__Group__0__Impl"
    // InternalLegoLang.g:5233:1: rule__Or__Group__0__Impl : ( () ) ;
    public final void rule__Or__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5237:1: ( ( () ) )
            // InternalLegoLang.g:5238:1: ( () )
            {
            // InternalLegoLang.g:5238:1: ( () )
            // InternalLegoLang.g:5239:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getOrAction_0()); 
            }
            // InternalLegoLang.g:5240:2: ()
            // InternalLegoLang.g:5240:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getOrAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__0__Impl"


    // $ANTLR start "rule__Or__Group__1"
    // InternalLegoLang.g:5248:1: rule__Or__Group__1 : rule__Or__Group__1__Impl rule__Or__Group__2 ;
    public final void rule__Or__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5252:1: ( rule__Or__Group__1__Impl rule__Or__Group__2 )
            // InternalLegoLang.g:5253:2: rule__Or__Group__1__Impl rule__Or__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__Or__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Or__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__1"


    // $ANTLR start "rule__Or__Group__1__Impl"
    // InternalLegoLang.g:5260:1: rule__Or__Group__1__Impl : ( '(' ) ;
    public final void rule__Or__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5264:1: ( ( '(' ) )
            // InternalLegoLang.g:5265:1: ( '(' )
            {
            // InternalLegoLang.g:5265:1: ( '(' )
            // InternalLegoLang.g:5266:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__1__Impl"


    // $ANTLR start "rule__Or__Group__2"
    // InternalLegoLang.g:5275:1: rule__Or__Group__2 : rule__Or__Group__2__Impl rule__Or__Group__3 ;
    public final void rule__Or__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5279:1: ( rule__Or__Group__2__Impl rule__Or__Group__3 )
            // InternalLegoLang.g:5280:2: rule__Or__Group__2__Impl rule__Or__Group__3
            {
            pushFollow(FOLLOW_28);
            rule__Or__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Or__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__2"


    // $ANTLR start "rule__Or__Group__2__Impl"
    // InternalLegoLang.g:5287:1: rule__Or__Group__2__Impl : ( ( rule__Or__LeftAssignment_2 ) ) ;
    public final void rule__Or__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5291:1: ( ( ( rule__Or__LeftAssignment_2 ) ) )
            // InternalLegoLang.g:5292:1: ( ( rule__Or__LeftAssignment_2 ) )
            {
            // InternalLegoLang.g:5292:1: ( ( rule__Or__LeftAssignment_2 ) )
            // InternalLegoLang.g:5293:2: ( rule__Or__LeftAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getLeftAssignment_2()); 
            }
            // InternalLegoLang.g:5294:2: ( rule__Or__LeftAssignment_2 )
            // InternalLegoLang.g:5294:3: rule__Or__LeftAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Or__LeftAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getLeftAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__2__Impl"


    // $ANTLR start "rule__Or__Group__3"
    // InternalLegoLang.g:5302:1: rule__Or__Group__3 : rule__Or__Group__3__Impl rule__Or__Group__4 ;
    public final void rule__Or__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5306:1: ( rule__Or__Group__3__Impl rule__Or__Group__4 )
            // InternalLegoLang.g:5307:2: rule__Or__Group__3__Impl rule__Or__Group__4
            {
            pushFollow(FOLLOW_28);
            rule__Or__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Or__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__3"


    // $ANTLR start "rule__Or__Group__3__Impl"
    // InternalLegoLang.g:5314:1: rule__Or__Group__3__Impl : ( ( rule__Or__Group_3__0 )? ) ;
    public final void rule__Or__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5318:1: ( ( ( rule__Or__Group_3__0 )? ) )
            // InternalLegoLang.g:5319:1: ( ( rule__Or__Group_3__0 )? )
            {
            // InternalLegoLang.g:5319:1: ( ( rule__Or__Group_3__0 )? )
            // InternalLegoLang.g:5320:2: ( rule__Or__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getGroup_3()); 
            }
            // InternalLegoLang.g:5321:2: ( rule__Or__Group_3__0 )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==47) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // InternalLegoLang.g:5321:3: rule__Or__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Or__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__3__Impl"


    // $ANTLR start "rule__Or__Group__4"
    // InternalLegoLang.g:5329:1: rule__Or__Group__4 : rule__Or__Group__4__Impl ;
    public final void rule__Or__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5333:1: ( rule__Or__Group__4__Impl )
            // InternalLegoLang.g:5334:2: rule__Or__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Or__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__4"


    // $ANTLR start "rule__Or__Group__4__Impl"
    // InternalLegoLang.g:5340:1: rule__Or__Group__4__Impl : ( ')' ) ;
    public final void rule__Or__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5344:1: ( ( ')' ) )
            // InternalLegoLang.g:5345:1: ( ')' )
            {
            // InternalLegoLang.g:5345:1: ( ')' )
            // InternalLegoLang.g:5346:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group__4__Impl"


    // $ANTLR start "rule__Or__Group_3__0"
    // InternalLegoLang.g:5356:1: rule__Or__Group_3__0 : rule__Or__Group_3__0__Impl rule__Or__Group_3__1 ;
    public final void rule__Or__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5360:1: ( rule__Or__Group_3__0__Impl rule__Or__Group_3__1 )
            // InternalLegoLang.g:5361:2: rule__Or__Group_3__0__Impl rule__Or__Group_3__1
            {
            pushFollow(FOLLOW_16);
            rule__Or__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Or__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_3__0"


    // $ANTLR start "rule__Or__Group_3__0__Impl"
    // InternalLegoLang.g:5368:1: rule__Or__Group_3__0__Impl : ( 'or' ) ;
    public final void rule__Or__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5372:1: ( ( 'or' ) )
            // InternalLegoLang.g:5373:1: ( 'or' )
            {
            // InternalLegoLang.g:5373:1: ( 'or' )
            // InternalLegoLang.g:5374:2: 'or'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getOrKeyword_3_0()); 
            }
            match(input,47,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getOrKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_3__0__Impl"


    // $ANTLR start "rule__Or__Group_3__1"
    // InternalLegoLang.g:5383:1: rule__Or__Group_3__1 : rule__Or__Group_3__1__Impl ;
    public final void rule__Or__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5387:1: ( rule__Or__Group_3__1__Impl )
            // InternalLegoLang.g:5388:2: rule__Or__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Or__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_3__1"


    // $ANTLR start "rule__Or__Group_3__1__Impl"
    // InternalLegoLang.g:5394:1: rule__Or__Group_3__1__Impl : ( ( rule__Or__RightAssignment_3_1 ) ) ;
    public final void rule__Or__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5398:1: ( ( ( rule__Or__RightAssignment_3_1 ) ) )
            // InternalLegoLang.g:5399:1: ( ( rule__Or__RightAssignment_3_1 ) )
            {
            // InternalLegoLang.g:5399:1: ( ( rule__Or__RightAssignment_3_1 ) )
            // InternalLegoLang.g:5400:2: ( rule__Or__RightAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getRightAssignment_3_1()); 
            }
            // InternalLegoLang.g:5401:2: ( rule__Or__RightAssignment_3_1 )
            // InternalLegoLang.g:5401:3: rule__Or__RightAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__Or__RightAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getRightAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__Group_3__1__Impl"


    // $ANTLR start "rule__ConditionEtat__Group__0"
    // InternalLegoLang.g:5410:1: rule__ConditionEtat__Group__0 : rule__ConditionEtat__Group__0__Impl rule__ConditionEtat__Group__1 ;
    public final void rule__ConditionEtat__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5414:1: ( rule__ConditionEtat__Group__0__Impl rule__ConditionEtat__Group__1 )
            // InternalLegoLang.g:5415:2: rule__ConditionEtat__Group__0__Impl rule__ConditionEtat__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__ConditionEtat__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConditionEtat__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group__0"


    // $ANTLR start "rule__ConditionEtat__Group__0__Impl"
    // InternalLegoLang.g:5422:1: rule__ConditionEtat__Group__0__Impl : ( 'if' ) ;
    public final void rule__ConditionEtat__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5426:1: ( ( 'if' ) )
            // InternalLegoLang.g:5427:1: ( 'if' )
            {
            // InternalLegoLang.g:5427:1: ( 'if' )
            // InternalLegoLang.g:5428:2: 'if'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionEtatAccess().getIfKeyword_0()); 
            }
            match(input,48,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionEtatAccess().getIfKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group__0__Impl"


    // $ANTLR start "rule__ConditionEtat__Group__1"
    // InternalLegoLang.g:5437:1: rule__ConditionEtat__Group__1 : rule__ConditionEtat__Group__1__Impl rule__ConditionEtat__Group__2 ;
    public final void rule__ConditionEtat__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5441:1: ( rule__ConditionEtat__Group__1__Impl rule__ConditionEtat__Group__2 )
            // InternalLegoLang.g:5442:2: rule__ConditionEtat__Group__1__Impl rule__ConditionEtat__Group__2
            {
            pushFollow(FOLLOW_5);
            rule__ConditionEtat__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConditionEtat__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group__1"


    // $ANTLR start "rule__ConditionEtat__Group__1__Impl"
    // InternalLegoLang.g:5449:1: rule__ConditionEtat__Group__1__Impl : ( ( rule__ConditionEtat__ConditionAssignment_1 ) ) ;
    public final void rule__ConditionEtat__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5453:1: ( ( ( rule__ConditionEtat__ConditionAssignment_1 ) ) )
            // InternalLegoLang.g:5454:1: ( ( rule__ConditionEtat__ConditionAssignment_1 ) )
            {
            // InternalLegoLang.g:5454:1: ( ( rule__ConditionEtat__ConditionAssignment_1 ) )
            // InternalLegoLang.g:5455:2: ( rule__ConditionEtat__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionEtatAccess().getConditionAssignment_1()); 
            }
            // InternalLegoLang.g:5456:2: ( rule__ConditionEtat__ConditionAssignment_1 )
            // InternalLegoLang.g:5456:3: rule__ConditionEtat__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ConditionEtat__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionEtatAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group__1__Impl"


    // $ANTLR start "rule__ConditionEtat__Group__2"
    // InternalLegoLang.g:5464:1: rule__ConditionEtat__Group__2 : rule__ConditionEtat__Group__2__Impl rule__ConditionEtat__Group__3 ;
    public final void rule__ConditionEtat__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5468:1: ( rule__ConditionEtat__Group__2__Impl rule__ConditionEtat__Group__3 )
            // InternalLegoLang.g:5469:2: rule__ConditionEtat__Group__2__Impl rule__ConditionEtat__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__ConditionEtat__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConditionEtat__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group__2"


    // $ANTLR start "rule__ConditionEtat__Group__2__Impl"
    // InternalLegoLang.g:5476:1: rule__ConditionEtat__Group__2__Impl : ( '{' ) ;
    public final void rule__ConditionEtat__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5480:1: ( ( '{' ) )
            // InternalLegoLang.g:5481:1: ( '{' )
            {
            // InternalLegoLang.g:5481:1: ( '{' )
            // InternalLegoLang.g:5482:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionEtatAccess().getLeftCurlyBracketKeyword_2()); 
            }
            match(input,16,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionEtatAccess().getLeftCurlyBracketKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group__2__Impl"


    // $ANTLR start "rule__ConditionEtat__Group__3"
    // InternalLegoLang.g:5491:1: rule__ConditionEtat__Group__3 : rule__ConditionEtat__Group__3__Impl rule__ConditionEtat__Group__4 ;
    public final void rule__ConditionEtat__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5495:1: ( rule__ConditionEtat__Group__3__Impl rule__ConditionEtat__Group__4 )
            // InternalLegoLang.g:5496:2: rule__ConditionEtat__Group__3__Impl rule__ConditionEtat__Group__4
            {
            pushFollow(FOLLOW_10);
            rule__ConditionEtat__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConditionEtat__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group__3"


    // $ANTLR start "rule__ConditionEtat__Group__3__Impl"
    // InternalLegoLang.g:5503:1: rule__ConditionEtat__Group__3__Impl : ( ( rule__ConditionEtat__ThenAssignment_3 )* ) ;
    public final void rule__ConditionEtat__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5507:1: ( ( ( rule__ConditionEtat__ThenAssignment_3 )* ) )
            // InternalLegoLang.g:5508:1: ( ( rule__ConditionEtat__ThenAssignment_3 )* )
            {
            // InternalLegoLang.g:5508:1: ( ( rule__ConditionEtat__ThenAssignment_3 )* )
            // InternalLegoLang.g:5509:2: ( rule__ConditionEtat__ThenAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionEtatAccess().getThenAssignment_3()); 
            }
            // InternalLegoLang.g:5510:2: ( rule__ConditionEtat__ThenAssignment_3 )*
            loop20:
            do {
                int alt20=2;
                int LA20_0 = input.LA(1);

                if ( ((LA20_0>=RULE_ID && LA20_0<=RULE_STRING)||(LA20_0>=11 && LA20_0<=14)||LA20_0==19||(LA20_0>=21 && LA20_0<=29)||LA20_0==31||LA20_0==34||(LA20_0>=38 && LA20_0<=39)||LA20_0==48||(LA20_0>=50 && LA20_0<=51)||LA20_0==53||(LA20_0>=65 && LA20_0<=66)||(LA20_0>=68 && LA20_0<=70)) ) {
                    alt20=1;
                }


                switch (alt20) {
            	case 1 :
            	    // InternalLegoLang.g:5510:3: rule__ConditionEtat__ThenAssignment_3
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__ConditionEtat__ThenAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop20;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionEtatAccess().getThenAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group__3__Impl"


    // $ANTLR start "rule__ConditionEtat__Group__4"
    // InternalLegoLang.g:5518:1: rule__ConditionEtat__Group__4 : rule__ConditionEtat__Group__4__Impl rule__ConditionEtat__Group__5 ;
    public final void rule__ConditionEtat__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5522:1: ( rule__ConditionEtat__Group__4__Impl rule__ConditionEtat__Group__5 )
            // InternalLegoLang.g:5523:2: rule__ConditionEtat__Group__4__Impl rule__ConditionEtat__Group__5
            {
            pushFollow(FOLLOW_29);
            rule__ConditionEtat__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConditionEtat__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group__4"


    // $ANTLR start "rule__ConditionEtat__Group__4__Impl"
    // InternalLegoLang.g:5530:1: rule__ConditionEtat__Group__4__Impl : ( '}' ) ;
    public final void rule__ConditionEtat__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5534:1: ( ( '}' ) )
            // InternalLegoLang.g:5535:1: ( '}' )
            {
            // InternalLegoLang.g:5535:1: ( '}' )
            // InternalLegoLang.g:5536:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionEtatAccess().getRightCurlyBracketKeyword_4()); 
            }
            match(input,18,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionEtatAccess().getRightCurlyBracketKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group__4__Impl"


    // $ANTLR start "rule__ConditionEtat__Group__5"
    // InternalLegoLang.g:5545:1: rule__ConditionEtat__Group__5 : rule__ConditionEtat__Group__5__Impl ;
    public final void rule__ConditionEtat__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5549:1: ( rule__ConditionEtat__Group__5__Impl )
            // InternalLegoLang.g:5550:2: rule__ConditionEtat__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConditionEtat__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group__5"


    // $ANTLR start "rule__ConditionEtat__Group__5__Impl"
    // InternalLegoLang.g:5556:1: rule__ConditionEtat__Group__5__Impl : ( ( rule__ConditionEtat__Group_5__0 )? ) ;
    public final void rule__ConditionEtat__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5560:1: ( ( ( rule__ConditionEtat__Group_5__0 )? ) )
            // InternalLegoLang.g:5561:1: ( ( rule__ConditionEtat__Group_5__0 )? )
            {
            // InternalLegoLang.g:5561:1: ( ( rule__ConditionEtat__Group_5__0 )? )
            // InternalLegoLang.g:5562:2: ( rule__ConditionEtat__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionEtatAccess().getGroup_5()); 
            }
            // InternalLegoLang.g:5563:2: ( rule__ConditionEtat__Group_5__0 )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==49) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // InternalLegoLang.g:5563:3: rule__ConditionEtat__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ConditionEtat__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionEtatAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group__5__Impl"


    // $ANTLR start "rule__ConditionEtat__Group_5__0"
    // InternalLegoLang.g:5572:1: rule__ConditionEtat__Group_5__0 : rule__ConditionEtat__Group_5__0__Impl rule__ConditionEtat__Group_5__1 ;
    public final void rule__ConditionEtat__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5576:1: ( rule__ConditionEtat__Group_5__0__Impl rule__ConditionEtat__Group_5__1 )
            // InternalLegoLang.g:5577:2: rule__ConditionEtat__Group_5__0__Impl rule__ConditionEtat__Group_5__1
            {
            pushFollow(FOLLOW_30);
            rule__ConditionEtat__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConditionEtat__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group_5__0"


    // $ANTLR start "rule__ConditionEtat__Group_5__0__Impl"
    // InternalLegoLang.g:5584:1: rule__ConditionEtat__Group_5__0__Impl : ( 'else{' ) ;
    public final void rule__ConditionEtat__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5588:1: ( ( 'else{' ) )
            // InternalLegoLang.g:5589:1: ( 'else{' )
            {
            // InternalLegoLang.g:5589:1: ( 'else{' )
            // InternalLegoLang.g:5590:2: 'else{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionEtatAccess().getElseKeyword_5_0()); 
            }
            match(input,49,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionEtatAccess().getElseKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group_5__0__Impl"


    // $ANTLR start "rule__ConditionEtat__Group_5__1"
    // InternalLegoLang.g:5599:1: rule__ConditionEtat__Group_5__1 : rule__ConditionEtat__Group_5__1__Impl rule__ConditionEtat__Group_5__2 ;
    public final void rule__ConditionEtat__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5603:1: ( rule__ConditionEtat__Group_5__1__Impl rule__ConditionEtat__Group_5__2 )
            // InternalLegoLang.g:5604:2: rule__ConditionEtat__Group_5__1__Impl rule__ConditionEtat__Group_5__2
            {
            pushFollow(FOLLOW_31);
            rule__ConditionEtat__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ConditionEtat__Group_5__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group_5__1"


    // $ANTLR start "rule__ConditionEtat__Group_5__1__Impl"
    // InternalLegoLang.g:5611:1: rule__ConditionEtat__Group_5__1__Impl : ( ( rule__ConditionEtat__ElseAssignment_5_1 ) ) ;
    public final void rule__ConditionEtat__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5615:1: ( ( ( rule__ConditionEtat__ElseAssignment_5_1 ) ) )
            // InternalLegoLang.g:5616:1: ( ( rule__ConditionEtat__ElseAssignment_5_1 ) )
            {
            // InternalLegoLang.g:5616:1: ( ( rule__ConditionEtat__ElseAssignment_5_1 ) )
            // InternalLegoLang.g:5617:2: ( rule__ConditionEtat__ElseAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionEtatAccess().getElseAssignment_5_1()); 
            }
            // InternalLegoLang.g:5618:2: ( rule__ConditionEtat__ElseAssignment_5_1 )
            // InternalLegoLang.g:5618:3: rule__ConditionEtat__ElseAssignment_5_1
            {
            pushFollow(FOLLOW_2);
            rule__ConditionEtat__ElseAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionEtatAccess().getElseAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group_5__1__Impl"


    // $ANTLR start "rule__ConditionEtat__Group_5__2"
    // InternalLegoLang.g:5626:1: rule__ConditionEtat__Group_5__2 : rule__ConditionEtat__Group_5__2__Impl ;
    public final void rule__ConditionEtat__Group_5__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5630:1: ( rule__ConditionEtat__Group_5__2__Impl )
            // InternalLegoLang.g:5631:2: rule__ConditionEtat__Group_5__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ConditionEtat__Group_5__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group_5__2"


    // $ANTLR start "rule__ConditionEtat__Group_5__2__Impl"
    // InternalLegoLang.g:5637:1: rule__ConditionEtat__Group_5__2__Impl : ( '}' ) ;
    public final void rule__ConditionEtat__Group_5__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5641:1: ( ( '}' ) )
            // InternalLegoLang.g:5642:1: ( '}' )
            {
            // InternalLegoLang.g:5642:1: ( '}' )
            // InternalLegoLang.g:5643:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionEtatAccess().getRightCurlyBracketKeyword_5_2()); 
            }
            match(input,18,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionEtatAccess().getRightCurlyBracketKeyword_5_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__Group_5__2__Impl"


    // $ANTLR start "rule__WhileLoop__Group__0"
    // InternalLegoLang.g:5653:1: rule__WhileLoop__Group__0 : rule__WhileLoop__Group__0__Impl rule__WhileLoop__Group__1 ;
    public final void rule__WhileLoop__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5657:1: ( rule__WhileLoop__Group__0__Impl rule__WhileLoop__Group__1 )
            // InternalLegoLang.g:5658:2: rule__WhileLoop__Group__0__Impl rule__WhileLoop__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__WhileLoop__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WhileLoop__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileLoop__Group__0"


    // $ANTLR start "rule__WhileLoop__Group__0__Impl"
    // InternalLegoLang.g:5665:1: rule__WhileLoop__Group__0__Impl : ( 'while' ) ;
    public final void rule__WhileLoop__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5669:1: ( ( 'while' ) )
            // InternalLegoLang.g:5670:1: ( 'while' )
            {
            // InternalLegoLang.g:5670:1: ( 'while' )
            // InternalLegoLang.g:5671:2: 'while'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileLoopAccess().getWhileKeyword_0()); 
            }
            match(input,50,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileLoopAccess().getWhileKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileLoop__Group__0__Impl"


    // $ANTLR start "rule__WhileLoop__Group__1"
    // InternalLegoLang.g:5680:1: rule__WhileLoop__Group__1 : rule__WhileLoop__Group__1__Impl rule__WhileLoop__Group__2 ;
    public final void rule__WhileLoop__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5684:1: ( rule__WhileLoop__Group__1__Impl rule__WhileLoop__Group__2 )
            // InternalLegoLang.g:5685:2: rule__WhileLoop__Group__1__Impl rule__WhileLoop__Group__2
            {
            pushFollow(FOLLOW_5);
            rule__WhileLoop__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WhileLoop__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileLoop__Group__1"


    // $ANTLR start "rule__WhileLoop__Group__1__Impl"
    // InternalLegoLang.g:5692:1: rule__WhileLoop__Group__1__Impl : ( ( rule__WhileLoop__LoopConditionAssignment_1 ) ) ;
    public final void rule__WhileLoop__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5696:1: ( ( ( rule__WhileLoop__LoopConditionAssignment_1 ) ) )
            // InternalLegoLang.g:5697:1: ( ( rule__WhileLoop__LoopConditionAssignment_1 ) )
            {
            // InternalLegoLang.g:5697:1: ( ( rule__WhileLoop__LoopConditionAssignment_1 ) )
            // InternalLegoLang.g:5698:2: ( rule__WhileLoop__LoopConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileLoopAccess().getLoopConditionAssignment_1()); 
            }
            // InternalLegoLang.g:5699:2: ( rule__WhileLoop__LoopConditionAssignment_1 )
            // InternalLegoLang.g:5699:3: rule__WhileLoop__LoopConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__WhileLoop__LoopConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileLoopAccess().getLoopConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileLoop__Group__1__Impl"


    // $ANTLR start "rule__WhileLoop__Group__2"
    // InternalLegoLang.g:5707:1: rule__WhileLoop__Group__2 : rule__WhileLoop__Group__2__Impl rule__WhileLoop__Group__3 ;
    public final void rule__WhileLoop__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5711:1: ( rule__WhileLoop__Group__2__Impl rule__WhileLoop__Group__3 )
            // InternalLegoLang.g:5712:2: rule__WhileLoop__Group__2__Impl rule__WhileLoop__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__WhileLoop__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WhileLoop__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileLoop__Group__2"


    // $ANTLR start "rule__WhileLoop__Group__2__Impl"
    // InternalLegoLang.g:5719:1: rule__WhileLoop__Group__2__Impl : ( '{' ) ;
    public final void rule__WhileLoop__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5723:1: ( ( '{' ) )
            // InternalLegoLang.g:5724:1: ( '{' )
            {
            // InternalLegoLang.g:5724:1: ( '{' )
            // InternalLegoLang.g:5725:2: '{'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileLoopAccess().getLeftCurlyBracketKeyword_2()); 
            }
            match(input,16,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileLoopAccess().getLeftCurlyBracketKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileLoop__Group__2__Impl"


    // $ANTLR start "rule__WhileLoop__Group__3"
    // InternalLegoLang.g:5734:1: rule__WhileLoop__Group__3 : rule__WhileLoop__Group__3__Impl rule__WhileLoop__Group__4 ;
    public final void rule__WhileLoop__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5738:1: ( rule__WhileLoop__Group__3__Impl rule__WhileLoop__Group__4 )
            // InternalLegoLang.g:5739:2: rule__WhileLoop__Group__3__Impl rule__WhileLoop__Group__4
            {
            pushFollow(FOLLOW_10);
            rule__WhileLoop__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__WhileLoop__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileLoop__Group__3"


    // $ANTLR start "rule__WhileLoop__Group__3__Impl"
    // InternalLegoLang.g:5746:1: rule__WhileLoop__Group__3__Impl : ( ( rule__WhileLoop__StatementAssignment_3 )* ) ;
    public final void rule__WhileLoop__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5750:1: ( ( ( rule__WhileLoop__StatementAssignment_3 )* ) )
            // InternalLegoLang.g:5751:1: ( ( rule__WhileLoop__StatementAssignment_3 )* )
            {
            // InternalLegoLang.g:5751:1: ( ( rule__WhileLoop__StatementAssignment_3 )* )
            // InternalLegoLang.g:5752:2: ( rule__WhileLoop__StatementAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileLoopAccess().getStatementAssignment_3()); 
            }
            // InternalLegoLang.g:5753:2: ( rule__WhileLoop__StatementAssignment_3 )*
            loop22:
            do {
                int alt22=2;
                int LA22_0 = input.LA(1);

                if ( ((LA22_0>=RULE_ID && LA22_0<=RULE_STRING)||(LA22_0>=11 && LA22_0<=14)||LA22_0==19||(LA22_0>=21 && LA22_0<=29)||LA22_0==31||LA22_0==34||(LA22_0>=38 && LA22_0<=39)||LA22_0==48||(LA22_0>=50 && LA22_0<=51)||LA22_0==53||(LA22_0>=65 && LA22_0<=66)||(LA22_0>=68 && LA22_0<=70)) ) {
                    alt22=1;
                }


                switch (alt22) {
            	case 1 :
            	    // InternalLegoLang.g:5753:3: rule__WhileLoop__StatementAssignment_3
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__WhileLoop__StatementAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop22;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileLoopAccess().getStatementAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileLoop__Group__3__Impl"


    // $ANTLR start "rule__WhileLoop__Group__4"
    // InternalLegoLang.g:5761:1: rule__WhileLoop__Group__4 : rule__WhileLoop__Group__4__Impl ;
    public final void rule__WhileLoop__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5765:1: ( rule__WhileLoop__Group__4__Impl )
            // InternalLegoLang.g:5766:2: rule__WhileLoop__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__WhileLoop__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileLoop__Group__4"


    // $ANTLR start "rule__WhileLoop__Group__4__Impl"
    // InternalLegoLang.g:5772:1: rule__WhileLoop__Group__4__Impl : ( '}' ) ;
    public final void rule__WhileLoop__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5776:1: ( ( '}' ) )
            // InternalLegoLang.g:5777:1: ( '}' )
            {
            // InternalLegoLang.g:5777:1: ( '}' )
            // InternalLegoLang.g:5778:2: '}'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileLoopAccess().getRightCurlyBracketKeyword_4()); 
            }
            match(input,18,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileLoopAccess().getRightCurlyBracketKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileLoop__Group__4__Impl"


    // $ANTLR start "rule__MethodePrint__Group__0"
    // InternalLegoLang.g:5788:1: rule__MethodePrint__Group__0 : rule__MethodePrint__Group__0__Impl rule__MethodePrint__Group__1 ;
    public final void rule__MethodePrint__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5792:1: ( rule__MethodePrint__Group__0__Impl rule__MethodePrint__Group__1 )
            // InternalLegoLang.g:5793:2: rule__MethodePrint__Group__0__Impl rule__MethodePrint__Group__1
            {
            pushFollow(FOLLOW_32);
            rule__MethodePrint__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MethodePrint__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodePrint__Group__0"


    // $ANTLR start "rule__MethodePrint__Group__0__Impl"
    // InternalLegoLang.g:5800:1: rule__MethodePrint__Group__0__Impl : ( () ) ;
    public final void rule__MethodePrint__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5804:1: ( ( () ) )
            // InternalLegoLang.g:5805:1: ( () )
            {
            // InternalLegoLang.g:5805:1: ( () )
            // InternalLegoLang.g:5806:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodePrintAccess().getMethodePrintAction_0()); 
            }
            // InternalLegoLang.g:5807:2: ()
            // InternalLegoLang.g:5807:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodePrintAccess().getMethodePrintAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodePrint__Group__0__Impl"


    // $ANTLR start "rule__MethodePrint__Group__1"
    // InternalLegoLang.g:5815:1: rule__MethodePrint__Group__1 : rule__MethodePrint__Group__1__Impl rule__MethodePrint__Group__2 ;
    public final void rule__MethodePrint__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5819:1: ( rule__MethodePrint__Group__1__Impl rule__MethodePrint__Group__2 )
            // InternalLegoLang.g:5820:2: rule__MethodePrint__Group__1__Impl rule__MethodePrint__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__MethodePrint__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MethodePrint__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodePrint__Group__1"


    // $ANTLR start "rule__MethodePrint__Group__1__Impl"
    // InternalLegoLang.g:5827:1: rule__MethodePrint__Group__1__Impl : ( 'print(' ) ;
    public final void rule__MethodePrint__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5831:1: ( ( 'print(' ) )
            // InternalLegoLang.g:5832:1: ( 'print(' )
            {
            // InternalLegoLang.g:5832:1: ( 'print(' )
            // InternalLegoLang.g:5833:2: 'print('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodePrintAccess().getPrintKeyword_1()); 
            }
            match(input,51,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodePrintAccess().getPrintKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodePrint__Group__1__Impl"


    // $ANTLR start "rule__MethodePrint__Group__2"
    // InternalLegoLang.g:5842:1: rule__MethodePrint__Group__2 : rule__MethodePrint__Group__2__Impl rule__MethodePrint__Group__3 ;
    public final void rule__MethodePrint__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5846:1: ( rule__MethodePrint__Group__2__Impl rule__MethodePrint__Group__3 )
            // InternalLegoLang.g:5847:2: rule__MethodePrint__Group__2__Impl rule__MethodePrint__Group__3
            {
            pushFollow(FOLLOW_14);
            rule__MethodePrint__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MethodePrint__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodePrint__Group__2"


    // $ANTLR start "rule__MethodePrint__Group__2__Impl"
    // InternalLegoLang.g:5854:1: rule__MethodePrint__Group__2__Impl : ( ( ( rule__MethodePrint__Group_2__0 ) ) ( ( rule__MethodePrint__Group_2__0 )* ) ) ;
    public final void rule__MethodePrint__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5858:1: ( ( ( ( rule__MethodePrint__Group_2__0 ) ) ( ( rule__MethodePrint__Group_2__0 )* ) ) )
            // InternalLegoLang.g:5859:1: ( ( ( rule__MethodePrint__Group_2__0 ) ) ( ( rule__MethodePrint__Group_2__0 )* ) )
            {
            // InternalLegoLang.g:5859:1: ( ( ( rule__MethodePrint__Group_2__0 ) ) ( ( rule__MethodePrint__Group_2__0 )* ) )
            // InternalLegoLang.g:5860:2: ( ( rule__MethodePrint__Group_2__0 ) ) ( ( rule__MethodePrint__Group_2__0 )* )
            {
            // InternalLegoLang.g:5860:2: ( ( rule__MethodePrint__Group_2__0 ) )
            // InternalLegoLang.g:5861:3: ( rule__MethodePrint__Group_2__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodePrintAccess().getGroup_2()); 
            }
            // InternalLegoLang.g:5862:3: ( rule__MethodePrint__Group_2__0 )
            // InternalLegoLang.g:5862:4: rule__MethodePrint__Group_2__0
            {
            pushFollow(FOLLOW_33);
            rule__MethodePrint__Group_2__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodePrintAccess().getGroup_2()); 
            }

            }

            // InternalLegoLang.g:5865:2: ( ( rule__MethodePrint__Group_2__0 )* )
            // InternalLegoLang.g:5866:3: ( rule__MethodePrint__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodePrintAccess().getGroup_2()); 
            }
            // InternalLegoLang.g:5867:3: ( rule__MethodePrint__Group_2__0 )*
            loop23:
            do {
                int alt23=2;
                int LA23_0 = input.LA(1);

                if ( ((LA23_0>=RULE_ID && LA23_0<=RULE_STRING)||(LA23_0>=11 && LA23_0<=14)||LA23_0==29||LA23_0==31||LA23_0==34||LA23_0==38||LA23_0==53) ) {
                    alt23=1;
                }


                switch (alt23) {
            	case 1 :
            	    // InternalLegoLang.g:5867:4: rule__MethodePrint__Group_2__0
            	    {
            	    pushFollow(FOLLOW_33);
            	    rule__MethodePrint__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop23;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodePrintAccess().getGroup_2()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodePrint__Group__2__Impl"


    // $ANTLR start "rule__MethodePrint__Group__3"
    // InternalLegoLang.g:5876:1: rule__MethodePrint__Group__3 : rule__MethodePrint__Group__3__Impl ;
    public final void rule__MethodePrint__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5880:1: ( rule__MethodePrint__Group__3__Impl )
            // InternalLegoLang.g:5881:2: rule__MethodePrint__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MethodePrint__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodePrint__Group__3"


    // $ANTLR start "rule__MethodePrint__Group__3__Impl"
    // InternalLegoLang.g:5887:1: rule__MethodePrint__Group__3__Impl : ( ')' ) ;
    public final void rule__MethodePrint__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5891:1: ( ( ')' ) )
            // InternalLegoLang.g:5892:1: ( ')' )
            {
            // InternalLegoLang.g:5892:1: ( ')' )
            // InternalLegoLang.g:5893:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodePrintAccess().getRightParenthesisKeyword_3()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodePrintAccess().getRightParenthesisKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodePrint__Group__3__Impl"


    // $ANTLR start "rule__MethodePrint__Group_2__0"
    // InternalLegoLang.g:5903:1: rule__MethodePrint__Group_2__0 : rule__MethodePrint__Group_2__0__Impl rule__MethodePrint__Group_2__1 ;
    public final void rule__MethodePrint__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5907:1: ( rule__MethodePrint__Group_2__0__Impl rule__MethodePrint__Group_2__1 )
            // InternalLegoLang.g:5908:2: rule__MethodePrint__Group_2__0__Impl rule__MethodePrint__Group_2__1
            {
            pushFollow(FOLLOW_34);
            rule__MethodePrint__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MethodePrint__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodePrint__Group_2__0"


    // $ANTLR start "rule__MethodePrint__Group_2__0__Impl"
    // InternalLegoLang.g:5915:1: rule__MethodePrint__Group_2__0__Impl : ( ( rule__MethodePrint__ExpressionAssignment_2_0 ) ) ;
    public final void rule__MethodePrint__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5919:1: ( ( ( rule__MethodePrint__ExpressionAssignment_2_0 ) ) )
            // InternalLegoLang.g:5920:1: ( ( rule__MethodePrint__ExpressionAssignment_2_0 ) )
            {
            // InternalLegoLang.g:5920:1: ( ( rule__MethodePrint__ExpressionAssignment_2_0 ) )
            // InternalLegoLang.g:5921:2: ( rule__MethodePrint__ExpressionAssignment_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodePrintAccess().getExpressionAssignment_2_0()); 
            }
            // InternalLegoLang.g:5922:2: ( rule__MethodePrint__ExpressionAssignment_2_0 )
            // InternalLegoLang.g:5922:3: rule__MethodePrint__ExpressionAssignment_2_0
            {
            pushFollow(FOLLOW_2);
            rule__MethodePrint__ExpressionAssignment_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodePrintAccess().getExpressionAssignment_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodePrint__Group_2__0__Impl"


    // $ANTLR start "rule__MethodePrint__Group_2__1"
    // InternalLegoLang.g:5930:1: rule__MethodePrint__Group_2__1 : rule__MethodePrint__Group_2__1__Impl ;
    public final void rule__MethodePrint__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5934:1: ( rule__MethodePrint__Group_2__1__Impl )
            // InternalLegoLang.g:5935:2: rule__MethodePrint__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MethodePrint__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodePrint__Group_2__1"


    // $ANTLR start "rule__MethodePrint__Group_2__1__Impl"
    // InternalLegoLang.g:5941:1: rule__MethodePrint__Group_2__1__Impl : ( ',' ) ;
    public final void rule__MethodePrint__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5945:1: ( ( ',' ) )
            // InternalLegoLang.g:5946:1: ( ',' )
            {
            // InternalLegoLang.g:5946:1: ( ',' )
            // InternalLegoLang.g:5947:2: ','
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodePrintAccess().getCommaKeyword_2_1()); 
            }
            match(input,52,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodePrintAccess().getCommaKeyword_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodePrint__Group_2__1__Impl"


    // $ANTLR start "rule__Substraction__Group__0"
    // InternalLegoLang.g:5957:1: rule__Substraction__Group__0 : rule__Substraction__Group__0__Impl rule__Substraction__Group__1 ;
    public final void rule__Substraction__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5961:1: ( rule__Substraction__Group__0__Impl rule__Substraction__Group__1 )
            // InternalLegoLang.g:5962:2: rule__Substraction__Group__0__Impl rule__Substraction__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__Substraction__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Substraction__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Substraction__Group__0"


    // $ANTLR start "rule__Substraction__Group__0__Impl"
    // InternalLegoLang.g:5969:1: rule__Substraction__Group__0__Impl : ( '(' ) ;
    public final void rule__Substraction__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5973:1: ( ( '(' ) )
            // InternalLegoLang.g:5974:1: ( '(' )
            {
            // InternalLegoLang.g:5974:1: ( '(' )
            // InternalLegoLang.g:5975:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubstractionAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubstractionAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Substraction__Group__0__Impl"


    // $ANTLR start "rule__Substraction__Group__1"
    // InternalLegoLang.g:5984:1: rule__Substraction__Group__1 : rule__Substraction__Group__1__Impl rule__Substraction__Group__2 ;
    public final void rule__Substraction__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:5988:1: ( rule__Substraction__Group__1__Impl rule__Substraction__Group__2 )
            // InternalLegoLang.g:5989:2: rule__Substraction__Group__1__Impl rule__Substraction__Group__2
            {
            pushFollow(FOLLOW_35);
            rule__Substraction__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Substraction__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Substraction__Group__1"


    // $ANTLR start "rule__Substraction__Group__1__Impl"
    // InternalLegoLang.g:5996:1: rule__Substraction__Group__1__Impl : ( ( rule__Substraction__LeftAssignment_1 ) ) ;
    public final void rule__Substraction__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6000:1: ( ( ( rule__Substraction__LeftAssignment_1 ) ) )
            // InternalLegoLang.g:6001:1: ( ( rule__Substraction__LeftAssignment_1 ) )
            {
            // InternalLegoLang.g:6001:1: ( ( rule__Substraction__LeftAssignment_1 ) )
            // InternalLegoLang.g:6002:2: ( rule__Substraction__LeftAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubstractionAccess().getLeftAssignment_1()); 
            }
            // InternalLegoLang.g:6003:2: ( rule__Substraction__LeftAssignment_1 )
            // InternalLegoLang.g:6003:3: rule__Substraction__LeftAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Substraction__LeftAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubstractionAccess().getLeftAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Substraction__Group__1__Impl"


    // $ANTLR start "rule__Substraction__Group__2"
    // InternalLegoLang.g:6011:1: rule__Substraction__Group__2 : rule__Substraction__Group__2__Impl rule__Substraction__Group__3 ;
    public final void rule__Substraction__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6015:1: ( rule__Substraction__Group__2__Impl rule__Substraction__Group__3 )
            // InternalLegoLang.g:6016:2: rule__Substraction__Group__2__Impl rule__Substraction__Group__3
            {
            pushFollow(FOLLOW_16);
            rule__Substraction__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Substraction__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Substraction__Group__2"


    // $ANTLR start "rule__Substraction__Group__2__Impl"
    // InternalLegoLang.g:6023:1: rule__Substraction__Group__2__Impl : ( '-' ) ;
    public final void rule__Substraction__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6027:1: ( ( '-' ) )
            // InternalLegoLang.g:6028:1: ( '-' )
            {
            // InternalLegoLang.g:6028:1: ( '-' )
            // InternalLegoLang.g:6029:2: '-'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubstractionAccess().getHyphenMinusKeyword_2()); 
            }
            match(input,53,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubstractionAccess().getHyphenMinusKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Substraction__Group__2__Impl"


    // $ANTLR start "rule__Substraction__Group__3"
    // InternalLegoLang.g:6038:1: rule__Substraction__Group__3 : rule__Substraction__Group__3__Impl rule__Substraction__Group__4 ;
    public final void rule__Substraction__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6042:1: ( rule__Substraction__Group__3__Impl rule__Substraction__Group__4 )
            // InternalLegoLang.g:6043:2: rule__Substraction__Group__3__Impl rule__Substraction__Group__4
            {
            pushFollow(FOLLOW_14);
            rule__Substraction__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Substraction__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Substraction__Group__3"


    // $ANTLR start "rule__Substraction__Group__3__Impl"
    // InternalLegoLang.g:6050:1: rule__Substraction__Group__3__Impl : ( ( rule__Substraction__RightAssignment_3 ) ) ;
    public final void rule__Substraction__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6054:1: ( ( ( rule__Substraction__RightAssignment_3 ) ) )
            // InternalLegoLang.g:6055:1: ( ( rule__Substraction__RightAssignment_3 ) )
            {
            // InternalLegoLang.g:6055:1: ( ( rule__Substraction__RightAssignment_3 ) )
            // InternalLegoLang.g:6056:2: ( rule__Substraction__RightAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubstractionAccess().getRightAssignment_3()); 
            }
            // InternalLegoLang.g:6057:2: ( rule__Substraction__RightAssignment_3 )
            // InternalLegoLang.g:6057:3: rule__Substraction__RightAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Substraction__RightAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubstractionAccess().getRightAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Substraction__Group__3__Impl"


    // $ANTLR start "rule__Substraction__Group__4"
    // InternalLegoLang.g:6065:1: rule__Substraction__Group__4 : rule__Substraction__Group__4__Impl ;
    public final void rule__Substraction__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6069:1: ( rule__Substraction__Group__4__Impl )
            // InternalLegoLang.g:6070:2: rule__Substraction__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Substraction__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Substraction__Group__4"


    // $ANTLR start "rule__Substraction__Group__4__Impl"
    // InternalLegoLang.g:6076:1: rule__Substraction__Group__4__Impl : ( ')' ) ;
    public final void rule__Substraction__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6080:1: ( ( ')' ) )
            // InternalLegoLang.g:6081:1: ( ')' )
            {
            // InternalLegoLang.g:6081:1: ( ')' )
            // InternalLegoLang.g:6082:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubstractionAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubstractionAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Substraction__Group__4__Impl"


    // $ANTLR start "rule__Addition__Group__0"
    // InternalLegoLang.g:6092:1: rule__Addition__Group__0 : rule__Addition__Group__0__Impl rule__Addition__Group__1 ;
    public final void rule__Addition__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6096:1: ( rule__Addition__Group__0__Impl rule__Addition__Group__1 )
            // InternalLegoLang.g:6097:2: rule__Addition__Group__0__Impl rule__Addition__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__Addition__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Addition__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group__0"


    // $ANTLR start "rule__Addition__Group__0__Impl"
    // InternalLegoLang.g:6104:1: rule__Addition__Group__0__Impl : ( '(' ) ;
    public final void rule__Addition__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6108:1: ( ( '(' ) )
            // InternalLegoLang.g:6109:1: ( '(' )
            {
            // InternalLegoLang.g:6109:1: ( '(' )
            // InternalLegoLang.g:6110:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditionAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditionAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group__0__Impl"


    // $ANTLR start "rule__Addition__Group__1"
    // InternalLegoLang.g:6119:1: rule__Addition__Group__1 : rule__Addition__Group__1__Impl rule__Addition__Group__2 ;
    public final void rule__Addition__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6123:1: ( rule__Addition__Group__1__Impl rule__Addition__Group__2 )
            // InternalLegoLang.g:6124:2: rule__Addition__Group__1__Impl rule__Addition__Group__2
            {
            pushFollow(FOLLOW_36);
            rule__Addition__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Addition__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group__1"


    // $ANTLR start "rule__Addition__Group__1__Impl"
    // InternalLegoLang.g:6131:1: rule__Addition__Group__1__Impl : ( ( rule__Addition__LeftAssignment_1 ) ) ;
    public final void rule__Addition__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6135:1: ( ( ( rule__Addition__LeftAssignment_1 ) ) )
            // InternalLegoLang.g:6136:1: ( ( rule__Addition__LeftAssignment_1 ) )
            {
            // InternalLegoLang.g:6136:1: ( ( rule__Addition__LeftAssignment_1 ) )
            // InternalLegoLang.g:6137:2: ( rule__Addition__LeftAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditionAccess().getLeftAssignment_1()); 
            }
            // InternalLegoLang.g:6138:2: ( rule__Addition__LeftAssignment_1 )
            // InternalLegoLang.g:6138:3: rule__Addition__LeftAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Addition__LeftAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditionAccess().getLeftAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group__1__Impl"


    // $ANTLR start "rule__Addition__Group__2"
    // InternalLegoLang.g:6146:1: rule__Addition__Group__2 : rule__Addition__Group__2__Impl rule__Addition__Group__3 ;
    public final void rule__Addition__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6150:1: ( rule__Addition__Group__2__Impl rule__Addition__Group__3 )
            // InternalLegoLang.g:6151:2: rule__Addition__Group__2__Impl rule__Addition__Group__3
            {
            pushFollow(FOLLOW_16);
            rule__Addition__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Addition__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group__2"


    // $ANTLR start "rule__Addition__Group__2__Impl"
    // InternalLegoLang.g:6158:1: rule__Addition__Group__2__Impl : ( '+' ) ;
    public final void rule__Addition__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6162:1: ( ( '+' ) )
            // InternalLegoLang.g:6163:1: ( '+' )
            {
            // InternalLegoLang.g:6163:1: ( '+' )
            // InternalLegoLang.g:6164:2: '+'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditionAccess().getPlusSignKeyword_2()); 
            }
            match(input,54,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditionAccess().getPlusSignKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group__2__Impl"


    // $ANTLR start "rule__Addition__Group__3"
    // InternalLegoLang.g:6173:1: rule__Addition__Group__3 : rule__Addition__Group__3__Impl rule__Addition__Group__4 ;
    public final void rule__Addition__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6177:1: ( rule__Addition__Group__3__Impl rule__Addition__Group__4 )
            // InternalLegoLang.g:6178:2: rule__Addition__Group__3__Impl rule__Addition__Group__4
            {
            pushFollow(FOLLOW_14);
            rule__Addition__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Addition__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group__3"


    // $ANTLR start "rule__Addition__Group__3__Impl"
    // InternalLegoLang.g:6185:1: rule__Addition__Group__3__Impl : ( ( rule__Addition__RightAssignment_3 ) ) ;
    public final void rule__Addition__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6189:1: ( ( ( rule__Addition__RightAssignment_3 ) ) )
            // InternalLegoLang.g:6190:1: ( ( rule__Addition__RightAssignment_3 ) )
            {
            // InternalLegoLang.g:6190:1: ( ( rule__Addition__RightAssignment_3 ) )
            // InternalLegoLang.g:6191:2: ( rule__Addition__RightAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditionAccess().getRightAssignment_3()); 
            }
            // InternalLegoLang.g:6192:2: ( rule__Addition__RightAssignment_3 )
            // InternalLegoLang.g:6192:3: rule__Addition__RightAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Addition__RightAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditionAccess().getRightAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group__3__Impl"


    // $ANTLR start "rule__Addition__Group__4"
    // InternalLegoLang.g:6200:1: rule__Addition__Group__4 : rule__Addition__Group__4__Impl ;
    public final void rule__Addition__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6204:1: ( rule__Addition__Group__4__Impl )
            // InternalLegoLang.g:6205:2: rule__Addition__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Addition__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group__4"


    // $ANTLR start "rule__Addition__Group__4__Impl"
    // InternalLegoLang.g:6211:1: rule__Addition__Group__4__Impl : ( ')' ) ;
    public final void rule__Addition__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6215:1: ( ( ')' ) )
            // InternalLegoLang.g:6216:1: ( ')' )
            {
            // InternalLegoLang.g:6216:1: ( ')' )
            // InternalLegoLang.g:6217:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditionAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditionAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__Group__4__Impl"


    // $ANTLR start "rule__Multiplication__Group__0"
    // InternalLegoLang.g:6227:1: rule__Multiplication__Group__0 : rule__Multiplication__Group__0__Impl rule__Multiplication__Group__1 ;
    public final void rule__Multiplication__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6231:1: ( rule__Multiplication__Group__0__Impl rule__Multiplication__Group__1 )
            // InternalLegoLang.g:6232:2: rule__Multiplication__Group__0__Impl rule__Multiplication__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__Multiplication__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Multiplication__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group__0"


    // $ANTLR start "rule__Multiplication__Group__0__Impl"
    // InternalLegoLang.g:6239:1: rule__Multiplication__Group__0__Impl : ( '(' ) ;
    public final void rule__Multiplication__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6243:1: ( ( '(' ) )
            // InternalLegoLang.g:6244:1: ( '(' )
            {
            // InternalLegoLang.g:6244:1: ( '(' )
            // InternalLegoLang.g:6245:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicationAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicationAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group__0__Impl"


    // $ANTLR start "rule__Multiplication__Group__1"
    // InternalLegoLang.g:6254:1: rule__Multiplication__Group__1 : rule__Multiplication__Group__1__Impl rule__Multiplication__Group__2 ;
    public final void rule__Multiplication__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6258:1: ( rule__Multiplication__Group__1__Impl rule__Multiplication__Group__2 )
            // InternalLegoLang.g:6259:2: rule__Multiplication__Group__1__Impl rule__Multiplication__Group__2
            {
            pushFollow(FOLLOW_37);
            rule__Multiplication__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Multiplication__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group__1"


    // $ANTLR start "rule__Multiplication__Group__1__Impl"
    // InternalLegoLang.g:6266:1: rule__Multiplication__Group__1__Impl : ( ( rule__Multiplication__LeftAssignment_1 ) ) ;
    public final void rule__Multiplication__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6270:1: ( ( ( rule__Multiplication__LeftAssignment_1 ) ) )
            // InternalLegoLang.g:6271:1: ( ( rule__Multiplication__LeftAssignment_1 ) )
            {
            // InternalLegoLang.g:6271:1: ( ( rule__Multiplication__LeftAssignment_1 ) )
            // InternalLegoLang.g:6272:2: ( rule__Multiplication__LeftAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicationAccess().getLeftAssignment_1()); 
            }
            // InternalLegoLang.g:6273:2: ( rule__Multiplication__LeftAssignment_1 )
            // InternalLegoLang.g:6273:3: rule__Multiplication__LeftAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Multiplication__LeftAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicationAccess().getLeftAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group__1__Impl"


    // $ANTLR start "rule__Multiplication__Group__2"
    // InternalLegoLang.g:6281:1: rule__Multiplication__Group__2 : rule__Multiplication__Group__2__Impl rule__Multiplication__Group__3 ;
    public final void rule__Multiplication__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6285:1: ( rule__Multiplication__Group__2__Impl rule__Multiplication__Group__3 )
            // InternalLegoLang.g:6286:2: rule__Multiplication__Group__2__Impl rule__Multiplication__Group__3
            {
            pushFollow(FOLLOW_16);
            rule__Multiplication__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Multiplication__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group__2"


    // $ANTLR start "rule__Multiplication__Group__2__Impl"
    // InternalLegoLang.g:6293:1: rule__Multiplication__Group__2__Impl : ( '*' ) ;
    public final void rule__Multiplication__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6297:1: ( ( '*' ) )
            // InternalLegoLang.g:6298:1: ( '*' )
            {
            // InternalLegoLang.g:6298:1: ( '*' )
            // InternalLegoLang.g:6299:2: '*'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicationAccess().getAsteriskKeyword_2()); 
            }
            match(input,55,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicationAccess().getAsteriskKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group__2__Impl"


    // $ANTLR start "rule__Multiplication__Group__3"
    // InternalLegoLang.g:6308:1: rule__Multiplication__Group__3 : rule__Multiplication__Group__3__Impl rule__Multiplication__Group__4 ;
    public final void rule__Multiplication__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6312:1: ( rule__Multiplication__Group__3__Impl rule__Multiplication__Group__4 )
            // InternalLegoLang.g:6313:2: rule__Multiplication__Group__3__Impl rule__Multiplication__Group__4
            {
            pushFollow(FOLLOW_14);
            rule__Multiplication__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Multiplication__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group__3"


    // $ANTLR start "rule__Multiplication__Group__3__Impl"
    // InternalLegoLang.g:6320:1: rule__Multiplication__Group__3__Impl : ( ( rule__Multiplication__RightAssignment_3 ) ) ;
    public final void rule__Multiplication__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6324:1: ( ( ( rule__Multiplication__RightAssignment_3 ) ) )
            // InternalLegoLang.g:6325:1: ( ( rule__Multiplication__RightAssignment_3 ) )
            {
            // InternalLegoLang.g:6325:1: ( ( rule__Multiplication__RightAssignment_3 ) )
            // InternalLegoLang.g:6326:2: ( rule__Multiplication__RightAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicationAccess().getRightAssignment_3()); 
            }
            // InternalLegoLang.g:6327:2: ( rule__Multiplication__RightAssignment_3 )
            // InternalLegoLang.g:6327:3: rule__Multiplication__RightAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Multiplication__RightAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicationAccess().getRightAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group__3__Impl"


    // $ANTLR start "rule__Multiplication__Group__4"
    // InternalLegoLang.g:6335:1: rule__Multiplication__Group__4 : rule__Multiplication__Group__4__Impl ;
    public final void rule__Multiplication__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6339:1: ( rule__Multiplication__Group__4__Impl )
            // InternalLegoLang.g:6340:2: rule__Multiplication__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Multiplication__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group__4"


    // $ANTLR start "rule__Multiplication__Group__4__Impl"
    // InternalLegoLang.g:6346:1: rule__Multiplication__Group__4__Impl : ( ')' ) ;
    public final void rule__Multiplication__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6350:1: ( ( ')' ) )
            // InternalLegoLang.g:6351:1: ( ')' )
            {
            // InternalLegoLang.g:6351:1: ( ')' )
            // InternalLegoLang.g:6352:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicationAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicationAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__Group__4__Impl"


    // $ANTLR start "rule__Division__Group__0"
    // InternalLegoLang.g:6362:1: rule__Division__Group__0 : rule__Division__Group__0__Impl rule__Division__Group__1 ;
    public final void rule__Division__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6366:1: ( rule__Division__Group__0__Impl rule__Division__Group__1 )
            // InternalLegoLang.g:6367:2: rule__Division__Group__0__Impl rule__Division__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__Division__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Division__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Division__Group__0"


    // $ANTLR start "rule__Division__Group__0__Impl"
    // InternalLegoLang.g:6374:1: rule__Division__Group__0__Impl : ( '(' ) ;
    public final void rule__Division__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6378:1: ( ( '(' ) )
            // InternalLegoLang.g:6379:1: ( '(' )
            {
            // InternalLegoLang.g:6379:1: ( '(' )
            // InternalLegoLang.g:6380:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDivisionAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDivisionAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Division__Group__0__Impl"


    // $ANTLR start "rule__Division__Group__1"
    // InternalLegoLang.g:6389:1: rule__Division__Group__1 : rule__Division__Group__1__Impl rule__Division__Group__2 ;
    public final void rule__Division__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6393:1: ( rule__Division__Group__1__Impl rule__Division__Group__2 )
            // InternalLegoLang.g:6394:2: rule__Division__Group__1__Impl rule__Division__Group__2
            {
            pushFollow(FOLLOW_38);
            rule__Division__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Division__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Division__Group__1"


    // $ANTLR start "rule__Division__Group__1__Impl"
    // InternalLegoLang.g:6401:1: rule__Division__Group__1__Impl : ( ( rule__Division__LeftAssignment_1 ) ) ;
    public final void rule__Division__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6405:1: ( ( ( rule__Division__LeftAssignment_1 ) ) )
            // InternalLegoLang.g:6406:1: ( ( rule__Division__LeftAssignment_1 ) )
            {
            // InternalLegoLang.g:6406:1: ( ( rule__Division__LeftAssignment_1 ) )
            // InternalLegoLang.g:6407:2: ( rule__Division__LeftAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDivisionAccess().getLeftAssignment_1()); 
            }
            // InternalLegoLang.g:6408:2: ( rule__Division__LeftAssignment_1 )
            // InternalLegoLang.g:6408:3: rule__Division__LeftAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Division__LeftAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDivisionAccess().getLeftAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Division__Group__1__Impl"


    // $ANTLR start "rule__Division__Group__2"
    // InternalLegoLang.g:6416:1: rule__Division__Group__2 : rule__Division__Group__2__Impl rule__Division__Group__3 ;
    public final void rule__Division__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6420:1: ( rule__Division__Group__2__Impl rule__Division__Group__3 )
            // InternalLegoLang.g:6421:2: rule__Division__Group__2__Impl rule__Division__Group__3
            {
            pushFollow(FOLLOW_16);
            rule__Division__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Division__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Division__Group__2"


    // $ANTLR start "rule__Division__Group__2__Impl"
    // InternalLegoLang.g:6428:1: rule__Division__Group__2__Impl : ( '/' ) ;
    public final void rule__Division__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6432:1: ( ( '/' ) )
            // InternalLegoLang.g:6433:1: ( '/' )
            {
            // InternalLegoLang.g:6433:1: ( '/' )
            // InternalLegoLang.g:6434:2: '/'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDivisionAccess().getSolidusKeyword_2()); 
            }
            match(input,56,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDivisionAccess().getSolidusKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Division__Group__2__Impl"


    // $ANTLR start "rule__Division__Group__3"
    // InternalLegoLang.g:6443:1: rule__Division__Group__3 : rule__Division__Group__3__Impl rule__Division__Group__4 ;
    public final void rule__Division__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6447:1: ( rule__Division__Group__3__Impl rule__Division__Group__4 )
            // InternalLegoLang.g:6448:2: rule__Division__Group__3__Impl rule__Division__Group__4
            {
            pushFollow(FOLLOW_14);
            rule__Division__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Division__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Division__Group__3"


    // $ANTLR start "rule__Division__Group__3__Impl"
    // InternalLegoLang.g:6455:1: rule__Division__Group__3__Impl : ( ( rule__Division__RightAssignment_3 ) ) ;
    public final void rule__Division__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6459:1: ( ( ( rule__Division__RightAssignment_3 ) ) )
            // InternalLegoLang.g:6460:1: ( ( rule__Division__RightAssignment_3 ) )
            {
            // InternalLegoLang.g:6460:1: ( ( rule__Division__RightAssignment_3 ) )
            // InternalLegoLang.g:6461:2: ( rule__Division__RightAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDivisionAccess().getRightAssignment_3()); 
            }
            // InternalLegoLang.g:6462:2: ( rule__Division__RightAssignment_3 )
            // InternalLegoLang.g:6462:3: rule__Division__RightAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Division__RightAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDivisionAccess().getRightAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Division__Group__3__Impl"


    // $ANTLR start "rule__Division__Group__4"
    // InternalLegoLang.g:6470:1: rule__Division__Group__4 : rule__Division__Group__4__Impl ;
    public final void rule__Division__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6474:1: ( rule__Division__Group__4__Impl )
            // InternalLegoLang.g:6475:2: rule__Division__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Division__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Division__Group__4"


    // $ANTLR start "rule__Division__Group__4__Impl"
    // InternalLegoLang.g:6481:1: rule__Division__Group__4__Impl : ( ')' ) ;
    public final void rule__Division__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6485:1: ( ( ')' ) )
            // InternalLegoLang.g:6486:1: ( ')' )
            {
            // InternalLegoLang.g:6486:1: ( ')' )
            // InternalLegoLang.g:6487:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDivisionAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDivisionAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Division__Group__4__Impl"


    // $ANTLR start "rule__GT__Group__0"
    // InternalLegoLang.g:6497:1: rule__GT__Group__0 : rule__GT__Group__0__Impl rule__GT__Group__1 ;
    public final void rule__GT__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6501:1: ( rule__GT__Group__0__Impl rule__GT__Group__1 )
            // InternalLegoLang.g:6502:2: rule__GT__Group__0__Impl rule__GT__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__GT__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GT__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GT__Group__0"


    // $ANTLR start "rule__GT__Group__0__Impl"
    // InternalLegoLang.g:6509:1: rule__GT__Group__0__Impl : ( '(' ) ;
    public final void rule__GT__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6513:1: ( ( '(' ) )
            // InternalLegoLang.g:6514:1: ( '(' )
            {
            // InternalLegoLang.g:6514:1: ( '(' )
            // InternalLegoLang.g:6515:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GT__Group__0__Impl"


    // $ANTLR start "rule__GT__Group__1"
    // InternalLegoLang.g:6524:1: rule__GT__Group__1 : rule__GT__Group__1__Impl rule__GT__Group__2 ;
    public final void rule__GT__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6528:1: ( rule__GT__Group__1__Impl rule__GT__Group__2 )
            // InternalLegoLang.g:6529:2: rule__GT__Group__1__Impl rule__GT__Group__2
            {
            pushFollow(FOLLOW_39);
            rule__GT__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GT__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GT__Group__1"


    // $ANTLR start "rule__GT__Group__1__Impl"
    // InternalLegoLang.g:6536:1: rule__GT__Group__1__Impl : ( ( rule__GT__LeftAssignment_1 ) ) ;
    public final void rule__GT__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6540:1: ( ( ( rule__GT__LeftAssignment_1 ) ) )
            // InternalLegoLang.g:6541:1: ( ( rule__GT__LeftAssignment_1 ) )
            {
            // InternalLegoLang.g:6541:1: ( ( rule__GT__LeftAssignment_1 ) )
            // InternalLegoLang.g:6542:2: ( rule__GT__LeftAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTAccess().getLeftAssignment_1()); 
            }
            // InternalLegoLang.g:6543:2: ( rule__GT__LeftAssignment_1 )
            // InternalLegoLang.g:6543:3: rule__GT__LeftAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__GT__LeftAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTAccess().getLeftAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GT__Group__1__Impl"


    // $ANTLR start "rule__GT__Group__2"
    // InternalLegoLang.g:6551:1: rule__GT__Group__2 : rule__GT__Group__2__Impl rule__GT__Group__3 ;
    public final void rule__GT__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6555:1: ( rule__GT__Group__2__Impl rule__GT__Group__3 )
            // InternalLegoLang.g:6556:2: rule__GT__Group__2__Impl rule__GT__Group__3
            {
            pushFollow(FOLLOW_16);
            rule__GT__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GT__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GT__Group__2"


    // $ANTLR start "rule__GT__Group__2__Impl"
    // InternalLegoLang.g:6563:1: rule__GT__Group__2__Impl : ( '>' ) ;
    public final void rule__GT__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6567:1: ( ( '>' ) )
            // InternalLegoLang.g:6568:1: ( '>' )
            {
            // InternalLegoLang.g:6568:1: ( '>' )
            // InternalLegoLang.g:6569:2: '>'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTAccess().getGreaterThanSignKeyword_2()); 
            }
            match(input,57,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTAccess().getGreaterThanSignKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GT__Group__2__Impl"


    // $ANTLR start "rule__GT__Group__3"
    // InternalLegoLang.g:6578:1: rule__GT__Group__3 : rule__GT__Group__3__Impl rule__GT__Group__4 ;
    public final void rule__GT__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6582:1: ( rule__GT__Group__3__Impl rule__GT__Group__4 )
            // InternalLegoLang.g:6583:2: rule__GT__Group__3__Impl rule__GT__Group__4
            {
            pushFollow(FOLLOW_14);
            rule__GT__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GT__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GT__Group__3"


    // $ANTLR start "rule__GT__Group__3__Impl"
    // InternalLegoLang.g:6590:1: rule__GT__Group__3__Impl : ( ( rule__GT__RightAssignment_3 ) ) ;
    public final void rule__GT__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6594:1: ( ( ( rule__GT__RightAssignment_3 ) ) )
            // InternalLegoLang.g:6595:1: ( ( rule__GT__RightAssignment_3 ) )
            {
            // InternalLegoLang.g:6595:1: ( ( rule__GT__RightAssignment_3 ) )
            // InternalLegoLang.g:6596:2: ( rule__GT__RightAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTAccess().getRightAssignment_3()); 
            }
            // InternalLegoLang.g:6597:2: ( rule__GT__RightAssignment_3 )
            // InternalLegoLang.g:6597:3: rule__GT__RightAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__GT__RightAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTAccess().getRightAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GT__Group__3__Impl"


    // $ANTLR start "rule__GT__Group__4"
    // InternalLegoLang.g:6605:1: rule__GT__Group__4 : rule__GT__Group__4__Impl ;
    public final void rule__GT__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6609:1: ( rule__GT__Group__4__Impl )
            // InternalLegoLang.g:6610:2: rule__GT__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GT__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GT__Group__4"


    // $ANTLR start "rule__GT__Group__4__Impl"
    // InternalLegoLang.g:6616:1: rule__GT__Group__4__Impl : ( ')' ) ;
    public final void rule__GT__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6620:1: ( ( ')' ) )
            // InternalLegoLang.g:6621:1: ( ')' )
            {
            // InternalLegoLang.g:6621:1: ( ')' )
            // InternalLegoLang.g:6622:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GT__Group__4__Impl"


    // $ANTLR start "rule__LT__Group__0"
    // InternalLegoLang.g:6632:1: rule__LT__Group__0 : rule__LT__Group__0__Impl rule__LT__Group__1 ;
    public final void rule__LT__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6636:1: ( rule__LT__Group__0__Impl rule__LT__Group__1 )
            // InternalLegoLang.g:6637:2: rule__LT__Group__0__Impl rule__LT__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__LT__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LT__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LT__Group__0"


    // $ANTLR start "rule__LT__Group__0__Impl"
    // InternalLegoLang.g:6644:1: rule__LT__Group__0__Impl : ( '(' ) ;
    public final void rule__LT__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6648:1: ( ( '(' ) )
            // InternalLegoLang.g:6649:1: ( '(' )
            {
            // InternalLegoLang.g:6649:1: ( '(' )
            // InternalLegoLang.g:6650:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LT__Group__0__Impl"


    // $ANTLR start "rule__LT__Group__1"
    // InternalLegoLang.g:6659:1: rule__LT__Group__1 : rule__LT__Group__1__Impl rule__LT__Group__2 ;
    public final void rule__LT__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6663:1: ( rule__LT__Group__1__Impl rule__LT__Group__2 )
            // InternalLegoLang.g:6664:2: rule__LT__Group__1__Impl rule__LT__Group__2
            {
            pushFollow(FOLLOW_40);
            rule__LT__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LT__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LT__Group__1"


    // $ANTLR start "rule__LT__Group__1__Impl"
    // InternalLegoLang.g:6671:1: rule__LT__Group__1__Impl : ( ( rule__LT__LeftAssignment_1 ) ) ;
    public final void rule__LT__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6675:1: ( ( ( rule__LT__LeftAssignment_1 ) ) )
            // InternalLegoLang.g:6676:1: ( ( rule__LT__LeftAssignment_1 ) )
            {
            // InternalLegoLang.g:6676:1: ( ( rule__LT__LeftAssignment_1 ) )
            // InternalLegoLang.g:6677:2: ( rule__LT__LeftAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTAccess().getLeftAssignment_1()); 
            }
            // InternalLegoLang.g:6678:2: ( rule__LT__LeftAssignment_1 )
            // InternalLegoLang.g:6678:3: rule__LT__LeftAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__LT__LeftAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTAccess().getLeftAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LT__Group__1__Impl"


    // $ANTLR start "rule__LT__Group__2"
    // InternalLegoLang.g:6686:1: rule__LT__Group__2 : rule__LT__Group__2__Impl rule__LT__Group__3 ;
    public final void rule__LT__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6690:1: ( rule__LT__Group__2__Impl rule__LT__Group__3 )
            // InternalLegoLang.g:6691:2: rule__LT__Group__2__Impl rule__LT__Group__3
            {
            pushFollow(FOLLOW_16);
            rule__LT__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LT__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LT__Group__2"


    // $ANTLR start "rule__LT__Group__2__Impl"
    // InternalLegoLang.g:6698:1: rule__LT__Group__2__Impl : ( '<' ) ;
    public final void rule__LT__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6702:1: ( ( '<' ) )
            // InternalLegoLang.g:6703:1: ( '<' )
            {
            // InternalLegoLang.g:6703:1: ( '<' )
            // InternalLegoLang.g:6704:2: '<'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTAccess().getLessThanSignKeyword_2()); 
            }
            match(input,58,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTAccess().getLessThanSignKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LT__Group__2__Impl"


    // $ANTLR start "rule__LT__Group__3"
    // InternalLegoLang.g:6713:1: rule__LT__Group__3 : rule__LT__Group__3__Impl rule__LT__Group__4 ;
    public final void rule__LT__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6717:1: ( rule__LT__Group__3__Impl rule__LT__Group__4 )
            // InternalLegoLang.g:6718:2: rule__LT__Group__3__Impl rule__LT__Group__4
            {
            pushFollow(FOLLOW_14);
            rule__LT__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LT__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LT__Group__3"


    // $ANTLR start "rule__LT__Group__3__Impl"
    // InternalLegoLang.g:6725:1: rule__LT__Group__3__Impl : ( ( rule__LT__RightAssignment_3 ) ) ;
    public final void rule__LT__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6729:1: ( ( ( rule__LT__RightAssignment_3 ) ) )
            // InternalLegoLang.g:6730:1: ( ( rule__LT__RightAssignment_3 ) )
            {
            // InternalLegoLang.g:6730:1: ( ( rule__LT__RightAssignment_3 ) )
            // InternalLegoLang.g:6731:2: ( rule__LT__RightAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTAccess().getRightAssignment_3()); 
            }
            // InternalLegoLang.g:6732:2: ( rule__LT__RightAssignment_3 )
            // InternalLegoLang.g:6732:3: rule__LT__RightAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__LT__RightAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTAccess().getRightAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LT__Group__3__Impl"


    // $ANTLR start "rule__LT__Group__4"
    // InternalLegoLang.g:6740:1: rule__LT__Group__4 : rule__LT__Group__4__Impl ;
    public final void rule__LT__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6744:1: ( rule__LT__Group__4__Impl )
            // InternalLegoLang.g:6745:2: rule__LT__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LT__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LT__Group__4"


    // $ANTLR start "rule__LT__Group__4__Impl"
    // InternalLegoLang.g:6751:1: rule__LT__Group__4__Impl : ( ')' ) ;
    public final void rule__LT__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6755:1: ( ( ')' ) )
            // InternalLegoLang.g:6756:1: ( ')' )
            {
            // InternalLegoLang.g:6756:1: ( ')' )
            // InternalLegoLang.g:6757:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LT__Group__4__Impl"


    // $ANTLR start "rule__Equal__Group__0"
    // InternalLegoLang.g:6767:1: rule__Equal__Group__0 : rule__Equal__Group__0__Impl rule__Equal__Group__1 ;
    public final void rule__Equal__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6771:1: ( rule__Equal__Group__0__Impl rule__Equal__Group__1 )
            // InternalLegoLang.g:6772:2: rule__Equal__Group__0__Impl rule__Equal__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__Equal__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Equal__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equal__Group__0"


    // $ANTLR start "rule__Equal__Group__0__Impl"
    // InternalLegoLang.g:6779:1: rule__Equal__Group__0__Impl : ( '(' ) ;
    public final void rule__Equal__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6783:1: ( ( '(' ) )
            // InternalLegoLang.g:6784:1: ( '(' )
            {
            // InternalLegoLang.g:6784:1: ( '(' )
            // InternalLegoLang.g:6785:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equal__Group__0__Impl"


    // $ANTLR start "rule__Equal__Group__1"
    // InternalLegoLang.g:6794:1: rule__Equal__Group__1 : rule__Equal__Group__1__Impl rule__Equal__Group__2 ;
    public final void rule__Equal__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6798:1: ( rule__Equal__Group__1__Impl rule__Equal__Group__2 )
            // InternalLegoLang.g:6799:2: rule__Equal__Group__1__Impl rule__Equal__Group__2
            {
            pushFollow(FOLLOW_41);
            rule__Equal__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Equal__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equal__Group__1"


    // $ANTLR start "rule__Equal__Group__1__Impl"
    // InternalLegoLang.g:6806:1: rule__Equal__Group__1__Impl : ( ( rule__Equal__LeftAssignment_1 ) ) ;
    public final void rule__Equal__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6810:1: ( ( ( rule__Equal__LeftAssignment_1 ) ) )
            // InternalLegoLang.g:6811:1: ( ( rule__Equal__LeftAssignment_1 ) )
            {
            // InternalLegoLang.g:6811:1: ( ( rule__Equal__LeftAssignment_1 ) )
            // InternalLegoLang.g:6812:2: ( rule__Equal__LeftAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualAccess().getLeftAssignment_1()); 
            }
            // InternalLegoLang.g:6813:2: ( rule__Equal__LeftAssignment_1 )
            // InternalLegoLang.g:6813:3: rule__Equal__LeftAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Equal__LeftAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualAccess().getLeftAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equal__Group__1__Impl"


    // $ANTLR start "rule__Equal__Group__2"
    // InternalLegoLang.g:6821:1: rule__Equal__Group__2 : rule__Equal__Group__2__Impl rule__Equal__Group__3 ;
    public final void rule__Equal__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6825:1: ( rule__Equal__Group__2__Impl rule__Equal__Group__3 )
            // InternalLegoLang.g:6826:2: rule__Equal__Group__2__Impl rule__Equal__Group__3
            {
            pushFollow(FOLLOW_16);
            rule__Equal__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Equal__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equal__Group__2"


    // $ANTLR start "rule__Equal__Group__2__Impl"
    // InternalLegoLang.g:6833:1: rule__Equal__Group__2__Impl : ( '==' ) ;
    public final void rule__Equal__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6837:1: ( ( '==' ) )
            // InternalLegoLang.g:6838:1: ( '==' )
            {
            // InternalLegoLang.g:6838:1: ( '==' )
            // InternalLegoLang.g:6839:2: '=='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualAccess().getEqualsSignEqualsSignKeyword_2()); 
            }
            match(input,59,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualAccess().getEqualsSignEqualsSignKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equal__Group__2__Impl"


    // $ANTLR start "rule__Equal__Group__3"
    // InternalLegoLang.g:6848:1: rule__Equal__Group__3 : rule__Equal__Group__3__Impl rule__Equal__Group__4 ;
    public final void rule__Equal__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6852:1: ( rule__Equal__Group__3__Impl rule__Equal__Group__4 )
            // InternalLegoLang.g:6853:2: rule__Equal__Group__3__Impl rule__Equal__Group__4
            {
            pushFollow(FOLLOW_14);
            rule__Equal__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Equal__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equal__Group__3"


    // $ANTLR start "rule__Equal__Group__3__Impl"
    // InternalLegoLang.g:6860:1: rule__Equal__Group__3__Impl : ( ( rule__Equal__RightAssignment_3 ) ) ;
    public final void rule__Equal__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6864:1: ( ( ( rule__Equal__RightAssignment_3 ) ) )
            // InternalLegoLang.g:6865:1: ( ( rule__Equal__RightAssignment_3 ) )
            {
            // InternalLegoLang.g:6865:1: ( ( rule__Equal__RightAssignment_3 ) )
            // InternalLegoLang.g:6866:2: ( rule__Equal__RightAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualAccess().getRightAssignment_3()); 
            }
            // InternalLegoLang.g:6867:2: ( rule__Equal__RightAssignment_3 )
            // InternalLegoLang.g:6867:3: rule__Equal__RightAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Equal__RightAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualAccess().getRightAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equal__Group__3__Impl"


    // $ANTLR start "rule__Equal__Group__4"
    // InternalLegoLang.g:6875:1: rule__Equal__Group__4 : rule__Equal__Group__4__Impl ;
    public final void rule__Equal__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6879:1: ( rule__Equal__Group__4__Impl )
            // InternalLegoLang.g:6880:2: rule__Equal__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Equal__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equal__Group__4"


    // $ANTLR start "rule__Equal__Group__4__Impl"
    // InternalLegoLang.g:6886:1: rule__Equal__Group__4__Impl : ( ')' ) ;
    public final void rule__Equal__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6890:1: ( ( ')' ) )
            // InternalLegoLang.g:6891:1: ( ')' )
            {
            // InternalLegoLang.g:6891:1: ( ')' )
            // InternalLegoLang.g:6892:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equal__Group__4__Impl"


    // $ANTLR start "rule__Different__Group__0"
    // InternalLegoLang.g:6902:1: rule__Different__Group__0 : rule__Different__Group__0__Impl rule__Different__Group__1 ;
    public final void rule__Different__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6906:1: ( rule__Different__Group__0__Impl rule__Different__Group__1 )
            // InternalLegoLang.g:6907:2: rule__Different__Group__0__Impl rule__Different__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__Different__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Different__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Different__Group__0"


    // $ANTLR start "rule__Different__Group__0__Impl"
    // InternalLegoLang.g:6914:1: rule__Different__Group__0__Impl : ( '(' ) ;
    public final void rule__Different__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6918:1: ( ( '(' ) )
            // InternalLegoLang.g:6919:1: ( '(' )
            {
            // InternalLegoLang.g:6919:1: ( '(' )
            // InternalLegoLang.g:6920:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDifferentAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDifferentAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Different__Group__0__Impl"


    // $ANTLR start "rule__Different__Group__1"
    // InternalLegoLang.g:6929:1: rule__Different__Group__1 : rule__Different__Group__1__Impl rule__Different__Group__2 ;
    public final void rule__Different__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6933:1: ( rule__Different__Group__1__Impl rule__Different__Group__2 )
            // InternalLegoLang.g:6934:2: rule__Different__Group__1__Impl rule__Different__Group__2
            {
            pushFollow(FOLLOW_42);
            rule__Different__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Different__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Different__Group__1"


    // $ANTLR start "rule__Different__Group__1__Impl"
    // InternalLegoLang.g:6941:1: rule__Different__Group__1__Impl : ( ( rule__Different__LeftAssignment_1 ) ) ;
    public final void rule__Different__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6945:1: ( ( ( rule__Different__LeftAssignment_1 ) ) )
            // InternalLegoLang.g:6946:1: ( ( rule__Different__LeftAssignment_1 ) )
            {
            // InternalLegoLang.g:6946:1: ( ( rule__Different__LeftAssignment_1 ) )
            // InternalLegoLang.g:6947:2: ( rule__Different__LeftAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDifferentAccess().getLeftAssignment_1()); 
            }
            // InternalLegoLang.g:6948:2: ( rule__Different__LeftAssignment_1 )
            // InternalLegoLang.g:6948:3: rule__Different__LeftAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__Different__LeftAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDifferentAccess().getLeftAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Different__Group__1__Impl"


    // $ANTLR start "rule__Different__Group__2"
    // InternalLegoLang.g:6956:1: rule__Different__Group__2 : rule__Different__Group__2__Impl rule__Different__Group__3 ;
    public final void rule__Different__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6960:1: ( rule__Different__Group__2__Impl rule__Different__Group__3 )
            // InternalLegoLang.g:6961:2: rule__Different__Group__2__Impl rule__Different__Group__3
            {
            pushFollow(FOLLOW_16);
            rule__Different__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Different__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Different__Group__2"


    // $ANTLR start "rule__Different__Group__2__Impl"
    // InternalLegoLang.g:6968:1: rule__Different__Group__2__Impl : ( '!=' ) ;
    public final void rule__Different__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6972:1: ( ( '!=' ) )
            // InternalLegoLang.g:6973:1: ( '!=' )
            {
            // InternalLegoLang.g:6973:1: ( '!=' )
            // InternalLegoLang.g:6974:2: '!='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDifferentAccess().getExclamationMarkEqualsSignKeyword_2()); 
            }
            match(input,60,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDifferentAccess().getExclamationMarkEqualsSignKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Different__Group__2__Impl"


    // $ANTLR start "rule__Different__Group__3"
    // InternalLegoLang.g:6983:1: rule__Different__Group__3 : rule__Different__Group__3__Impl rule__Different__Group__4 ;
    public final void rule__Different__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6987:1: ( rule__Different__Group__3__Impl rule__Different__Group__4 )
            // InternalLegoLang.g:6988:2: rule__Different__Group__3__Impl rule__Different__Group__4
            {
            pushFollow(FOLLOW_14);
            rule__Different__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Different__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Different__Group__3"


    // $ANTLR start "rule__Different__Group__3__Impl"
    // InternalLegoLang.g:6995:1: rule__Different__Group__3__Impl : ( ( rule__Different__RightAssignment_3 ) ) ;
    public final void rule__Different__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:6999:1: ( ( ( rule__Different__RightAssignment_3 ) ) )
            // InternalLegoLang.g:7000:1: ( ( rule__Different__RightAssignment_3 ) )
            {
            // InternalLegoLang.g:7000:1: ( ( rule__Different__RightAssignment_3 ) )
            // InternalLegoLang.g:7001:2: ( rule__Different__RightAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDifferentAccess().getRightAssignment_3()); 
            }
            // InternalLegoLang.g:7002:2: ( rule__Different__RightAssignment_3 )
            // InternalLegoLang.g:7002:3: rule__Different__RightAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__Different__RightAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDifferentAccess().getRightAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Different__Group__3__Impl"


    // $ANTLR start "rule__Different__Group__4"
    // InternalLegoLang.g:7010:1: rule__Different__Group__4 : rule__Different__Group__4__Impl ;
    public final void rule__Different__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7014:1: ( rule__Different__Group__4__Impl )
            // InternalLegoLang.g:7015:2: rule__Different__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Different__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Different__Group__4"


    // $ANTLR start "rule__Different__Group__4__Impl"
    // InternalLegoLang.g:7021:1: rule__Different__Group__4__Impl : ( ')' ) ;
    public final void rule__Different__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7025:1: ( ( ')' ) )
            // InternalLegoLang.g:7026:1: ( ')' )
            {
            // InternalLegoLang.g:7026:1: ( ')' )
            // InternalLegoLang.g:7027:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDifferentAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDifferentAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Different__Group__4__Impl"


    // $ANTLR start "rule__LTorEqual__Group__0"
    // InternalLegoLang.g:7037:1: rule__LTorEqual__Group__0 : rule__LTorEqual__Group__0__Impl rule__LTorEqual__Group__1 ;
    public final void rule__LTorEqual__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7041:1: ( rule__LTorEqual__Group__0__Impl rule__LTorEqual__Group__1 )
            // InternalLegoLang.g:7042:2: rule__LTorEqual__Group__0__Impl rule__LTorEqual__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__LTorEqual__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LTorEqual__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTorEqual__Group__0"


    // $ANTLR start "rule__LTorEqual__Group__0__Impl"
    // InternalLegoLang.g:7049:1: rule__LTorEqual__Group__0__Impl : ( '(' ) ;
    public final void rule__LTorEqual__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7053:1: ( ( '(' ) )
            // InternalLegoLang.g:7054:1: ( '(' )
            {
            // InternalLegoLang.g:7054:1: ( '(' )
            // InternalLegoLang.g:7055:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTorEqualAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTorEqualAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTorEqual__Group__0__Impl"


    // $ANTLR start "rule__LTorEqual__Group__1"
    // InternalLegoLang.g:7064:1: rule__LTorEqual__Group__1 : rule__LTorEqual__Group__1__Impl rule__LTorEqual__Group__2 ;
    public final void rule__LTorEqual__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7068:1: ( rule__LTorEqual__Group__1__Impl rule__LTorEqual__Group__2 )
            // InternalLegoLang.g:7069:2: rule__LTorEqual__Group__1__Impl rule__LTorEqual__Group__2
            {
            pushFollow(FOLLOW_43);
            rule__LTorEqual__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LTorEqual__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTorEqual__Group__1"


    // $ANTLR start "rule__LTorEqual__Group__1__Impl"
    // InternalLegoLang.g:7076:1: rule__LTorEqual__Group__1__Impl : ( ( rule__LTorEqual__LeftAssignment_1 ) ) ;
    public final void rule__LTorEqual__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7080:1: ( ( ( rule__LTorEqual__LeftAssignment_1 ) ) )
            // InternalLegoLang.g:7081:1: ( ( rule__LTorEqual__LeftAssignment_1 ) )
            {
            // InternalLegoLang.g:7081:1: ( ( rule__LTorEqual__LeftAssignment_1 ) )
            // InternalLegoLang.g:7082:2: ( rule__LTorEqual__LeftAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTorEqualAccess().getLeftAssignment_1()); 
            }
            // InternalLegoLang.g:7083:2: ( rule__LTorEqual__LeftAssignment_1 )
            // InternalLegoLang.g:7083:3: rule__LTorEqual__LeftAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__LTorEqual__LeftAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTorEqualAccess().getLeftAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTorEqual__Group__1__Impl"


    // $ANTLR start "rule__LTorEqual__Group__2"
    // InternalLegoLang.g:7091:1: rule__LTorEqual__Group__2 : rule__LTorEqual__Group__2__Impl rule__LTorEqual__Group__3 ;
    public final void rule__LTorEqual__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7095:1: ( rule__LTorEqual__Group__2__Impl rule__LTorEqual__Group__3 )
            // InternalLegoLang.g:7096:2: rule__LTorEqual__Group__2__Impl rule__LTorEqual__Group__3
            {
            pushFollow(FOLLOW_16);
            rule__LTorEqual__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LTorEqual__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTorEqual__Group__2"


    // $ANTLR start "rule__LTorEqual__Group__2__Impl"
    // InternalLegoLang.g:7103:1: rule__LTorEqual__Group__2__Impl : ( '<=' ) ;
    public final void rule__LTorEqual__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7107:1: ( ( '<=' ) )
            // InternalLegoLang.g:7108:1: ( '<=' )
            {
            // InternalLegoLang.g:7108:1: ( '<=' )
            // InternalLegoLang.g:7109:2: '<='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTorEqualAccess().getLessThanSignEqualsSignKeyword_2()); 
            }
            match(input,61,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTorEqualAccess().getLessThanSignEqualsSignKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTorEqual__Group__2__Impl"


    // $ANTLR start "rule__LTorEqual__Group__3"
    // InternalLegoLang.g:7118:1: rule__LTorEqual__Group__3 : rule__LTorEqual__Group__3__Impl rule__LTorEqual__Group__4 ;
    public final void rule__LTorEqual__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7122:1: ( rule__LTorEqual__Group__3__Impl rule__LTorEqual__Group__4 )
            // InternalLegoLang.g:7123:2: rule__LTorEqual__Group__3__Impl rule__LTorEqual__Group__4
            {
            pushFollow(FOLLOW_14);
            rule__LTorEqual__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__LTorEqual__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTorEqual__Group__3"


    // $ANTLR start "rule__LTorEqual__Group__3__Impl"
    // InternalLegoLang.g:7130:1: rule__LTorEqual__Group__3__Impl : ( ( rule__LTorEqual__RightAssignment_3 ) ) ;
    public final void rule__LTorEqual__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7134:1: ( ( ( rule__LTorEqual__RightAssignment_3 ) ) )
            // InternalLegoLang.g:7135:1: ( ( rule__LTorEqual__RightAssignment_3 ) )
            {
            // InternalLegoLang.g:7135:1: ( ( rule__LTorEqual__RightAssignment_3 ) )
            // InternalLegoLang.g:7136:2: ( rule__LTorEqual__RightAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTorEqualAccess().getRightAssignment_3()); 
            }
            // InternalLegoLang.g:7137:2: ( rule__LTorEqual__RightAssignment_3 )
            // InternalLegoLang.g:7137:3: rule__LTorEqual__RightAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__LTorEqual__RightAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTorEqualAccess().getRightAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTorEqual__Group__3__Impl"


    // $ANTLR start "rule__LTorEqual__Group__4"
    // InternalLegoLang.g:7145:1: rule__LTorEqual__Group__4 : rule__LTorEqual__Group__4__Impl ;
    public final void rule__LTorEqual__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7149:1: ( rule__LTorEqual__Group__4__Impl )
            // InternalLegoLang.g:7150:2: rule__LTorEqual__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__LTorEqual__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTorEqual__Group__4"


    // $ANTLR start "rule__LTorEqual__Group__4__Impl"
    // InternalLegoLang.g:7156:1: rule__LTorEqual__Group__4__Impl : ( ')' ) ;
    public final void rule__LTorEqual__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7160:1: ( ( ')' ) )
            // InternalLegoLang.g:7161:1: ( ')' )
            {
            // InternalLegoLang.g:7161:1: ( ')' )
            // InternalLegoLang.g:7162:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTorEqualAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTorEqualAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTorEqual__Group__4__Impl"


    // $ANTLR start "rule__GTorEqual__Group__0"
    // InternalLegoLang.g:7172:1: rule__GTorEqual__Group__0 : rule__GTorEqual__Group__0__Impl rule__GTorEqual__Group__1 ;
    public final void rule__GTorEqual__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7176:1: ( rule__GTorEqual__Group__0__Impl rule__GTorEqual__Group__1 )
            // InternalLegoLang.g:7177:2: rule__GTorEqual__Group__0__Impl rule__GTorEqual__Group__1
            {
            pushFollow(FOLLOW_16);
            rule__GTorEqual__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GTorEqual__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GTorEqual__Group__0"


    // $ANTLR start "rule__GTorEqual__Group__0__Impl"
    // InternalLegoLang.g:7184:1: rule__GTorEqual__Group__0__Impl : ( '(' ) ;
    public final void rule__GTorEqual__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7188:1: ( ( '(' ) )
            // InternalLegoLang.g:7189:1: ( '(' )
            {
            // InternalLegoLang.g:7189:1: ( '(' )
            // InternalLegoLang.g:7190:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTorEqualAccess().getLeftParenthesisKeyword_0()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTorEqualAccess().getLeftParenthesisKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GTorEqual__Group__0__Impl"


    // $ANTLR start "rule__GTorEqual__Group__1"
    // InternalLegoLang.g:7199:1: rule__GTorEqual__Group__1 : rule__GTorEqual__Group__1__Impl rule__GTorEqual__Group__2 ;
    public final void rule__GTorEqual__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7203:1: ( rule__GTorEqual__Group__1__Impl rule__GTorEqual__Group__2 )
            // InternalLegoLang.g:7204:2: rule__GTorEqual__Group__1__Impl rule__GTorEqual__Group__2
            {
            pushFollow(FOLLOW_44);
            rule__GTorEqual__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GTorEqual__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GTorEqual__Group__1"


    // $ANTLR start "rule__GTorEqual__Group__1__Impl"
    // InternalLegoLang.g:7211:1: rule__GTorEqual__Group__1__Impl : ( ( rule__GTorEqual__LeftAssignment_1 ) ) ;
    public final void rule__GTorEqual__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7215:1: ( ( ( rule__GTorEqual__LeftAssignment_1 ) ) )
            // InternalLegoLang.g:7216:1: ( ( rule__GTorEqual__LeftAssignment_1 ) )
            {
            // InternalLegoLang.g:7216:1: ( ( rule__GTorEqual__LeftAssignment_1 ) )
            // InternalLegoLang.g:7217:2: ( rule__GTorEqual__LeftAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTorEqualAccess().getLeftAssignment_1()); 
            }
            // InternalLegoLang.g:7218:2: ( rule__GTorEqual__LeftAssignment_1 )
            // InternalLegoLang.g:7218:3: rule__GTorEqual__LeftAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__GTorEqual__LeftAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTorEqualAccess().getLeftAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GTorEqual__Group__1__Impl"


    // $ANTLR start "rule__GTorEqual__Group__2"
    // InternalLegoLang.g:7226:1: rule__GTorEqual__Group__2 : rule__GTorEqual__Group__2__Impl rule__GTorEqual__Group__3 ;
    public final void rule__GTorEqual__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7230:1: ( rule__GTorEqual__Group__2__Impl rule__GTorEqual__Group__3 )
            // InternalLegoLang.g:7231:2: rule__GTorEqual__Group__2__Impl rule__GTorEqual__Group__3
            {
            pushFollow(FOLLOW_16);
            rule__GTorEqual__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GTorEqual__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GTorEqual__Group__2"


    // $ANTLR start "rule__GTorEqual__Group__2__Impl"
    // InternalLegoLang.g:7238:1: rule__GTorEqual__Group__2__Impl : ( '>=' ) ;
    public final void rule__GTorEqual__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7242:1: ( ( '>=' ) )
            // InternalLegoLang.g:7243:1: ( '>=' )
            {
            // InternalLegoLang.g:7243:1: ( '>=' )
            // InternalLegoLang.g:7244:2: '>='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTorEqualAccess().getGreaterThanSignEqualsSignKeyword_2()); 
            }
            match(input,62,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTorEqualAccess().getGreaterThanSignEqualsSignKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GTorEqual__Group__2__Impl"


    // $ANTLR start "rule__GTorEqual__Group__3"
    // InternalLegoLang.g:7253:1: rule__GTorEqual__Group__3 : rule__GTorEqual__Group__3__Impl rule__GTorEqual__Group__4 ;
    public final void rule__GTorEqual__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7257:1: ( rule__GTorEqual__Group__3__Impl rule__GTorEqual__Group__4 )
            // InternalLegoLang.g:7258:2: rule__GTorEqual__Group__3__Impl rule__GTorEqual__Group__4
            {
            pushFollow(FOLLOW_14);
            rule__GTorEqual__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__GTorEqual__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GTorEqual__Group__3"


    // $ANTLR start "rule__GTorEqual__Group__3__Impl"
    // InternalLegoLang.g:7265:1: rule__GTorEqual__Group__3__Impl : ( ( rule__GTorEqual__RightAssignment_3 ) ) ;
    public final void rule__GTorEqual__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7269:1: ( ( ( rule__GTorEqual__RightAssignment_3 ) ) )
            // InternalLegoLang.g:7270:1: ( ( rule__GTorEqual__RightAssignment_3 ) )
            {
            // InternalLegoLang.g:7270:1: ( ( rule__GTorEqual__RightAssignment_3 ) )
            // InternalLegoLang.g:7271:2: ( rule__GTorEqual__RightAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTorEqualAccess().getRightAssignment_3()); 
            }
            // InternalLegoLang.g:7272:2: ( rule__GTorEqual__RightAssignment_3 )
            // InternalLegoLang.g:7272:3: rule__GTorEqual__RightAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__GTorEqual__RightAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTorEqualAccess().getRightAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GTorEqual__Group__3__Impl"


    // $ANTLR start "rule__GTorEqual__Group__4"
    // InternalLegoLang.g:7280:1: rule__GTorEqual__Group__4 : rule__GTorEqual__Group__4__Impl ;
    public final void rule__GTorEqual__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7284:1: ( rule__GTorEqual__Group__4__Impl )
            // InternalLegoLang.g:7285:2: rule__GTorEqual__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__GTorEqual__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GTorEqual__Group__4"


    // $ANTLR start "rule__GTorEqual__Group__4__Impl"
    // InternalLegoLang.g:7291:1: rule__GTorEqual__Group__4__Impl : ( ')' ) ;
    public final void rule__GTorEqual__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7295:1: ( ( ')' ) )
            // InternalLegoLang.g:7296:1: ( ')' )
            {
            // InternalLegoLang.g:7296:1: ( ')' )
            // InternalLegoLang.g:7297:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTorEqualAccess().getRightParenthesisKeyword_4()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTorEqualAccess().getRightParenthesisKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GTorEqual__Group__4__Impl"


    // $ANTLR start "rule__Assignement__Group__0"
    // InternalLegoLang.g:7307:1: rule__Assignement__Group__0 : rule__Assignement__Group__0__Impl rule__Assignement__Group__1 ;
    public final void rule__Assignement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7311:1: ( rule__Assignement__Group__0__Impl rule__Assignement__Group__1 )
            // InternalLegoLang.g:7312:2: rule__Assignement__Group__0__Impl rule__Assignement__Group__1
            {
            pushFollow(FOLLOW_45);
            rule__Assignement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Assignement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignement__Group__0"


    // $ANTLR start "rule__Assignement__Group__0__Impl"
    // InternalLegoLang.g:7319:1: rule__Assignement__Group__0__Impl : ( () ) ;
    public final void rule__Assignement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7323:1: ( ( () ) )
            // InternalLegoLang.g:7324:1: ( () )
            {
            // InternalLegoLang.g:7324:1: ( () )
            // InternalLegoLang.g:7325:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignementAccess().getAssignementAction_0()); 
            }
            // InternalLegoLang.g:7326:2: ()
            // InternalLegoLang.g:7326:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignementAccess().getAssignementAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignement__Group__0__Impl"


    // $ANTLR start "rule__Assignement__Group__1"
    // InternalLegoLang.g:7334:1: rule__Assignement__Group__1 : rule__Assignement__Group__1__Impl rule__Assignement__Group__2 ;
    public final void rule__Assignement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7338:1: ( rule__Assignement__Group__1__Impl rule__Assignement__Group__2 )
            // InternalLegoLang.g:7339:2: rule__Assignement__Group__1__Impl rule__Assignement__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__Assignement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Assignement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignement__Group__1"


    // $ANTLR start "rule__Assignement__Group__1__Impl"
    // InternalLegoLang.g:7346:1: rule__Assignement__Group__1__Impl : ( 'set' ) ;
    public final void rule__Assignement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7350:1: ( ( 'set' ) )
            // InternalLegoLang.g:7351:1: ( 'set' )
            {
            // InternalLegoLang.g:7351:1: ( 'set' )
            // InternalLegoLang.g:7352:2: 'set'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignementAccess().getSetKeyword_1()); 
            }
            match(input,29,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignementAccess().getSetKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignement__Group__1__Impl"


    // $ANTLR start "rule__Assignement__Group__2"
    // InternalLegoLang.g:7361:1: rule__Assignement__Group__2 : rule__Assignement__Group__2__Impl rule__Assignement__Group__3 ;
    public final void rule__Assignement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7365:1: ( rule__Assignement__Group__2__Impl rule__Assignement__Group__3 )
            // InternalLegoLang.g:7366:2: rule__Assignement__Group__2__Impl rule__Assignement__Group__3
            {
            pushFollow(FOLLOW_15);
            rule__Assignement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Assignement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignement__Group__2"


    // $ANTLR start "rule__Assignement__Group__2__Impl"
    // InternalLegoLang.g:7373:1: rule__Assignement__Group__2__Impl : ( ( rule__Assignement__LeftAssignment_2 ) ) ;
    public final void rule__Assignement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7377:1: ( ( ( rule__Assignement__LeftAssignment_2 ) ) )
            // InternalLegoLang.g:7378:1: ( ( rule__Assignement__LeftAssignment_2 ) )
            {
            // InternalLegoLang.g:7378:1: ( ( rule__Assignement__LeftAssignment_2 ) )
            // InternalLegoLang.g:7379:2: ( rule__Assignement__LeftAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignementAccess().getLeftAssignment_2()); 
            }
            // InternalLegoLang.g:7380:2: ( rule__Assignement__LeftAssignment_2 )
            // InternalLegoLang.g:7380:3: rule__Assignement__LeftAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__Assignement__LeftAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignementAccess().getLeftAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignement__Group__2__Impl"


    // $ANTLR start "rule__Assignement__Group__3"
    // InternalLegoLang.g:7388:1: rule__Assignement__Group__3 : rule__Assignement__Group__3__Impl rule__Assignement__Group__4 ;
    public final void rule__Assignement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7392:1: ( rule__Assignement__Group__3__Impl rule__Assignement__Group__4 )
            // InternalLegoLang.g:7393:2: rule__Assignement__Group__3__Impl rule__Assignement__Group__4
            {
            pushFollow(FOLLOW_16);
            rule__Assignement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Assignement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignement__Group__3"


    // $ANTLR start "rule__Assignement__Group__3__Impl"
    // InternalLegoLang.g:7400:1: rule__Assignement__Group__3__Impl : ( '=' ) ;
    public final void rule__Assignement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7404:1: ( ( '=' ) )
            // InternalLegoLang.g:7405:1: ( '=' )
            {
            // InternalLegoLang.g:7405:1: ( '=' )
            // InternalLegoLang.g:7406:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignementAccess().getEqualsSignKeyword_3()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignementAccess().getEqualsSignKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignement__Group__3__Impl"


    // $ANTLR start "rule__Assignement__Group__4"
    // InternalLegoLang.g:7415:1: rule__Assignement__Group__4 : rule__Assignement__Group__4__Impl ;
    public final void rule__Assignement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7419:1: ( rule__Assignement__Group__4__Impl )
            // InternalLegoLang.g:7420:2: rule__Assignement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Assignement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignement__Group__4"


    // $ANTLR start "rule__Assignement__Group__4__Impl"
    // InternalLegoLang.g:7426:1: rule__Assignement__Group__4__Impl : ( ( rule__Assignement__RightAssignment_4 ) ) ;
    public final void rule__Assignement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7430:1: ( ( ( rule__Assignement__RightAssignment_4 ) ) )
            // InternalLegoLang.g:7431:1: ( ( rule__Assignement__RightAssignment_4 ) )
            {
            // InternalLegoLang.g:7431:1: ( ( rule__Assignement__RightAssignment_4 ) )
            // InternalLegoLang.g:7432:2: ( rule__Assignement__RightAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignementAccess().getRightAssignment_4()); 
            }
            // InternalLegoLang.g:7433:2: ( rule__Assignement__RightAssignment_4 )
            // InternalLegoLang.g:7433:3: rule__Assignement__RightAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__Assignement__RightAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignementAccess().getRightAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignement__Group__4__Impl"


    // $ANTLR start "rule__PlusEqual__Group__0"
    // InternalLegoLang.g:7442:1: rule__PlusEqual__Group__0 : rule__PlusEqual__Group__0__Impl rule__PlusEqual__Group__1 ;
    public final void rule__PlusEqual__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7446:1: ( rule__PlusEqual__Group__0__Impl rule__PlusEqual__Group__1 )
            // InternalLegoLang.g:7447:2: rule__PlusEqual__Group__0__Impl rule__PlusEqual__Group__1
            {
            pushFollow(FOLLOW_46);
            rule__PlusEqual__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PlusEqual__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusEqual__Group__0"


    // $ANTLR start "rule__PlusEqual__Group__0__Impl"
    // InternalLegoLang.g:7454:1: rule__PlusEqual__Group__0__Impl : ( () ) ;
    public final void rule__PlusEqual__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7458:1: ( ( () ) )
            // InternalLegoLang.g:7459:1: ( () )
            {
            // InternalLegoLang.g:7459:1: ( () )
            // InternalLegoLang.g:7460:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusEqualAccess().getPlusEqualAction_0()); 
            }
            // InternalLegoLang.g:7461:2: ()
            // InternalLegoLang.g:7461:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusEqualAccess().getPlusEqualAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusEqual__Group__0__Impl"


    // $ANTLR start "rule__PlusEqual__Group__1"
    // InternalLegoLang.g:7469:1: rule__PlusEqual__Group__1 : rule__PlusEqual__Group__1__Impl rule__PlusEqual__Group__2 ;
    public final void rule__PlusEqual__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7473:1: ( rule__PlusEqual__Group__1__Impl rule__PlusEqual__Group__2 )
            // InternalLegoLang.g:7474:2: rule__PlusEqual__Group__1__Impl rule__PlusEqual__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__PlusEqual__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PlusEqual__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusEqual__Group__1"


    // $ANTLR start "rule__PlusEqual__Group__1__Impl"
    // InternalLegoLang.g:7481:1: rule__PlusEqual__Group__1__Impl : ( '(' ) ;
    public final void rule__PlusEqual__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7485:1: ( ( '(' ) )
            // InternalLegoLang.g:7486:1: ( '(' )
            {
            // InternalLegoLang.g:7486:1: ( '(' )
            // InternalLegoLang.g:7487:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusEqualAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusEqualAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusEqual__Group__1__Impl"


    // $ANTLR start "rule__PlusEqual__Group__2"
    // InternalLegoLang.g:7496:1: rule__PlusEqual__Group__2 : rule__PlusEqual__Group__2__Impl rule__PlusEqual__Group__3 ;
    public final void rule__PlusEqual__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7500:1: ( rule__PlusEqual__Group__2__Impl rule__PlusEqual__Group__3 )
            // InternalLegoLang.g:7501:2: rule__PlusEqual__Group__2__Impl rule__PlusEqual__Group__3
            {
            pushFollow(FOLLOW_47);
            rule__PlusEqual__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PlusEqual__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusEqual__Group__2"


    // $ANTLR start "rule__PlusEqual__Group__2__Impl"
    // InternalLegoLang.g:7508:1: rule__PlusEqual__Group__2__Impl : ( ( rule__PlusEqual__LeftAssignment_2 ) ) ;
    public final void rule__PlusEqual__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7512:1: ( ( ( rule__PlusEqual__LeftAssignment_2 ) ) )
            // InternalLegoLang.g:7513:1: ( ( rule__PlusEqual__LeftAssignment_2 ) )
            {
            // InternalLegoLang.g:7513:1: ( ( rule__PlusEqual__LeftAssignment_2 ) )
            // InternalLegoLang.g:7514:2: ( rule__PlusEqual__LeftAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusEqualAccess().getLeftAssignment_2()); 
            }
            // InternalLegoLang.g:7515:2: ( rule__PlusEqual__LeftAssignment_2 )
            // InternalLegoLang.g:7515:3: rule__PlusEqual__LeftAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__PlusEqual__LeftAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusEqualAccess().getLeftAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusEqual__Group__2__Impl"


    // $ANTLR start "rule__PlusEqual__Group__3"
    // InternalLegoLang.g:7523:1: rule__PlusEqual__Group__3 : rule__PlusEqual__Group__3__Impl rule__PlusEqual__Group__4 ;
    public final void rule__PlusEqual__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7527:1: ( rule__PlusEqual__Group__3__Impl rule__PlusEqual__Group__4 )
            // InternalLegoLang.g:7528:2: rule__PlusEqual__Group__3__Impl rule__PlusEqual__Group__4
            {
            pushFollow(FOLLOW_16);
            rule__PlusEqual__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PlusEqual__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusEqual__Group__3"


    // $ANTLR start "rule__PlusEqual__Group__3__Impl"
    // InternalLegoLang.g:7535:1: rule__PlusEqual__Group__3__Impl : ( '+=' ) ;
    public final void rule__PlusEqual__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7539:1: ( ( '+=' ) )
            // InternalLegoLang.g:7540:1: ( '+=' )
            {
            // InternalLegoLang.g:7540:1: ( '+=' )
            // InternalLegoLang.g:7541:2: '+='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusEqualAccess().getPlusSignEqualsSignKeyword_3()); 
            }
            match(input,63,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusEqualAccess().getPlusSignEqualsSignKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusEqual__Group__3__Impl"


    // $ANTLR start "rule__PlusEqual__Group__4"
    // InternalLegoLang.g:7550:1: rule__PlusEqual__Group__4 : rule__PlusEqual__Group__4__Impl rule__PlusEqual__Group__5 ;
    public final void rule__PlusEqual__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7554:1: ( rule__PlusEqual__Group__4__Impl rule__PlusEqual__Group__5 )
            // InternalLegoLang.g:7555:2: rule__PlusEqual__Group__4__Impl rule__PlusEqual__Group__5
            {
            pushFollow(FOLLOW_14);
            rule__PlusEqual__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__PlusEqual__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusEqual__Group__4"


    // $ANTLR start "rule__PlusEqual__Group__4__Impl"
    // InternalLegoLang.g:7562:1: rule__PlusEqual__Group__4__Impl : ( ( rule__PlusEqual__RightAssignment_4 ) ) ;
    public final void rule__PlusEqual__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7566:1: ( ( ( rule__PlusEqual__RightAssignment_4 ) ) )
            // InternalLegoLang.g:7567:1: ( ( rule__PlusEqual__RightAssignment_4 ) )
            {
            // InternalLegoLang.g:7567:1: ( ( rule__PlusEqual__RightAssignment_4 ) )
            // InternalLegoLang.g:7568:2: ( rule__PlusEqual__RightAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusEqualAccess().getRightAssignment_4()); 
            }
            // InternalLegoLang.g:7569:2: ( rule__PlusEqual__RightAssignment_4 )
            // InternalLegoLang.g:7569:3: rule__PlusEqual__RightAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__PlusEqual__RightAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusEqualAccess().getRightAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusEqual__Group__4__Impl"


    // $ANTLR start "rule__PlusEqual__Group__5"
    // InternalLegoLang.g:7577:1: rule__PlusEqual__Group__5 : rule__PlusEqual__Group__5__Impl ;
    public final void rule__PlusEqual__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7581:1: ( rule__PlusEqual__Group__5__Impl )
            // InternalLegoLang.g:7582:2: rule__PlusEqual__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__PlusEqual__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusEqual__Group__5"


    // $ANTLR start "rule__PlusEqual__Group__5__Impl"
    // InternalLegoLang.g:7588:1: rule__PlusEqual__Group__5__Impl : ( ')' ) ;
    public final void rule__PlusEqual__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7592:1: ( ( ')' ) )
            // InternalLegoLang.g:7593:1: ( ')' )
            {
            // InternalLegoLang.g:7593:1: ( ')' )
            // InternalLegoLang.g:7594:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusEqualAccess().getRightParenthesisKeyword_5()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusEqualAccess().getRightParenthesisKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusEqual__Group__5__Impl"


    // $ANTLR start "rule__MinusEqual__Group__0"
    // InternalLegoLang.g:7604:1: rule__MinusEqual__Group__0 : rule__MinusEqual__Group__0__Impl rule__MinusEqual__Group__1 ;
    public final void rule__MinusEqual__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7608:1: ( rule__MinusEqual__Group__0__Impl rule__MinusEqual__Group__1 )
            // InternalLegoLang.g:7609:2: rule__MinusEqual__Group__0__Impl rule__MinusEqual__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__MinusEqual__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MinusEqual__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MinusEqual__Group__0"


    // $ANTLR start "rule__MinusEqual__Group__0__Impl"
    // InternalLegoLang.g:7616:1: rule__MinusEqual__Group__0__Impl : ( () ) ;
    public final void rule__MinusEqual__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7620:1: ( ( () ) )
            // InternalLegoLang.g:7621:1: ( () )
            {
            // InternalLegoLang.g:7621:1: ( () )
            // InternalLegoLang.g:7622:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMinusEqualAccess().getMinusEqualAction_0()); 
            }
            // InternalLegoLang.g:7623:2: ()
            // InternalLegoLang.g:7623:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMinusEqualAccess().getMinusEqualAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MinusEqual__Group__0__Impl"


    // $ANTLR start "rule__MinusEqual__Group__1"
    // InternalLegoLang.g:7631:1: rule__MinusEqual__Group__1 : rule__MinusEqual__Group__1__Impl rule__MinusEqual__Group__2 ;
    public final void rule__MinusEqual__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7635:1: ( rule__MinusEqual__Group__1__Impl rule__MinusEqual__Group__2 )
            // InternalLegoLang.g:7636:2: rule__MinusEqual__Group__1__Impl rule__MinusEqual__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__MinusEqual__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MinusEqual__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MinusEqual__Group__1"


    // $ANTLR start "rule__MinusEqual__Group__1__Impl"
    // InternalLegoLang.g:7643:1: rule__MinusEqual__Group__1__Impl : ( '(' ) ;
    public final void rule__MinusEqual__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7647:1: ( ( '(' ) )
            // InternalLegoLang.g:7648:1: ( '(' )
            {
            // InternalLegoLang.g:7648:1: ( '(' )
            // InternalLegoLang.g:7649:2: '('
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMinusEqualAccess().getLeftParenthesisKeyword_1()); 
            }
            match(input,31,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMinusEqualAccess().getLeftParenthesisKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MinusEqual__Group__1__Impl"


    // $ANTLR start "rule__MinusEqual__Group__2"
    // InternalLegoLang.g:7658:1: rule__MinusEqual__Group__2 : rule__MinusEqual__Group__2__Impl rule__MinusEqual__Group__3 ;
    public final void rule__MinusEqual__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7662:1: ( rule__MinusEqual__Group__2__Impl rule__MinusEqual__Group__3 )
            // InternalLegoLang.g:7663:2: rule__MinusEqual__Group__2__Impl rule__MinusEqual__Group__3
            {
            pushFollow(FOLLOW_48);
            rule__MinusEqual__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MinusEqual__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MinusEqual__Group__2"


    // $ANTLR start "rule__MinusEqual__Group__2__Impl"
    // InternalLegoLang.g:7670:1: rule__MinusEqual__Group__2__Impl : ( ( rule__MinusEqual__LeftAssignment_2 ) ) ;
    public final void rule__MinusEqual__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7674:1: ( ( ( rule__MinusEqual__LeftAssignment_2 ) ) )
            // InternalLegoLang.g:7675:1: ( ( rule__MinusEqual__LeftAssignment_2 ) )
            {
            // InternalLegoLang.g:7675:1: ( ( rule__MinusEqual__LeftAssignment_2 ) )
            // InternalLegoLang.g:7676:2: ( rule__MinusEqual__LeftAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMinusEqualAccess().getLeftAssignment_2()); 
            }
            // InternalLegoLang.g:7677:2: ( rule__MinusEqual__LeftAssignment_2 )
            // InternalLegoLang.g:7677:3: rule__MinusEqual__LeftAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__MinusEqual__LeftAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMinusEqualAccess().getLeftAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MinusEqual__Group__2__Impl"


    // $ANTLR start "rule__MinusEqual__Group__3"
    // InternalLegoLang.g:7685:1: rule__MinusEqual__Group__3 : rule__MinusEqual__Group__3__Impl rule__MinusEqual__Group__4 ;
    public final void rule__MinusEqual__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7689:1: ( rule__MinusEqual__Group__3__Impl rule__MinusEqual__Group__4 )
            // InternalLegoLang.g:7690:2: rule__MinusEqual__Group__3__Impl rule__MinusEqual__Group__4
            {
            pushFollow(FOLLOW_16);
            rule__MinusEqual__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MinusEqual__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MinusEqual__Group__3"


    // $ANTLR start "rule__MinusEqual__Group__3__Impl"
    // InternalLegoLang.g:7697:1: rule__MinusEqual__Group__3__Impl : ( '-=' ) ;
    public final void rule__MinusEqual__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7701:1: ( ( '-=' ) )
            // InternalLegoLang.g:7702:1: ( '-=' )
            {
            // InternalLegoLang.g:7702:1: ( '-=' )
            // InternalLegoLang.g:7703:2: '-='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMinusEqualAccess().getHyphenMinusEqualsSignKeyword_3()); 
            }
            match(input,64,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMinusEqualAccess().getHyphenMinusEqualsSignKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MinusEqual__Group__3__Impl"


    // $ANTLR start "rule__MinusEqual__Group__4"
    // InternalLegoLang.g:7712:1: rule__MinusEqual__Group__4 : rule__MinusEqual__Group__4__Impl rule__MinusEqual__Group__5 ;
    public final void rule__MinusEqual__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7716:1: ( rule__MinusEqual__Group__4__Impl rule__MinusEqual__Group__5 )
            // InternalLegoLang.g:7717:2: rule__MinusEqual__Group__4__Impl rule__MinusEqual__Group__5
            {
            pushFollow(FOLLOW_14);
            rule__MinusEqual__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MinusEqual__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MinusEqual__Group__4"


    // $ANTLR start "rule__MinusEqual__Group__4__Impl"
    // InternalLegoLang.g:7724:1: rule__MinusEqual__Group__4__Impl : ( ( rule__MinusEqual__RightAssignment_4 ) ) ;
    public final void rule__MinusEqual__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7728:1: ( ( ( rule__MinusEqual__RightAssignment_4 ) ) )
            // InternalLegoLang.g:7729:1: ( ( rule__MinusEqual__RightAssignment_4 ) )
            {
            // InternalLegoLang.g:7729:1: ( ( rule__MinusEqual__RightAssignment_4 ) )
            // InternalLegoLang.g:7730:2: ( rule__MinusEqual__RightAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMinusEqualAccess().getRightAssignment_4()); 
            }
            // InternalLegoLang.g:7731:2: ( rule__MinusEqual__RightAssignment_4 )
            // InternalLegoLang.g:7731:3: rule__MinusEqual__RightAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__MinusEqual__RightAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMinusEqualAccess().getRightAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MinusEqual__Group__4__Impl"


    // $ANTLR start "rule__MinusEqual__Group__5"
    // InternalLegoLang.g:7739:1: rule__MinusEqual__Group__5 : rule__MinusEqual__Group__5__Impl ;
    public final void rule__MinusEqual__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7743:1: ( rule__MinusEqual__Group__5__Impl )
            // InternalLegoLang.g:7744:2: rule__MinusEqual__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MinusEqual__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MinusEqual__Group__5"


    // $ANTLR start "rule__MinusEqual__Group__5__Impl"
    // InternalLegoLang.g:7750:1: rule__MinusEqual__Group__5__Impl : ( ')' ) ;
    public final void rule__MinusEqual__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7754:1: ( ( ')' ) )
            // InternalLegoLang.g:7755:1: ( ')' )
            {
            // InternalLegoLang.g:7755:1: ( ')' )
            // InternalLegoLang.g:7756:2: ')'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMinusEqualAccess().getRightParenthesisKeyword_5()); 
            }
            match(input,32,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMinusEqualAccess().getRightParenthesisKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MinusEqual__Group__5__Impl"


    // $ANTLR start "rule__UnInteger__Group__0"
    // InternalLegoLang.g:7766:1: rule__UnInteger__Group__0 : rule__UnInteger__Group__0__Impl rule__UnInteger__Group__1 ;
    public final void rule__UnInteger__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7770:1: ( rule__UnInteger__Group__0__Impl rule__UnInteger__Group__1 )
            // InternalLegoLang.g:7771:2: rule__UnInteger__Group__0__Impl rule__UnInteger__Group__1
            {
            pushFollow(FOLLOW_49);
            rule__UnInteger__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnInteger__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__Group__0"


    // $ANTLR start "rule__UnInteger__Group__0__Impl"
    // InternalLegoLang.g:7778:1: rule__UnInteger__Group__0__Impl : ( () ) ;
    public final void rule__UnInteger__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7782:1: ( ( () ) )
            // InternalLegoLang.g:7783:1: ( () )
            {
            // InternalLegoLang.g:7783:1: ( () )
            // InternalLegoLang.g:7784:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnIntegerAccess().getUnIntegerAction_0()); 
            }
            // InternalLegoLang.g:7785:2: ()
            // InternalLegoLang.g:7785:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnIntegerAccess().getUnIntegerAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__Group__0__Impl"


    // $ANTLR start "rule__UnInteger__Group__1"
    // InternalLegoLang.g:7793:1: rule__UnInteger__Group__1 : rule__UnInteger__Group__1__Impl rule__UnInteger__Group__2 ;
    public final void rule__UnInteger__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7797:1: ( rule__UnInteger__Group__1__Impl rule__UnInteger__Group__2 )
            // InternalLegoLang.g:7798:2: rule__UnInteger__Group__1__Impl rule__UnInteger__Group__2
            {
            pushFollow(FOLLOW_49);
            rule__UnInteger__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnInteger__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__Group__1"


    // $ANTLR start "rule__UnInteger__Group__1__Impl"
    // InternalLegoLang.g:7805:1: rule__UnInteger__Group__1__Impl : ( ( rule__UnInteger__IsConstAssignment_1 )? ) ;
    public final void rule__UnInteger__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7809:1: ( ( ( rule__UnInteger__IsConstAssignment_1 )? ) )
            // InternalLegoLang.g:7810:1: ( ( rule__UnInteger__IsConstAssignment_1 )? )
            {
            // InternalLegoLang.g:7810:1: ( ( rule__UnInteger__IsConstAssignment_1 )? )
            // InternalLegoLang.g:7811:2: ( rule__UnInteger__IsConstAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnIntegerAccess().getIsConstAssignment_1()); 
            }
            // InternalLegoLang.g:7812:2: ( rule__UnInteger__IsConstAssignment_1 )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==70) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // InternalLegoLang.g:7812:3: rule__UnInteger__IsConstAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnInteger__IsConstAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnIntegerAccess().getIsConstAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__Group__1__Impl"


    // $ANTLR start "rule__UnInteger__Group__2"
    // InternalLegoLang.g:7820:1: rule__UnInteger__Group__2 : rule__UnInteger__Group__2__Impl rule__UnInteger__Group__3 ;
    public final void rule__UnInteger__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7824:1: ( rule__UnInteger__Group__2__Impl rule__UnInteger__Group__3 )
            // InternalLegoLang.g:7825:2: rule__UnInteger__Group__2__Impl rule__UnInteger__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__UnInteger__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnInteger__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__Group__2"


    // $ANTLR start "rule__UnInteger__Group__2__Impl"
    // InternalLegoLang.g:7832:1: rule__UnInteger__Group__2__Impl : ( 'int' ) ;
    public final void rule__UnInteger__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7836:1: ( ( 'int' ) )
            // InternalLegoLang.g:7837:1: ( 'int' )
            {
            // InternalLegoLang.g:7837:1: ( 'int' )
            // InternalLegoLang.g:7838:2: 'int'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnIntegerAccess().getIntKeyword_2()); 
            }
            match(input,65,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnIntegerAccess().getIntKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__Group__2__Impl"


    // $ANTLR start "rule__UnInteger__Group__3"
    // InternalLegoLang.g:7847:1: rule__UnInteger__Group__3 : rule__UnInteger__Group__3__Impl rule__UnInteger__Group__4 ;
    public final void rule__UnInteger__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7851:1: ( rule__UnInteger__Group__3__Impl rule__UnInteger__Group__4 )
            // InternalLegoLang.g:7852:2: rule__UnInteger__Group__3__Impl rule__UnInteger__Group__4
            {
            pushFollow(FOLLOW_15);
            rule__UnInteger__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnInteger__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__Group__3"


    // $ANTLR start "rule__UnInteger__Group__3__Impl"
    // InternalLegoLang.g:7859:1: rule__UnInteger__Group__3__Impl : ( ( rule__UnInteger__NameAssignment_3 ) ) ;
    public final void rule__UnInteger__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7863:1: ( ( ( rule__UnInteger__NameAssignment_3 ) ) )
            // InternalLegoLang.g:7864:1: ( ( rule__UnInteger__NameAssignment_3 ) )
            {
            // InternalLegoLang.g:7864:1: ( ( rule__UnInteger__NameAssignment_3 ) )
            // InternalLegoLang.g:7865:2: ( rule__UnInteger__NameAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnIntegerAccess().getNameAssignment_3()); 
            }
            // InternalLegoLang.g:7866:2: ( rule__UnInteger__NameAssignment_3 )
            // InternalLegoLang.g:7866:3: rule__UnInteger__NameAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__UnInteger__NameAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnIntegerAccess().getNameAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__Group__3__Impl"


    // $ANTLR start "rule__UnInteger__Group__4"
    // InternalLegoLang.g:7874:1: rule__UnInteger__Group__4 : rule__UnInteger__Group__4__Impl ;
    public final void rule__UnInteger__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7878:1: ( rule__UnInteger__Group__4__Impl )
            // InternalLegoLang.g:7879:2: rule__UnInteger__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnInteger__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__Group__4"


    // $ANTLR start "rule__UnInteger__Group__4__Impl"
    // InternalLegoLang.g:7885:1: rule__UnInteger__Group__4__Impl : ( ( rule__UnInteger__Group_4__0 )? ) ;
    public final void rule__UnInteger__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7889:1: ( ( ( rule__UnInteger__Group_4__0 )? ) )
            // InternalLegoLang.g:7890:1: ( ( rule__UnInteger__Group_4__0 )? )
            {
            // InternalLegoLang.g:7890:1: ( ( rule__UnInteger__Group_4__0 )? )
            // InternalLegoLang.g:7891:2: ( rule__UnInteger__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnIntegerAccess().getGroup_4()); 
            }
            // InternalLegoLang.g:7892:2: ( rule__UnInteger__Group_4__0 )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==33) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // InternalLegoLang.g:7892:3: rule__UnInteger__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnInteger__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnIntegerAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__Group__4__Impl"


    // $ANTLR start "rule__UnInteger__Group_4__0"
    // InternalLegoLang.g:7901:1: rule__UnInteger__Group_4__0 : rule__UnInteger__Group_4__0__Impl rule__UnInteger__Group_4__1 ;
    public final void rule__UnInteger__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7905:1: ( rule__UnInteger__Group_4__0__Impl rule__UnInteger__Group_4__1 )
            // InternalLegoLang.g:7906:2: rule__UnInteger__Group_4__0__Impl rule__UnInteger__Group_4__1
            {
            pushFollow(FOLLOW_9);
            rule__UnInteger__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnInteger__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__Group_4__0"


    // $ANTLR start "rule__UnInteger__Group_4__0__Impl"
    // InternalLegoLang.g:7913:1: rule__UnInteger__Group_4__0__Impl : ( '=' ) ;
    public final void rule__UnInteger__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7917:1: ( ( '=' ) )
            // InternalLegoLang.g:7918:1: ( '=' )
            {
            // InternalLegoLang.g:7918:1: ( '=' )
            // InternalLegoLang.g:7919:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnIntegerAccess().getEqualsSignKeyword_4_0()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnIntegerAccess().getEqualsSignKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__Group_4__0__Impl"


    // $ANTLR start "rule__UnInteger__Group_4__1"
    // InternalLegoLang.g:7928:1: rule__UnInteger__Group_4__1 : rule__UnInteger__Group_4__1__Impl ;
    public final void rule__UnInteger__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7932:1: ( rule__UnInteger__Group_4__1__Impl )
            // InternalLegoLang.g:7933:2: rule__UnInteger__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnInteger__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__Group_4__1"


    // $ANTLR start "rule__UnInteger__Group_4__1__Impl"
    // InternalLegoLang.g:7939:1: rule__UnInteger__Group_4__1__Impl : ( ( rule__UnInteger__InitialeValueAssignment_4_1 ) ) ;
    public final void rule__UnInteger__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7943:1: ( ( ( rule__UnInteger__InitialeValueAssignment_4_1 ) ) )
            // InternalLegoLang.g:7944:1: ( ( rule__UnInteger__InitialeValueAssignment_4_1 ) )
            {
            // InternalLegoLang.g:7944:1: ( ( rule__UnInteger__InitialeValueAssignment_4_1 ) )
            // InternalLegoLang.g:7945:2: ( rule__UnInteger__InitialeValueAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnIntegerAccess().getInitialeValueAssignment_4_1()); 
            }
            // InternalLegoLang.g:7946:2: ( rule__UnInteger__InitialeValueAssignment_4_1 )
            // InternalLegoLang.g:7946:3: rule__UnInteger__InitialeValueAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__UnInteger__InitialeValueAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnIntegerAccess().getInitialeValueAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__Group_4__1__Impl"


    // $ANTLR start "rule__UnDouble__Group__0"
    // InternalLegoLang.g:7955:1: rule__UnDouble__Group__0 : rule__UnDouble__Group__0__Impl rule__UnDouble__Group__1 ;
    public final void rule__UnDouble__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7959:1: ( rule__UnDouble__Group__0__Impl rule__UnDouble__Group__1 )
            // InternalLegoLang.g:7960:2: rule__UnDouble__Group__0__Impl rule__UnDouble__Group__1
            {
            pushFollow(FOLLOW_50);
            rule__UnDouble__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnDouble__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group__0"


    // $ANTLR start "rule__UnDouble__Group__0__Impl"
    // InternalLegoLang.g:7967:1: rule__UnDouble__Group__0__Impl : ( () ) ;
    public final void rule__UnDouble__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7971:1: ( ( () ) )
            // InternalLegoLang.g:7972:1: ( () )
            {
            // InternalLegoLang.g:7972:1: ( () )
            // InternalLegoLang.g:7973:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getUnDoubleAction_0()); 
            }
            // InternalLegoLang.g:7974:2: ()
            // InternalLegoLang.g:7974:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getUnDoubleAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group__0__Impl"


    // $ANTLR start "rule__UnDouble__Group__1"
    // InternalLegoLang.g:7982:1: rule__UnDouble__Group__1 : rule__UnDouble__Group__1__Impl rule__UnDouble__Group__2 ;
    public final void rule__UnDouble__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7986:1: ( rule__UnDouble__Group__1__Impl rule__UnDouble__Group__2 )
            // InternalLegoLang.g:7987:2: rule__UnDouble__Group__1__Impl rule__UnDouble__Group__2
            {
            pushFollow(FOLLOW_50);
            rule__UnDouble__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnDouble__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group__1"


    // $ANTLR start "rule__UnDouble__Group__1__Impl"
    // InternalLegoLang.g:7994:1: rule__UnDouble__Group__1__Impl : ( ( rule__UnDouble__IsConstAssignment_1 )? ) ;
    public final void rule__UnDouble__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:7998:1: ( ( ( rule__UnDouble__IsConstAssignment_1 )? ) )
            // InternalLegoLang.g:7999:1: ( ( rule__UnDouble__IsConstAssignment_1 )? )
            {
            // InternalLegoLang.g:7999:1: ( ( rule__UnDouble__IsConstAssignment_1 )? )
            // InternalLegoLang.g:8000:2: ( rule__UnDouble__IsConstAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getIsConstAssignment_1()); 
            }
            // InternalLegoLang.g:8001:2: ( rule__UnDouble__IsConstAssignment_1 )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==70) ) {
                alt26=1;
            }
            switch (alt26) {
                case 1 :
                    // InternalLegoLang.g:8001:3: rule__UnDouble__IsConstAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnDouble__IsConstAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getIsConstAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group__1__Impl"


    // $ANTLR start "rule__UnDouble__Group__2"
    // InternalLegoLang.g:8009:1: rule__UnDouble__Group__2 : rule__UnDouble__Group__2__Impl rule__UnDouble__Group__3 ;
    public final void rule__UnDouble__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8013:1: ( rule__UnDouble__Group__2__Impl rule__UnDouble__Group__3 )
            // InternalLegoLang.g:8014:2: rule__UnDouble__Group__2__Impl rule__UnDouble__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__UnDouble__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnDouble__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group__2"


    // $ANTLR start "rule__UnDouble__Group__2__Impl"
    // InternalLegoLang.g:8021:1: rule__UnDouble__Group__2__Impl : ( 'double' ) ;
    public final void rule__UnDouble__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8025:1: ( ( 'double' ) )
            // InternalLegoLang.g:8026:1: ( 'double' )
            {
            // InternalLegoLang.g:8026:1: ( 'double' )
            // InternalLegoLang.g:8027:2: 'double'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getDoubleKeyword_2()); 
            }
            match(input,66,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getDoubleKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group__2__Impl"


    // $ANTLR start "rule__UnDouble__Group__3"
    // InternalLegoLang.g:8036:1: rule__UnDouble__Group__3 : rule__UnDouble__Group__3__Impl rule__UnDouble__Group__4 ;
    public final void rule__UnDouble__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8040:1: ( rule__UnDouble__Group__3__Impl rule__UnDouble__Group__4 )
            // InternalLegoLang.g:8041:2: rule__UnDouble__Group__3__Impl rule__UnDouble__Group__4
            {
            pushFollow(FOLLOW_15);
            rule__UnDouble__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnDouble__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group__3"


    // $ANTLR start "rule__UnDouble__Group__3__Impl"
    // InternalLegoLang.g:8048:1: rule__UnDouble__Group__3__Impl : ( ( rule__UnDouble__NameAssignment_3 ) ) ;
    public final void rule__UnDouble__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8052:1: ( ( ( rule__UnDouble__NameAssignment_3 ) ) )
            // InternalLegoLang.g:8053:1: ( ( rule__UnDouble__NameAssignment_3 ) )
            {
            // InternalLegoLang.g:8053:1: ( ( rule__UnDouble__NameAssignment_3 ) )
            // InternalLegoLang.g:8054:2: ( rule__UnDouble__NameAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getNameAssignment_3()); 
            }
            // InternalLegoLang.g:8055:2: ( rule__UnDouble__NameAssignment_3 )
            // InternalLegoLang.g:8055:3: rule__UnDouble__NameAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__UnDouble__NameAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getNameAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group__3__Impl"


    // $ANTLR start "rule__UnDouble__Group__4"
    // InternalLegoLang.g:8063:1: rule__UnDouble__Group__4 : rule__UnDouble__Group__4__Impl ;
    public final void rule__UnDouble__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8067:1: ( rule__UnDouble__Group__4__Impl )
            // InternalLegoLang.g:8068:2: rule__UnDouble__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnDouble__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group__4"


    // $ANTLR start "rule__UnDouble__Group__4__Impl"
    // InternalLegoLang.g:8074:1: rule__UnDouble__Group__4__Impl : ( ( rule__UnDouble__Group_4__0 )? ) ;
    public final void rule__UnDouble__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8078:1: ( ( ( rule__UnDouble__Group_4__0 )? ) )
            // InternalLegoLang.g:8079:1: ( ( rule__UnDouble__Group_4__0 )? )
            {
            // InternalLegoLang.g:8079:1: ( ( rule__UnDouble__Group_4__0 )? )
            // InternalLegoLang.g:8080:2: ( rule__UnDouble__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getGroup_4()); 
            }
            // InternalLegoLang.g:8081:2: ( rule__UnDouble__Group_4__0 )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==33) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // InternalLegoLang.g:8081:3: rule__UnDouble__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnDouble__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group__4__Impl"


    // $ANTLR start "rule__UnDouble__Group_4__0"
    // InternalLegoLang.g:8090:1: rule__UnDouble__Group_4__0 : rule__UnDouble__Group_4__0__Impl rule__UnDouble__Group_4__1 ;
    public final void rule__UnDouble__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8094:1: ( rule__UnDouble__Group_4__0__Impl rule__UnDouble__Group_4__1 )
            // InternalLegoLang.g:8095:2: rule__UnDouble__Group_4__0__Impl rule__UnDouble__Group_4__1
            {
            pushFollow(FOLLOW_9);
            rule__UnDouble__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnDouble__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group_4__0"


    // $ANTLR start "rule__UnDouble__Group_4__0__Impl"
    // InternalLegoLang.g:8102:1: rule__UnDouble__Group_4__0__Impl : ( '=' ) ;
    public final void rule__UnDouble__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8106:1: ( ( '=' ) )
            // InternalLegoLang.g:8107:1: ( '=' )
            {
            // InternalLegoLang.g:8107:1: ( '=' )
            // InternalLegoLang.g:8108:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getEqualsSignKeyword_4_0()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getEqualsSignKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group_4__0__Impl"


    // $ANTLR start "rule__UnDouble__Group_4__1"
    // InternalLegoLang.g:8117:1: rule__UnDouble__Group_4__1 : rule__UnDouble__Group_4__1__Impl rule__UnDouble__Group_4__2 ;
    public final void rule__UnDouble__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8121:1: ( rule__UnDouble__Group_4__1__Impl rule__UnDouble__Group_4__2 )
            // InternalLegoLang.g:8122:2: rule__UnDouble__Group_4__1__Impl rule__UnDouble__Group_4__2
            {
            pushFollow(FOLLOW_51);
            rule__UnDouble__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnDouble__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group_4__1"


    // $ANTLR start "rule__UnDouble__Group_4__1__Impl"
    // InternalLegoLang.g:8129:1: rule__UnDouble__Group_4__1__Impl : ( ( rule__UnDouble__InitialeValue1Assignment_4_1 ) ) ;
    public final void rule__UnDouble__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8133:1: ( ( ( rule__UnDouble__InitialeValue1Assignment_4_1 ) ) )
            // InternalLegoLang.g:8134:1: ( ( rule__UnDouble__InitialeValue1Assignment_4_1 ) )
            {
            // InternalLegoLang.g:8134:1: ( ( rule__UnDouble__InitialeValue1Assignment_4_1 ) )
            // InternalLegoLang.g:8135:2: ( rule__UnDouble__InitialeValue1Assignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getInitialeValue1Assignment_4_1()); 
            }
            // InternalLegoLang.g:8136:2: ( rule__UnDouble__InitialeValue1Assignment_4_1 )
            // InternalLegoLang.g:8136:3: rule__UnDouble__InitialeValue1Assignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__UnDouble__InitialeValue1Assignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getInitialeValue1Assignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group_4__1__Impl"


    // $ANTLR start "rule__UnDouble__Group_4__2"
    // InternalLegoLang.g:8144:1: rule__UnDouble__Group_4__2 : rule__UnDouble__Group_4__2__Impl rule__UnDouble__Group_4__3 ;
    public final void rule__UnDouble__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8148:1: ( rule__UnDouble__Group_4__2__Impl rule__UnDouble__Group_4__3 )
            // InternalLegoLang.g:8149:2: rule__UnDouble__Group_4__2__Impl rule__UnDouble__Group_4__3
            {
            pushFollow(FOLLOW_9);
            rule__UnDouble__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnDouble__Group_4__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group_4__2"


    // $ANTLR start "rule__UnDouble__Group_4__2__Impl"
    // InternalLegoLang.g:8156:1: rule__UnDouble__Group_4__2__Impl : ( '.' ) ;
    public final void rule__UnDouble__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8160:1: ( ( '.' ) )
            // InternalLegoLang.g:8161:1: ( '.' )
            {
            // InternalLegoLang.g:8161:1: ( '.' )
            // InternalLegoLang.g:8162:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getFullStopKeyword_4_2()); 
            }
            match(input,67,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getFullStopKeyword_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group_4__2__Impl"


    // $ANTLR start "rule__UnDouble__Group_4__3"
    // InternalLegoLang.g:8171:1: rule__UnDouble__Group_4__3 : rule__UnDouble__Group_4__3__Impl ;
    public final void rule__UnDouble__Group_4__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8175:1: ( rule__UnDouble__Group_4__3__Impl )
            // InternalLegoLang.g:8176:2: rule__UnDouble__Group_4__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnDouble__Group_4__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group_4__3"


    // $ANTLR start "rule__UnDouble__Group_4__3__Impl"
    // InternalLegoLang.g:8182:1: rule__UnDouble__Group_4__3__Impl : ( ( rule__UnDouble__InitialeValue2Assignment_4_3 ) ) ;
    public final void rule__UnDouble__Group_4__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8186:1: ( ( ( rule__UnDouble__InitialeValue2Assignment_4_3 ) ) )
            // InternalLegoLang.g:8187:1: ( ( rule__UnDouble__InitialeValue2Assignment_4_3 ) )
            {
            // InternalLegoLang.g:8187:1: ( ( rule__UnDouble__InitialeValue2Assignment_4_3 ) )
            // InternalLegoLang.g:8188:2: ( rule__UnDouble__InitialeValue2Assignment_4_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getInitialeValue2Assignment_4_3()); 
            }
            // InternalLegoLang.g:8189:2: ( rule__UnDouble__InitialeValue2Assignment_4_3 )
            // InternalLegoLang.g:8189:3: rule__UnDouble__InitialeValue2Assignment_4_3
            {
            pushFollow(FOLLOW_2);
            rule__UnDouble__InitialeValue2Assignment_4_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getInitialeValue2Assignment_4_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__Group_4__3__Impl"


    // $ANTLR start "rule__UnBoolean__Group__0"
    // InternalLegoLang.g:8198:1: rule__UnBoolean__Group__0 : rule__UnBoolean__Group__0__Impl rule__UnBoolean__Group__1 ;
    public final void rule__UnBoolean__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8202:1: ( rule__UnBoolean__Group__0__Impl rule__UnBoolean__Group__1 )
            // InternalLegoLang.g:8203:2: rule__UnBoolean__Group__0__Impl rule__UnBoolean__Group__1
            {
            pushFollow(FOLLOW_52);
            rule__UnBoolean__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnBoolean__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__Group__0"


    // $ANTLR start "rule__UnBoolean__Group__0__Impl"
    // InternalLegoLang.g:8210:1: rule__UnBoolean__Group__0__Impl : ( () ) ;
    public final void rule__UnBoolean__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8214:1: ( ( () ) )
            // InternalLegoLang.g:8215:1: ( () )
            {
            // InternalLegoLang.g:8215:1: ( () )
            // InternalLegoLang.g:8216:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnBooleanAccess().getUnBooleanAction_0()); 
            }
            // InternalLegoLang.g:8217:2: ()
            // InternalLegoLang.g:8217:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnBooleanAccess().getUnBooleanAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__Group__0__Impl"


    // $ANTLR start "rule__UnBoolean__Group__1"
    // InternalLegoLang.g:8225:1: rule__UnBoolean__Group__1 : rule__UnBoolean__Group__1__Impl rule__UnBoolean__Group__2 ;
    public final void rule__UnBoolean__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8229:1: ( rule__UnBoolean__Group__1__Impl rule__UnBoolean__Group__2 )
            // InternalLegoLang.g:8230:2: rule__UnBoolean__Group__1__Impl rule__UnBoolean__Group__2
            {
            pushFollow(FOLLOW_52);
            rule__UnBoolean__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnBoolean__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__Group__1"


    // $ANTLR start "rule__UnBoolean__Group__1__Impl"
    // InternalLegoLang.g:8237:1: rule__UnBoolean__Group__1__Impl : ( ( rule__UnBoolean__IsConstAssignment_1 )? ) ;
    public final void rule__UnBoolean__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8241:1: ( ( ( rule__UnBoolean__IsConstAssignment_1 )? ) )
            // InternalLegoLang.g:8242:1: ( ( rule__UnBoolean__IsConstAssignment_1 )? )
            {
            // InternalLegoLang.g:8242:1: ( ( rule__UnBoolean__IsConstAssignment_1 )? )
            // InternalLegoLang.g:8243:2: ( rule__UnBoolean__IsConstAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnBooleanAccess().getIsConstAssignment_1()); 
            }
            // InternalLegoLang.g:8244:2: ( rule__UnBoolean__IsConstAssignment_1 )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==70) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // InternalLegoLang.g:8244:3: rule__UnBoolean__IsConstAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnBoolean__IsConstAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnBooleanAccess().getIsConstAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__Group__1__Impl"


    // $ANTLR start "rule__UnBoolean__Group__2"
    // InternalLegoLang.g:8252:1: rule__UnBoolean__Group__2 : rule__UnBoolean__Group__2__Impl rule__UnBoolean__Group__3 ;
    public final void rule__UnBoolean__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8256:1: ( rule__UnBoolean__Group__2__Impl rule__UnBoolean__Group__3 )
            // InternalLegoLang.g:8257:2: rule__UnBoolean__Group__2__Impl rule__UnBoolean__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__UnBoolean__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnBoolean__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__Group__2"


    // $ANTLR start "rule__UnBoolean__Group__2__Impl"
    // InternalLegoLang.g:8264:1: rule__UnBoolean__Group__2__Impl : ( 'bool' ) ;
    public final void rule__UnBoolean__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8268:1: ( ( 'bool' ) )
            // InternalLegoLang.g:8269:1: ( 'bool' )
            {
            // InternalLegoLang.g:8269:1: ( 'bool' )
            // InternalLegoLang.g:8270:2: 'bool'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnBooleanAccess().getBoolKeyword_2()); 
            }
            match(input,68,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnBooleanAccess().getBoolKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__Group__2__Impl"


    // $ANTLR start "rule__UnBoolean__Group__3"
    // InternalLegoLang.g:8279:1: rule__UnBoolean__Group__3 : rule__UnBoolean__Group__3__Impl rule__UnBoolean__Group__4 ;
    public final void rule__UnBoolean__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8283:1: ( rule__UnBoolean__Group__3__Impl rule__UnBoolean__Group__4 )
            // InternalLegoLang.g:8284:2: rule__UnBoolean__Group__3__Impl rule__UnBoolean__Group__4
            {
            pushFollow(FOLLOW_15);
            rule__UnBoolean__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnBoolean__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__Group__3"


    // $ANTLR start "rule__UnBoolean__Group__3__Impl"
    // InternalLegoLang.g:8291:1: rule__UnBoolean__Group__3__Impl : ( ( rule__UnBoolean__NameAssignment_3 ) ) ;
    public final void rule__UnBoolean__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8295:1: ( ( ( rule__UnBoolean__NameAssignment_3 ) ) )
            // InternalLegoLang.g:8296:1: ( ( rule__UnBoolean__NameAssignment_3 ) )
            {
            // InternalLegoLang.g:8296:1: ( ( rule__UnBoolean__NameAssignment_3 ) )
            // InternalLegoLang.g:8297:2: ( rule__UnBoolean__NameAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnBooleanAccess().getNameAssignment_3()); 
            }
            // InternalLegoLang.g:8298:2: ( rule__UnBoolean__NameAssignment_3 )
            // InternalLegoLang.g:8298:3: rule__UnBoolean__NameAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__UnBoolean__NameAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnBooleanAccess().getNameAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__Group__3__Impl"


    // $ANTLR start "rule__UnBoolean__Group__4"
    // InternalLegoLang.g:8306:1: rule__UnBoolean__Group__4 : rule__UnBoolean__Group__4__Impl ;
    public final void rule__UnBoolean__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8310:1: ( rule__UnBoolean__Group__4__Impl )
            // InternalLegoLang.g:8311:2: rule__UnBoolean__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnBoolean__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__Group__4"


    // $ANTLR start "rule__UnBoolean__Group__4__Impl"
    // InternalLegoLang.g:8317:1: rule__UnBoolean__Group__4__Impl : ( ( rule__UnBoolean__Group_4__0 )? ) ;
    public final void rule__UnBoolean__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8321:1: ( ( ( rule__UnBoolean__Group_4__0 )? ) )
            // InternalLegoLang.g:8322:1: ( ( rule__UnBoolean__Group_4__0 )? )
            {
            // InternalLegoLang.g:8322:1: ( ( rule__UnBoolean__Group_4__0 )? )
            // InternalLegoLang.g:8323:2: ( rule__UnBoolean__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnBooleanAccess().getGroup_4()); 
            }
            // InternalLegoLang.g:8324:2: ( rule__UnBoolean__Group_4__0 )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==33) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // InternalLegoLang.g:8324:3: rule__UnBoolean__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnBoolean__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnBooleanAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__Group__4__Impl"


    // $ANTLR start "rule__UnBoolean__Group_4__0"
    // InternalLegoLang.g:8333:1: rule__UnBoolean__Group_4__0 : rule__UnBoolean__Group_4__0__Impl rule__UnBoolean__Group_4__1 ;
    public final void rule__UnBoolean__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8337:1: ( rule__UnBoolean__Group_4__0__Impl rule__UnBoolean__Group_4__1 )
            // InternalLegoLang.g:8338:2: rule__UnBoolean__Group_4__0__Impl rule__UnBoolean__Group_4__1
            {
            pushFollow(FOLLOW_53);
            rule__UnBoolean__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnBoolean__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__Group_4__0"


    // $ANTLR start "rule__UnBoolean__Group_4__0__Impl"
    // InternalLegoLang.g:8345:1: rule__UnBoolean__Group_4__0__Impl : ( '=' ) ;
    public final void rule__UnBoolean__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8349:1: ( ( '=' ) )
            // InternalLegoLang.g:8350:1: ( '=' )
            {
            // InternalLegoLang.g:8350:1: ( '=' )
            // InternalLegoLang.g:8351:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnBooleanAccess().getEqualsSignKeyword_4_0()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnBooleanAccess().getEqualsSignKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__Group_4__0__Impl"


    // $ANTLR start "rule__UnBoolean__Group_4__1"
    // InternalLegoLang.g:8360:1: rule__UnBoolean__Group_4__1 : rule__UnBoolean__Group_4__1__Impl ;
    public final void rule__UnBoolean__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8364:1: ( rule__UnBoolean__Group_4__1__Impl )
            // InternalLegoLang.g:8365:2: rule__UnBoolean__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnBoolean__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__Group_4__1"


    // $ANTLR start "rule__UnBoolean__Group_4__1__Impl"
    // InternalLegoLang.g:8371:1: rule__UnBoolean__Group_4__1__Impl : ( ( rule__UnBoolean__InitialeValueAssignment_4_1 ) ) ;
    public final void rule__UnBoolean__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8375:1: ( ( ( rule__UnBoolean__InitialeValueAssignment_4_1 ) ) )
            // InternalLegoLang.g:8376:1: ( ( rule__UnBoolean__InitialeValueAssignment_4_1 ) )
            {
            // InternalLegoLang.g:8376:1: ( ( rule__UnBoolean__InitialeValueAssignment_4_1 ) )
            // InternalLegoLang.g:8377:2: ( rule__UnBoolean__InitialeValueAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnBooleanAccess().getInitialeValueAssignment_4_1()); 
            }
            // InternalLegoLang.g:8378:2: ( rule__UnBoolean__InitialeValueAssignment_4_1 )
            // InternalLegoLang.g:8378:3: rule__UnBoolean__InitialeValueAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__UnBoolean__InitialeValueAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnBooleanAccess().getInitialeValueAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__Group_4__1__Impl"


    // $ANTLR start "rule__UnString__Group__0"
    // InternalLegoLang.g:8387:1: rule__UnString__Group__0 : rule__UnString__Group__0__Impl rule__UnString__Group__1 ;
    public final void rule__UnString__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8391:1: ( rule__UnString__Group__0__Impl rule__UnString__Group__1 )
            // InternalLegoLang.g:8392:2: rule__UnString__Group__0__Impl rule__UnString__Group__1
            {
            pushFollow(FOLLOW_54);
            rule__UnString__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnString__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__Group__0"


    // $ANTLR start "rule__UnString__Group__0__Impl"
    // InternalLegoLang.g:8399:1: rule__UnString__Group__0__Impl : ( () ) ;
    public final void rule__UnString__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8403:1: ( ( () ) )
            // InternalLegoLang.g:8404:1: ( () )
            {
            // InternalLegoLang.g:8404:1: ( () )
            // InternalLegoLang.g:8405:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnStringAccess().getUnStringAction_0()); 
            }
            // InternalLegoLang.g:8406:2: ()
            // InternalLegoLang.g:8406:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnStringAccess().getUnStringAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__Group__0__Impl"


    // $ANTLR start "rule__UnString__Group__1"
    // InternalLegoLang.g:8414:1: rule__UnString__Group__1 : rule__UnString__Group__1__Impl rule__UnString__Group__2 ;
    public final void rule__UnString__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8418:1: ( rule__UnString__Group__1__Impl rule__UnString__Group__2 )
            // InternalLegoLang.g:8419:2: rule__UnString__Group__1__Impl rule__UnString__Group__2
            {
            pushFollow(FOLLOW_54);
            rule__UnString__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnString__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__Group__1"


    // $ANTLR start "rule__UnString__Group__1__Impl"
    // InternalLegoLang.g:8426:1: rule__UnString__Group__1__Impl : ( ( rule__UnString__IsConstAssignment_1 )? ) ;
    public final void rule__UnString__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8430:1: ( ( ( rule__UnString__IsConstAssignment_1 )? ) )
            // InternalLegoLang.g:8431:1: ( ( rule__UnString__IsConstAssignment_1 )? )
            {
            // InternalLegoLang.g:8431:1: ( ( rule__UnString__IsConstAssignment_1 )? )
            // InternalLegoLang.g:8432:2: ( rule__UnString__IsConstAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnStringAccess().getIsConstAssignment_1()); 
            }
            // InternalLegoLang.g:8433:2: ( rule__UnString__IsConstAssignment_1 )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==70) ) {
                alt30=1;
            }
            switch (alt30) {
                case 1 :
                    // InternalLegoLang.g:8433:3: rule__UnString__IsConstAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnString__IsConstAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnStringAccess().getIsConstAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__Group__1__Impl"


    // $ANTLR start "rule__UnString__Group__2"
    // InternalLegoLang.g:8441:1: rule__UnString__Group__2 : rule__UnString__Group__2__Impl rule__UnString__Group__3 ;
    public final void rule__UnString__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8445:1: ( rule__UnString__Group__2__Impl rule__UnString__Group__3 )
            // InternalLegoLang.g:8446:2: rule__UnString__Group__2__Impl rule__UnString__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__UnString__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnString__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__Group__2"


    // $ANTLR start "rule__UnString__Group__2__Impl"
    // InternalLegoLang.g:8453:1: rule__UnString__Group__2__Impl : ( 'string' ) ;
    public final void rule__UnString__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8457:1: ( ( 'string' ) )
            // InternalLegoLang.g:8458:1: ( 'string' )
            {
            // InternalLegoLang.g:8458:1: ( 'string' )
            // InternalLegoLang.g:8459:2: 'string'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnStringAccess().getStringKeyword_2()); 
            }
            match(input,69,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnStringAccess().getStringKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__Group__2__Impl"


    // $ANTLR start "rule__UnString__Group__3"
    // InternalLegoLang.g:8468:1: rule__UnString__Group__3 : rule__UnString__Group__3__Impl rule__UnString__Group__4 ;
    public final void rule__UnString__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8472:1: ( rule__UnString__Group__3__Impl rule__UnString__Group__4 )
            // InternalLegoLang.g:8473:2: rule__UnString__Group__3__Impl rule__UnString__Group__4
            {
            pushFollow(FOLLOW_15);
            rule__UnString__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnString__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__Group__3"


    // $ANTLR start "rule__UnString__Group__3__Impl"
    // InternalLegoLang.g:8480:1: rule__UnString__Group__3__Impl : ( ( rule__UnString__NameAssignment_3 ) ) ;
    public final void rule__UnString__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8484:1: ( ( ( rule__UnString__NameAssignment_3 ) ) )
            // InternalLegoLang.g:8485:1: ( ( rule__UnString__NameAssignment_3 ) )
            {
            // InternalLegoLang.g:8485:1: ( ( rule__UnString__NameAssignment_3 ) )
            // InternalLegoLang.g:8486:2: ( rule__UnString__NameAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnStringAccess().getNameAssignment_3()); 
            }
            // InternalLegoLang.g:8487:2: ( rule__UnString__NameAssignment_3 )
            // InternalLegoLang.g:8487:3: rule__UnString__NameAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__UnString__NameAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnStringAccess().getNameAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__Group__3__Impl"


    // $ANTLR start "rule__UnString__Group__4"
    // InternalLegoLang.g:8495:1: rule__UnString__Group__4 : rule__UnString__Group__4__Impl ;
    public final void rule__UnString__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8499:1: ( rule__UnString__Group__4__Impl )
            // InternalLegoLang.g:8500:2: rule__UnString__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnString__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__Group__4"


    // $ANTLR start "rule__UnString__Group__4__Impl"
    // InternalLegoLang.g:8506:1: rule__UnString__Group__4__Impl : ( ( rule__UnString__Group_4__0 )? ) ;
    public final void rule__UnString__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8510:1: ( ( ( rule__UnString__Group_4__0 )? ) )
            // InternalLegoLang.g:8511:1: ( ( rule__UnString__Group_4__0 )? )
            {
            // InternalLegoLang.g:8511:1: ( ( rule__UnString__Group_4__0 )? )
            // InternalLegoLang.g:8512:2: ( rule__UnString__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnStringAccess().getGroup_4()); 
            }
            // InternalLegoLang.g:8513:2: ( rule__UnString__Group_4__0 )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==33) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalLegoLang.g:8513:3: rule__UnString__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnString__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnStringAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__Group__4__Impl"


    // $ANTLR start "rule__UnString__Group_4__0"
    // InternalLegoLang.g:8522:1: rule__UnString__Group_4__0 : rule__UnString__Group_4__0__Impl rule__UnString__Group_4__1 ;
    public final void rule__UnString__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8526:1: ( rule__UnString__Group_4__0__Impl rule__UnString__Group_4__1 )
            // InternalLegoLang.g:8527:2: rule__UnString__Group_4__0__Impl rule__UnString__Group_4__1
            {
            pushFollow(FOLLOW_55);
            rule__UnString__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnString__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__Group_4__0"


    // $ANTLR start "rule__UnString__Group_4__0__Impl"
    // InternalLegoLang.g:8534:1: rule__UnString__Group_4__0__Impl : ( '=' ) ;
    public final void rule__UnString__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8538:1: ( ( '=' ) )
            // InternalLegoLang.g:8539:1: ( '=' )
            {
            // InternalLegoLang.g:8539:1: ( '=' )
            // InternalLegoLang.g:8540:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnStringAccess().getEqualsSignKeyword_4_0()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnStringAccess().getEqualsSignKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__Group_4__0__Impl"


    // $ANTLR start "rule__UnString__Group_4__1"
    // InternalLegoLang.g:8549:1: rule__UnString__Group_4__1 : rule__UnString__Group_4__1__Impl ;
    public final void rule__UnString__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8553:1: ( rule__UnString__Group_4__1__Impl )
            // InternalLegoLang.g:8554:2: rule__UnString__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnString__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__Group_4__1"


    // $ANTLR start "rule__UnString__Group_4__1__Impl"
    // InternalLegoLang.g:8560:1: rule__UnString__Group_4__1__Impl : ( ( rule__UnString__InitialeValueAssignment_4_1 ) ) ;
    public final void rule__UnString__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8564:1: ( ( ( rule__UnString__InitialeValueAssignment_4_1 ) ) )
            // InternalLegoLang.g:8565:1: ( ( rule__UnString__InitialeValueAssignment_4_1 ) )
            {
            // InternalLegoLang.g:8565:1: ( ( rule__UnString__InitialeValueAssignment_4_1 ) )
            // InternalLegoLang.g:8566:2: ( rule__UnString__InitialeValueAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnStringAccess().getInitialeValueAssignment_4_1()); 
            }
            // InternalLegoLang.g:8567:2: ( rule__UnString__InitialeValueAssignment_4_1 )
            // InternalLegoLang.g:8567:3: rule__UnString__InitialeValueAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__UnString__InitialeValueAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnStringAccess().getInitialeValueAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__Group_4__1__Impl"


    // $ANTLR start "rule__UnColor__Group__0"
    // InternalLegoLang.g:8576:1: rule__UnColor__Group__0 : rule__UnColor__Group__0__Impl rule__UnColor__Group__1 ;
    public final void rule__UnColor__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8580:1: ( rule__UnColor__Group__0__Impl rule__UnColor__Group__1 )
            // InternalLegoLang.g:8581:2: rule__UnColor__Group__0__Impl rule__UnColor__Group__1
            {
            pushFollow(FOLLOW_56);
            rule__UnColor__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnColor__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__Group__0"


    // $ANTLR start "rule__UnColor__Group__0__Impl"
    // InternalLegoLang.g:8588:1: rule__UnColor__Group__0__Impl : ( () ) ;
    public final void rule__UnColor__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8592:1: ( ( () ) )
            // InternalLegoLang.g:8593:1: ( () )
            {
            // InternalLegoLang.g:8593:1: ( () )
            // InternalLegoLang.g:8594:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnColorAccess().getUnColorAction_0()); 
            }
            // InternalLegoLang.g:8595:2: ()
            // InternalLegoLang.g:8595:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnColorAccess().getUnColorAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__Group__0__Impl"


    // $ANTLR start "rule__UnColor__Group__1"
    // InternalLegoLang.g:8603:1: rule__UnColor__Group__1 : rule__UnColor__Group__1__Impl rule__UnColor__Group__2 ;
    public final void rule__UnColor__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8607:1: ( rule__UnColor__Group__1__Impl rule__UnColor__Group__2 )
            // InternalLegoLang.g:8608:2: rule__UnColor__Group__1__Impl rule__UnColor__Group__2
            {
            pushFollow(FOLLOW_56);
            rule__UnColor__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnColor__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__Group__1"


    // $ANTLR start "rule__UnColor__Group__1__Impl"
    // InternalLegoLang.g:8615:1: rule__UnColor__Group__1__Impl : ( ( rule__UnColor__IsConstAssignment_1 )? ) ;
    public final void rule__UnColor__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8619:1: ( ( ( rule__UnColor__IsConstAssignment_1 )? ) )
            // InternalLegoLang.g:8620:1: ( ( rule__UnColor__IsConstAssignment_1 )? )
            {
            // InternalLegoLang.g:8620:1: ( ( rule__UnColor__IsConstAssignment_1 )? )
            // InternalLegoLang.g:8621:2: ( rule__UnColor__IsConstAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnColorAccess().getIsConstAssignment_1()); 
            }
            // InternalLegoLang.g:8622:2: ( rule__UnColor__IsConstAssignment_1 )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==70) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // InternalLegoLang.g:8622:3: rule__UnColor__IsConstAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnColor__IsConstAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnColorAccess().getIsConstAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__Group__1__Impl"


    // $ANTLR start "rule__UnColor__Group__2"
    // InternalLegoLang.g:8630:1: rule__UnColor__Group__2 : rule__UnColor__Group__2__Impl rule__UnColor__Group__3 ;
    public final void rule__UnColor__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8634:1: ( rule__UnColor__Group__2__Impl rule__UnColor__Group__3 )
            // InternalLegoLang.g:8635:2: rule__UnColor__Group__2__Impl rule__UnColor__Group__3
            {
            pushFollow(FOLLOW_4);
            rule__UnColor__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnColor__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__Group__2"


    // $ANTLR start "rule__UnColor__Group__2__Impl"
    // InternalLegoLang.g:8642:1: rule__UnColor__Group__2__Impl : ( 'color' ) ;
    public final void rule__UnColor__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8646:1: ( ( 'color' ) )
            // InternalLegoLang.g:8647:1: ( 'color' )
            {
            // InternalLegoLang.g:8647:1: ( 'color' )
            // InternalLegoLang.g:8648:2: 'color'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnColorAccess().getColorKeyword_2()); 
            }
            match(input,39,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnColorAccess().getColorKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__Group__2__Impl"


    // $ANTLR start "rule__UnColor__Group__3"
    // InternalLegoLang.g:8657:1: rule__UnColor__Group__3 : rule__UnColor__Group__3__Impl rule__UnColor__Group__4 ;
    public final void rule__UnColor__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8661:1: ( rule__UnColor__Group__3__Impl rule__UnColor__Group__4 )
            // InternalLegoLang.g:8662:2: rule__UnColor__Group__3__Impl rule__UnColor__Group__4
            {
            pushFollow(FOLLOW_15);
            rule__UnColor__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnColor__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__Group__3"


    // $ANTLR start "rule__UnColor__Group__3__Impl"
    // InternalLegoLang.g:8669:1: rule__UnColor__Group__3__Impl : ( ( rule__UnColor__NameAssignment_3 ) ) ;
    public final void rule__UnColor__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8673:1: ( ( ( rule__UnColor__NameAssignment_3 ) ) )
            // InternalLegoLang.g:8674:1: ( ( rule__UnColor__NameAssignment_3 ) )
            {
            // InternalLegoLang.g:8674:1: ( ( rule__UnColor__NameAssignment_3 ) )
            // InternalLegoLang.g:8675:2: ( rule__UnColor__NameAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnColorAccess().getNameAssignment_3()); 
            }
            // InternalLegoLang.g:8676:2: ( rule__UnColor__NameAssignment_3 )
            // InternalLegoLang.g:8676:3: rule__UnColor__NameAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__UnColor__NameAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnColorAccess().getNameAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__Group__3__Impl"


    // $ANTLR start "rule__UnColor__Group__4"
    // InternalLegoLang.g:8684:1: rule__UnColor__Group__4 : rule__UnColor__Group__4__Impl ;
    public final void rule__UnColor__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8688:1: ( rule__UnColor__Group__4__Impl )
            // InternalLegoLang.g:8689:2: rule__UnColor__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnColor__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__Group__4"


    // $ANTLR start "rule__UnColor__Group__4__Impl"
    // InternalLegoLang.g:8695:1: rule__UnColor__Group__4__Impl : ( ( rule__UnColor__Group_4__0 )? ) ;
    public final void rule__UnColor__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8699:1: ( ( ( rule__UnColor__Group_4__0 )? ) )
            // InternalLegoLang.g:8700:1: ( ( rule__UnColor__Group_4__0 )? )
            {
            // InternalLegoLang.g:8700:1: ( ( rule__UnColor__Group_4__0 )? )
            // InternalLegoLang.g:8701:2: ( rule__UnColor__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnColorAccess().getGroup_4()); 
            }
            // InternalLegoLang.g:8702:2: ( rule__UnColor__Group_4__0 )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==33) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // InternalLegoLang.g:8702:3: rule__UnColor__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__UnColor__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnColorAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__Group__4__Impl"


    // $ANTLR start "rule__UnColor__Group_4__0"
    // InternalLegoLang.g:8711:1: rule__UnColor__Group_4__0 : rule__UnColor__Group_4__0__Impl rule__UnColor__Group_4__1 ;
    public final void rule__UnColor__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8715:1: ( rule__UnColor__Group_4__0__Impl rule__UnColor__Group_4__1 )
            // InternalLegoLang.g:8716:2: rule__UnColor__Group_4__0__Impl rule__UnColor__Group_4__1
            {
            pushFollow(FOLLOW_57);
            rule__UnColor__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__UnColor__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__Group_4__0"


    // $ANTLR start "rule__UnColor__Group_4__0__Impl"
    // InternalLegoLang.g:8723:1: rule__UnColor__Group_4__0__Impl : ( '=' ) ;
    public final void rule__UnColor__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8727:1: ( ( '=' ) )
            // InternalLegoLang.g:8728:1: ( '=' )
            {
            // InternalLegoLang.g:8728:1: ( '=' )
            // InternalLegoLang.g:8729:2: '='
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnColorAccess().getEqualsSignKeyword_4_0()); 
            }
            match(input,33,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnColorAccess().getEqualsSignKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__Group_4__0__Impl"


    // $ANTLR start "rule__UnColor__Group_4__1"
    // InternalLegoLang.g:8738:1: rule__UnColor__Group_4__1 : rule__UnColor__Group_4__1__Impl ;
    public final void rule__UnColor__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8742:1: ( rule__UnColor__Group_4__1__Impl )
            // InternalLegoLang.g:8743:2: rule__UnColor__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__UnColor__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__Group_4__1"


    // $ANTLR start "rule__UnColor__Group_4__1__Impl"
    // InternalLegoLang.g:8749:1: rule__UnColor__Group_4__1__Impl : ( ( rule__UnColor__InitialValueAssignment_4_1 ) ) ;
    public final void rule__UnColor__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8753:1: ( ( ( rule__UnColor__InitialValueAssignment_4_1 ) ) )
            // InternalLegoLang.g:8754:1: ( ( rule__UnColor__InitialValueAssignment_4_1 ) )
            {
            // InternalLegoLang.g:8754:1: ( ( rule__UnColor__InitialValueAssignment_4_1 ) )
            // InternalLegoLang.g:8755:2: ( rule__UnColor__InitialValueAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnColorAccess().getInitialValueAssignment_4_1()); 
            }
            // InternalLegoLang.g:8756:2: ( rule__UnColor__InitialValueAssignment_4_1 )
            // InternalLegoLang.g:8756:3: rule__UnColor__InitialValueAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__UnColor__InitialValueAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnColorAccess().getInitialValueAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__Group_4__1__Impl"


    // $ANTLR start "rule__TheDouble__Group__0"
    // InternalLegoLang.g:8765:1: rule__TheDouble__Group__0 : rule__TheDouble__Group__0__Impl rule__TheDouble__Group__1 ;
    public final void rule__TheDouble__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8769:1: ( rule__TheDouble__Group__0__Impl rule__TheDouble__Group__1 )
            // InternalLegoLang.g:8770:2: rule__TheDouble__Group__0__Impl rule__TheDouble__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__TheDouble__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TheDouble__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheDouble__Group__0"


    // $ANTLR start "rule__TheDouble__Group__0__Impl"
    // InternalLegoLang.g:8777:1: rule__TheDouble__Group__0__Impl : ( () ) ;
    public final void rule__TheDouble__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8781:1: ( ( () ) )
            // InternalLegoLang.g:8782:1: ( () )
            {
            // InternalLegoLang.g:8782:1: ( () )
            // InternalLegoLang.g:8783:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheDoubleAccess().getTheDoubleAction_0()); 
            }
            // InternalLegoLang.g:8784:2: ()
            // InternalLegoLang.g:8784:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheDoubleAccess().getTheDoubleAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheDouble__Group__0__Impl"


    // $ANTLR start "rule__TheDouble__Group__1"
    // InternalLegoLang.g:8792:1: rule__TheDouble__Group__1 : rule__TheDouble__Group__1__Impl rule__TheDouble__Group__2 ;
    public final void rule__TheDouble__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8796:1: ( rule__TheDouble__Group__1__Impl rule__TheDouble__Group__2 )
            // InternalLegoLang.g:8797:2: rule__TheDouble__Group__1__Impl rule__TheDouble__Group__2
            {
            pushFollow(FOLLOW_51);
            rule__TheDouble__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TheDouble__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheDouble__Group__1"


    // $ANTLR start "rule__TheDouble__Group__1__Impl"
    // InternalLegoLang.g:8804:1: rule__TheDouble__Group__1__Impl : ( ( rule__TheDouble__Value1Assignment_1 ) ) ;
    public final void rule__TheDouble__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8808:1: ( ( ( rule__TheDouble__Value1Assignment_1 ) ) )
            // InternalLegoLang.g:8809:1: ( ( rule__TheDouble__Value1Assignment_1 ) )
            {
            // InternalLegoLang.g:8809:1: ( ( rule__TheDouble__Value1Assignment_1 ) )
            // InternalLegoLang.g:8810:2: ( rule__TheDouble__Value1Assignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheDoubleAccess().getValue1Assignment_1()); 
            }
            // InternalLegoLang.g:8811:2: ( rule__TheDouble__Value1Assignment_1 )
            // InternalLegoLang.g:8811:3: rule__TheDouble__Value1Assignment_1
            {
            pushFollow(FOLLOW_2);
            rule__TheDouble__Value1Assignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheDoubleAccess().getValue1Assignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheDouble__Group__1__Impl"


    // $ANTLR start "rule__TheDouble__Group__2"
    // InternalLegoLang.g:8819:1: rule__TheDouble__Group__2 : rule__TheDouble__Group__2__Impl rule__TheDouble__Group__3 ;
    public final void rule__TheDouble__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8823:1: ( rule__TheDouble__Group__2__Impl rule__TheDouble__Group__3 )
            // InternalLegoLang.g:8824:2: rule__TheDouble__Group__2__Impl rule__TheDouble__Group__3
            {
            pushFollow(FOLLOW_9);
            rule__TheDouble__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TheDouble__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheDouble__Group__2"


    // $ANTLR start "rule__TheDouble__Group__2__Impl"
    // InternalLegoLang.g:8831:1: rule__TheDouble__Group__2__Impl : ( '.' ) ;
    public final void rule__TheDouble__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8835:1: ( ( '.' ) )
            // InternalLegoLang.g:8836:1: ( '.' )
            {
            // InternalLegoLang.g:8836:1: ( '.' )
            // InternalLegoLang.g:8837:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheDoubleAccess().getFullStopKeyword_2()); 
            }
            match(input,67,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheDoubleAccess().getFullStopKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheDouble__Group__2__Impl"


    // $ANTLR start "rule__TheDouble__Group__3"
    // InternalLegoLang.g:8846:1: rule__TheDouble__Group__3 : rule__TheDouble__Group__3__Impl ;
    public final void rule__TheDouble__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8850:1: ( rule__TheDouble__Group__3__Impl )
            // InternalLegoLang.g:8851:2: rule__TheDouble__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TheDouble__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheDouble__Group__3"


    // $ANTLR start "rule__TheDouble__Group__3__Impl"
    // InternalLegoLang.g:8857:1: rule__TheDouble__Group__3__Impl : ( ( rule__TheDouble__Value2Assignment_3 ) ) ;
    public final void rule__TheDouble__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8861:1: ( ( ( rule__TheDouble__Value2Assignment_3 ) ) )
            // InternalLegoLang.g:8862:1: ( ( rule__TheDouble__Value2Assignment_3 ) )
            {
            // InternalLegoLang.g:8862:1: ( ( rule__TheDouble__Value2Assignment_3 ) )
            // InternalLegoLang.g:8863:2: ( rule__TheDouble__Value2Assignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheDoubleAccess().getValue2Assignment_3()); 
            }
            // InternalLegoLang.g:8864:2: ( rule__TheDouble__Value2Assignment_3 )
            // InternalLegoLang.g:8864:3: rule__TheDouble__Value2Assignment_3
            {
            pushFollow(FOLLOW_2);
            rule__TheDouble__Value2Assignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheDoubleAccess().getValue2Assignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheDouble__Group__3__Impl"


    // $ANTLR start "rule__TheInt__Group__0"
    // InternalLegoLang.g:8873:1: rule__TheInt__Group__0 : rule__TheInt__Group__0__Impl rule__TheInt__Group__1 ;
    public final void rule__TheInt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8877:1: ( rule__TheInt__Group__0__Impl rule__TheInt__Group__1 )
            // InternalLegoLang.g:8878:2: rule__TheInt__Group__0__Impl rule__TheInt__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__TheInt__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TheInt__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheInt__Group__0"


    // $ANTLR start "rule__TheInt__Group__0__Impl"
    // InternalLegoLang.g:8885:1: rule__TheInt__Group__0__Impl : ( () ) ;
    public final void rule__TheInt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8889:1: ( ( () ) )
            // InternalLegoLang.g:8890:1: ( () )
            {
            // InternalLegoLang.g:8890:1: ( () )
            // InternalLegoLang.g:8891:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheIntAccess().getTheIntAction_0()); 
            }
            // InternalLegoLang.g:8892:2: ()
            // InternalLegoLang.g:8892:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheIntAccess().getTheIntAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheInt__Group__0__Impl"


    // $ANTLR start "rule__TheInt__Group__1"
    // InternalLegoLang.g:8900:1: rule__TheInt__Group__1 : rule__TheInt__Group__1__Impl ;
    public final void rule__TheInt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8904:1: ( rule__TheInt__Group__1__Impl )
            // InternalLegoLang.g:8905:2: rule__TheInt__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TheInt__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheInt__Group__1"


    // $ANTLR start "rule__TheInt__Group__1__Impl"
    // InternalLegoLang.g:8911:1: rule__TheInt__Group__1__Impl : ( ( rule__TheInt__ValueAssignment_1 ) ) ;
    public final void rule__TheInt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8915:1: ( ( ( rule__TheInt__ValueAssignment_1 ) ) )
            // InternalLegoLang.g:8916:1: ( ( rule__TheInt__ValueAssignment_1 ) )
            {
            // InternalLegoLang.g:8916:1: ( ( rule__TheInt__ValueAssignment_1 ) )
            // InternalLegoLang.g:8917:2: ( rule__TheInt__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheIntAccess().getValueAssignment_1()); 
            }
            // InternalLegoLang.g:8918:2: ( rule__TheInt__ValueAssignment_1 )
            // InternalLegoLang.g:8918:3: rule__TheInt__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__TheInt__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheIntAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheInt__Group__1__Impl"


    // $ANTLR start "rule__TheBoolean__Group__0"
    // InternalLegoLang.g:8927:1: rule__TheBoolean__Group__0 : rule__TheBoolean__Group__0__Impl rule__TheBoolean__Group__1 ;
    public final void rule__TheBoolean__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8931:1: ( rule__TheBoolean__Group__0__Impl rule__TheBoolean__Group__1 )
            // InternalLegoLang.g:8932:2: rule__TheBoolean__Group__0__Impl rule__TheBoolean__Group__1
            {
            pushFollow(FOLLOW_53);
            rule__TheBoolean__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TheBoolean__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheBoolean__Group__0"


    // $ANTLR start "rule__TheBoolean__Group__0__Impl"
    // InternalLegoLang.g:8939:1: rule__TheBoolean__Group__0__Impl : ( () ) ;
    public final void rule__TheBoolean__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8943:1: ( ( () ) )
            // InternalLegoLang.g:8944:1: ( () )
            {
            // InternalLegoLang.g:8944:1: ( () )
            // InternalLegoLang.g:8945:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheBooleanAccess().getTheBooleanAction_0()); 
            }
            // InternalLegoLang.g:8946:2: ()
            // InternalLegoLang.g:8946:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheBooleanAccess().getTheBooleanAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheBoolean__Group__0__Impl"


    // $ANTLR start "rule__TheBoolean__Group__1"
    // InternalLegoLang.g:8954:1: rule__TheBoolean__Group__1 : rule__TheBoolean__Group__1__Impl ;
    public final void rule__TheBoolean__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8958:1: ( rule__TheBoolean__Group__1__Impl )
            // InternalLegoLang.g:8959:2: rule__TheBoolean__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TheBoolean__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheBoolean__Group__1"


    // $ANTLR start "rule__TheBoolean__Group__1__Impl"
    // InternalLegoLang.g:8965:1: rule__TheBoolean__Group__1__Impl : ( ( rule__TheBoolean__ValueAssignment_1 ) ) ;
    public final void rule__TheBoolean__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8969:1: ( ( ( rule__TheBoolean__ValueAssignment_1 ) ) )
            // InternalLegoLang.g:8970:1: ( ( rule__TheBoolean__ValueAssignment_1 ) )
            {
            // InternalLegoLang.g:8970:1: ( ( rule__TheBoolean__ValueAssignment_1 ) )
            // InternalLegoLang.g:8971:2: ( rule__TheBoolean__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheBooleanAccess().getValueAssignment_1()); 
            }
            // InternalLegoLang.g:8972:2: ( rule__TheBoolean__ValueAssignment_1 )
            // InternalLegoLang.g:8972:3: rule__TheBoolean__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__TheBoolean__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheBooleanAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheBoolean__Group__1__Impl"


    // $ANTLR start "rule__TheString__Group__0"
    // InternalLegoLang.g:8981:1: rule__TheString__Group__0 : rule__TheString__Group__0__Impl rule__TheString__Group__1 ;
    public final void rule__TheString__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8985:1: ( rule__TheString__Group__0__Impl rule__TheString__Group__1 )
            // InternalLegoLang.g:8986:2: rule__TheString__Group__0__Impl rule__TheString__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__TheString__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TheString__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheString__Group__0"


    // $ANTLR start "rule__TheString__Group__0__Impl"
    // InternalLegoLang.g:8993:1: rule__TheString__Group__0__Impl : ( () ) ;
    public final void rule__TheString__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:8997:1: ( ( () ) )
            // InternalLegoLang.g:8998:1: ( () )
            {
            // InternalLegoLang.g:8998:1: ( () )
            // InternalLegoLang.g:8999:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheStringAccess().getTheStringAction_0()); 
            }
            // InternalLegoLang.g:9000:2: ()
            // InternalLegoLang.g:9000:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheStringAccess().getTheStringAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheString__Group__0__Impl"


    // $ANTLR start "rule__TheString__Group__1"
    // InternalLegoLang.g:9008:1: rule__TheString__Group__1 : rule__TheString__Group__1__Impl ;
    public final void rule__TheString__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9012:1: ( rule__TheString__Group__1__Impl )
            // InternalLegoLang.g:9013:2: rule__TheString__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TheString__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheString__Group__1"


    // $ANTLR start "rule__TheString__Group__1__Impl"
    // InternalLegoLang.g:9019:1: rule__TheString__Group__1__Impl : ( ( rule__TheString__ValueAssignment_1 ) ) ;
    public final void rule__TheString__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9023:1: ( ( ( rule__TheString__ValueAssignment_1 ) ) )
            // InternalLegoLang.g:9024:1: ( ( rule__TheString__ValueAssignment_1 ) )
            {
            // InternalLegoLang.g:9024:1: ( ( rule__TheString__ValueAssignment_1 ) )
            // InternalLegoLang.g:9025:2: ( rule__TheString__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheStringAccess().getValueAssignment_1()); 
            }
            // InternalLegoLang.g:9026:2: ( rule__TheString__ValueAssignment_1 )
            // InternalLegoLang.g:9026:3: rule__TheString__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__TheString__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheStringAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheString__Group__1__Impl"


    // $ANTLR start "rule__TheColor__Group__0"
    // InternalLegoLang.g:9035:1: rule__TheColor__Group__0 : rule__TheColor__Group__0__Impl rule__TheColor__Group__1 ;
    public final void rule__TheColor__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9039:1: ( rule__TheColor__Group__0__Impl rule__TheColor__Group__1 )
            // InternalLegoLang.g:9040:2: rule__TheColor__Group__0__Impl rule__TheColor__Group__1
            {
            pushFollow(FOLLOW_57);
            rule__TheColor__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TheColor__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheColor__Group__0"


    // $ANTLR start "rule__TheColor__Group__0__Impl"
    // InternalLegoLang.g:9047:1: rule__TheColor__Group__0__Impl : ( () ) ;
    public final void rule__TheColor__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9051:1: ( ( () ) )
            // InternalLegoLang.g:9052:1: ( () )
            {
            // InternalLegoLang.g:9052:1: ( () )
            // InternalLegoLang.g:9053:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheColorAccess().getTheColorAction_0()); 
            }
            // InternalLegoLang.g:9054:2: ()
            // InternalLegoLang.g:9054:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheColorAccess().getTheColorAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheColor__Group__0__Impl"


    // $ANTLR start "rule__TheColor__Group__1"
    // InternalLegoLang.g:9062:1: rule__TheColor__Group__1 : rule__TheColor__Group__1__Impl ;
    public final void rule__TheColor__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9066:1: ( rule__TheColor__Group__1__Impl )
            // InternalLegoLang.g:9067:2: rule__TheColor__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TheColor__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheColor__Group__1"


    // $ANTLR start "rule__TheColor__Group__1__Impl"
    // InternalLegoLang.g:9073:1: rule__TheColor__Group__1__Impl : ( ( rule__TheColor__ValueAssignment_1 ) ) ;
    public final void rule__TheColor__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9077:1: ( ( ( rule__TheColor__ValueAssignment_1 ) ) )
            // InternalLegoLang.g:9078:1: ( ( rule__TheColor__ValueAssignment_1 ) )
            {
            // InternalLegoLang.g:9078:1: ( ( rule__TheColor__ValueAssignment_1 ) )
            // InternalLegoLang.g:9079:2: ( rule__TheColor__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheColorAccess().getValueAssignment_1()); 
            }
            // InternalLegoLang.g:9080:2: ( rule__TheColor__ValueAssignment_1 )
            // InternalLegoLang.g:9080:3: rule__TheColor__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__TheColor__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheColorAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheColor__Group__1__Impl"


    // $ANTLR start "rule__FQN__Group__0"
    // InternalLegoLang.g:9089:1: rule__FQN__Group__0 : rule__FQN__Group__0__Impl rule__FQN__Group__1 ;
    public final void rule__FQN__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9093:1: ( rule__FQN__Group__0__Impl rule__FQN__Group__1 )
            // InternalLegoLang.g:9094:2: rule__FQN__Group__0__Impl rule__FQN__Group__1
            {
            pushFollow(FOLLOW_51);
            rule__FQN__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FQN__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FQN__Group__0"


    // $ANTLR start "rule__FQN__Group__0__Impl"
    // InternalLegoLang.g:9101:1: rule__FQN__Group__0__Impl : ( RULE_ID ) ;
    public final void rule__FQN__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9105:1: ( ( RULE_ID ) )
            // InternalLegoLang.g:9106:1: ( RULE_ID )
            {
            // InternalLegoLang.g:9106:1: ( RULE_ID )
            // InternalLegoLang.g:9107:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FQN__Group__0__Impl"


    // $ANTLR start "rule__FQN__Group__1"
    // InternalLegoLang.g:9116:1: rule__FQN__Group__1 : rule__FQN__Group__1__Impl ;
    public final void rule__FQN__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9120:1: ( rule__FQN__Group__1__Impl )
            // InternalLegoLang.g:9121:2: rule__FQN__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FQN__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FQN__Group__1"


    // $ANTLR start "rule__FQN__Group__1__Impl"
    // InternalLegoLang.g:9127:1: rule__FQN__Group__1__Impl : ( ( rule__FQN__Group_1__0 )* ) ;
    public final void rule__FQN__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9131:1: ( ( ( rule__FQN__Group_1__0 )* ) )
            // InternalLegoLang.g:9132:1: ( ( rule__FQN__Group_1__0 )* )
            {
            // InternalLegoLang.g:9132:1: ( ( rule__FQN__Group_1__0 )* )
            // InternalLegoLang.g:9133:2: ( rule__FQN__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFQNAccess().getGroup_1()); 
            }
            // InternalLegoLang.g:9134:2: ( rule__FQN__Group_1__0 )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==67) ) {
                    alt34=1;
                }


                switch (alt34) {
            	case 1 :
            	    // InternalLegoLang.g:9134:3: rule__FQN__Group_1__0
            	    {
            	    pushFollow(FOLLOW_58);
            	    rule__FQN__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFQNAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FQN__Group__1__Impl"


    // $ANTLR start "rule__FQN__Group_1__0"
    // InternalLegoLang.g:9143:1: rule__FQN__Group_1__0 : rule__FQN__Group_1__0__Impl rule__FQN__Group_1__1 ;
    public final void rule__FQN__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9147:1: ( rule__FQN__Group_1__0__Impl rule__FQN__Group_1__1 )
            // InternalLegoLang.g:9148:2: rule__FQN__Group_1__0__Impl rule__FQN__Group_1__1
            {
            pushFollow(FOLLOW_4);
            rule__FQN__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FQN__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FQN__Group_1__0"


    // $ANTLR start "rule__FQN__Group_1__0__Impl"
    // InternalLegoLang.g:9155:1: rule__FQN__Group_1__0__Impl : ( '.' ) ;
    public final void rule__FQN__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9159:1: ( ( '.' ) )
            // InternalLegoLang.g:9160:1: ( '.' )
            {
            // InternalLegoLang.g:9160:1: ( '.' )
            // InternalLegoLang.g:9161:2: '.'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); 
            }
            match(input,67,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFQNAccess().getFullStopKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FQN__Group_1__0__Impl"


    // $ANTLR start "rule__FQN__Group_1__1"
    // InternalLegoLang.g:9170:1: rule__FQN__Group_1__1 : rule__FQN__Group_1__1__Impl ;
    public final void rule__FQN__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9174:1: ( rule__FQN__Group_1__1__Impl )
            // InternalLegoLang.g:9175:2: rule__FQN__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FQN__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FQN__Group_1__1"


    // $ANTLR start "rule__FQN__Group_1__1__Impl"
    // InternalLegoLang.g:9181:1: rule__FQN__Group_1__1__Impl : ( RULE_ID ) ;
    public final void rule__FQN__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9185:1: ( ( RULE_ID ) )
            // InternalLegoLang.g:9186:1: ( RULE_ID )
            {
            // InternalLegoLang.g:9186:1: ( RULE_ID )
            // InternalLegoLang.g:9187:2: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFQNAccess().getIDTerminalRuleCall_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FQN__Group_1__1__Impl"


    // $ANTLR start "rule__EInt__Group__0"
    // InternalLegoLang.g:9197:1: rule__EInt__Group__0 : rule__EInt__Group__0__Impl rule__EInt__Group__1 ;
    public final void rule__EInt__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9201:1: ( rule__EInt__Group__0__Impl rule__EInt__Group__1 )
            // InternalLegoLang.g:9202:2: rule__EInt__Group__0__Impl rule__EInt__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__EInt__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__EInt__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EInt__Group__0"


    // $ANTLR start "rule__EInt__Group__0__Impl"
    // InternalLegoLang.g:9209:1: rule__EInt__Group__0__Impl : ( ( '-' )? ) ;
    public final void rule__EInt__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9213:1: ( ( ( '-' )? ) )
            // InternalLegoLang.g:9214:1: ( ( '-' )? )
            {
            // InternalLegoLang.g:9214:1: ( ( '-' )? )
            // InternalLegoLang.g:9215:2: ( '-' )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); 
            }
            // InternalLegoLang.g:9216:2: ( '-' )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==53) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalLegoLang.g:9216:3: '-'
                    {
                    match(input,53,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EInt__Group__0__Impl"


    // $ANTLR start "rule__EInt__Group__1"
    // InternalLegoLang.g:9224:1: rule__EInt__Group__1 : rule__EInt__Group__1__Impl ;
    public final void rule__EInt__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9228:1: ( rule__EInt__Group__1__Impl )
            // InternalLegoLang.g:9229:2: rule__EInt__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__EInt__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EInt__Group__1"


    // $ANTLR start "rule__EInt__Group__1__Impl"
    // InternalLegoLang.g:9235:1: rule__EInt__Group__1__Impl : ( RULE_INT ) ;
    public final void rule__EInt__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9239:1: ( ( RULE_INT ) )
            // InternalLegoLang.g:9240:1: ( RULE_INT )
            {
            // InternalLegoLang.g:9240:1: ( RULE_INT )
            // InternalLegoLang.g:9241:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EInt__Group__1__Impl"


    // $ANTLR start "rule__Program__NameAssignment_2"
    // InternalLegoLang.g:9251:1: rule__Program__NameAssignment_2 : ( ruleEString ) ;
    public final void rule__Program__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9255:1: ( ( ruleEString ) )
            // InternalLegoLang.g:9256:2: ( ruleEString )
            {
            // InternalLegoLang.g:9256:2: ( ruleEString )
            // InternalLegoLang.g:9257:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getNameEStringParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getNameEStringParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__NameAssignment_2"


    // $ANTLR start "rule__Program__StatementAssignment_4"
    // InternalLegoLang.g:9266:1: rule__Program__StatementAssignment_4 : ( ruleStatement ) ;
    public final void rule__Program__StatementAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9270:1: ( ( ruleStatement ) )
            // InternalLegoLang.g:9271:2: ( ruleStatement )
            {
            // InternalLegoLang.g:9271:2: ( ruleStatement )
            // InternalLegoLang.g:9272:3: ruleStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getProgramAccess().getStatementStatementParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getProgramAccess().getStatementStatementParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Program__StatementAssignment_4"


    // $ANTLR start "rule__WheelEngine__NameAssignment_1"
    // InternalLegoLang.g:9281:1: rule__WheelEngine__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__WheelEngine__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9285:1: ( ( ruleEString ) )
            // InternalLegoLang.g:9286:2: ( ruleEString )
            {
            // InternalLegoLang.g:9286:2: ( ruleEString )
            // InternalLegoLang.g:9287:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWheelEngineAccess().getNameEStringParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWheelEngineAccess().getNameEStringParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WheelEngine__NameAssignment_1"


    // $ANTLR start "rule__WheelEngine__PositionAssignment_3"
    // InternalLegoLang.g:9296:1: rule__WheelEngine__PositionAssignment_3 : ( ruleEString ) ;
    public final void rule__WheelEngine__PositionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9300:1: ( ( ruleEString ) )
            // InternalLegoLang.g:9301:2: ( ruleEString )
            {
            // InternalLegoLang.g:9301:2: ( ruleEString )
            // InternalLegoLang.g:9302:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWheelEngineAccess().getPositionEStringParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWheelEngineAccess().getPositionEStringParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WheelEngine__PositionAssignment_3"


    // $ANTLR start "rule__MotorizedArmEngine__NameAssignment_1"
    // InternalLegoLang.g:9311:1: rule__MotorizedArmEngine__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__MotorizedArmEngine__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9315:1: ( ( ruleEString ) )
            // InternalLegoLang.g:9316:2: ( ruleEString )
            {
            // InternalLegoLang.g:9316:2: ( ruleEString )
            // InternalLegoLang.g:9317:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMotorizedArmEngineAccess().getNameEStringParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMotorizedArmEngineAccess().getNameEStringParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MotorizedArmEngine__NameAssignment_1"


    // $ANTLR start "rule__MotorizedArmEngine__PositionAssignment_3"
    // InternalLegoLang.g:9326:1: rule__MotorizedArmEngine__PositionAssignment_3 : ( ruleEString ) ;
    public final void rule__MotorizedArmEngine__PositionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9330:1: ( ( ruleEString ) )
            // InternalLegoLang.g:9331:2: ( ruleEString )
            {
            // InternalLegoLang.g:9331:2: ( ruleEString )
            // InternalLegoLang.g:9332:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMotorizedArmEngineAccess().getPositionEStringParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMotorizedArmEngineAccess().getPositionEStringParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MotorizedArmEngine__PositionAssignment_3"


    // $ANTLR start "rule__PaintballLauncherEngine__NameAssignment_1"
    // InternalLegoLang.g:9341:1: rule__PaintballLauncherEngine__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__PaintballLauncherEngine__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9345:1: ( ( ruleEString ) )
            // InternalLegoLang.g:9346:2: ( ruleEString )
            {
            // InternalLegoLang.g:9346:2: ( ruleEString )
            // InternalLegoLang.g:9347:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPaintballLauncherEngineAccess().getNameEStringParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPaintballLauncherEngineAccess().getNameEStringParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PaintballLauncherEngine__NameAssignment_1"


    // $ANTLR start "rule__PaintballLauncherEngine__PositionAssignment_3"
    // InternalLegoLang.g:9356:1: rule__PaintballLauncherEngine__PositionAssignment_3 : ( ruleEString ) ;
    public final void rule__PaintballLauncherEngine__PositionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9360:1: ( ( ruleEString ) )
            // InternalLegoLang.g:9361:2: ( ruleEString )
            {
            // InternalLegoLang.g:9361:2: ( ruleEString )
            // InternalLegoLang.g:9362:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPaintballLauncherEngineAccess().getPositionEStringParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPaintballLauncherEngineAccess().getPositionEStringParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PaintballLauncherEngine__PositionAssignment_3"


    // $ANTLR start "rule__ColorSensor__NameAssignment_1"
    // InternalLegoLang.g:9371:1: rule__ColorSensor__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__ColorSensor__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9375:1: ( ( ruleEString ) )
            // InternalLegoLang.g:9376:2: ( ruleEString )
            {
            // InternalLegoLang.g:9376:2: ( ruleEString )
            // InternalLegoLang.g:9377:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorSensorAccess().getNameEStringParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorSensorAccess().getNameEStringParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorSensor__NameAssignment_1"


    // $ANTLR start "rule__ColorSensor__PositionAssignment_3"
    // InternalLegoLang.g:9386:1: rule__ColorSensor__PositionAssignment_3 : ( ruleEInt ) ;
    public final void rule__ColorSensor__PositionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9390:1: ( ( ruleEInt ) )
            // InternalLegoLang.g:9391:2: ( ruleEInt )
            {
            // InternalLegoLang.g:9391:2: ( ruleEInt )
            // InternalLegoLang.g:9392:3: ruleEInt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorSensorAccess().getPositionEIntParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorSensorAccess().getPositionEIntParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorSensor__PositionAssignment_3"


    // $ANTLR start "rule__LaserSensor__NameAssignment_1"
    // InternalLegoLang.g:9401:1: rule__LaserSensor__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__LaserSensor__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9405:1: ( ( ruleEString ) )
            // InternalLegoLang.g:9406:2: ( ruleEString )
            {
            // InternalLegoLang.g:9406:2: ( ruleEString )
            // InternalLegoLang.g:9407:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLaserSensorAccess().getNameEStringParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLaserSensorAccess().getNameEStringParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LaserSensor__NameAssignment_1"


    // $ANTLR start "rule__LaserSensor__PositionAssignment_3"
    // InternalLegoLang.g:9416:1: rule__LaserSensor__PositionAssignment_3 : ( ruleEInt ) ;
    public final void rule__LaserSensor__PositionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9420:1: ( ( ruleEInt ) )
            // InternalLegoLang.g:9421:2: ( ruleEInt )
            {
            // InternalLegoLang.g:9421:2: ( ruleEInt )
            // InternalLegoLang.g:9422:3: ruleEInt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLaserSensorAccess().getPositionEIntParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLaserSensorAccess().getPositionEIntParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LaserSensor__PositionAssignment_3"


    // $ANTLR start "rule__GPSSensor__NameAssignment_1"
    // InternalLegoLang.g:9431:1: rule__GPSSensor__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__GPSSensor__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9435:1: ( ( ruleEString ) )
            // InternalLegoLang.g:9436:2: ( ruleEString )
            {
            // InternalLegoLang.g:9436:2: ( ruleEString )
            // InternalLegoLang.g:9437:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGPSSensorAccess().getNameEStringParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGPSSensorAccess().getNameEStringParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GPSSensor__NameAssignment_1"


    // $ANTLR start "rule__GPSSensor__PositionAssignment_3"
    // InternalLegoLang.g:9446:1: rule__GPSSensor__PositionAssignment_3 : ( ruleEInt ) ;
    public final void rule__GPSSensor__PositionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9450:1: ( ( ruleEInt ) )
            // InternalLegoLang.g:9451:2: ( ruleEInt )
            {
            // InternalLegoLang.g:9451:2: ( ruleEInt )
            // InternalLegoLang.g:9452:3: ruleEInt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGPSSensorAccess().getPositionEIntParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGPSSensorAccess().getPositionEIntParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GPSSensor__PositionAssignment_3"


    // $ANTLR start "rule__GyroSensor__NameAssignment_1"
    // InternalLegoLang.g:9461:1: rule__GyroSensor__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__GyroSensor__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9465:1: ( ( ruleEString ) )
            // InternalLegoLang.g:9466:2: ( ruleEString )
            {
            // InternalLegoLang.g:9466:2: ( ruleEString )
            // InternalLegoLang.g:9467:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGyroSensorAccess().getNameEStringParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGyroSensorAccess().getNameEStringParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GyroSensor__NameAssignment_1"


    // $ANTLR start "rule__GyroSensor__PositionAssignment_3"
    // InternalLegoLang.g:9476:1: rule__GyroSensor__PositionAssignment_3 : ( ruleEInt ) ;
    public final void rule__GyroSensor__PositionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9480:1: ( ( ruleEInt ) )
            // InternalLegoLang.g:9481:2: ( ruleEInt )
            {
            // InternalLegoLang.g:9481:2: ( ruleEInt )
            // InternalLegoLang.g:9482:3: ruleEInt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGyroSensorAccess().getPositionEIntParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGyroSensorAccess().getPositionEIntParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GyroSensor__PositionAssignment_3"


    // $ANTLR start "rule__UltraSonicSensor__NameAssignment_1"
    // InternalLegoLang.g:9491:1: rule__UltraSonicSensor__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__UltraSonicSensor__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9495:1: ( ( ruleEString ) )
            // InternalLegoLang.g:9496:2: ( ruleEString )
            {
            // InternalLegoLang.g:9496:2: ( ruleEString )
            // InternalLegoLang.g:9497:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUltraSonicSensorAccess().getNameEStringParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUltraSonicSensorAccess().getNameEStringParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UltraSonicSensor__NameAssignment_1"


    // $ANTLR start "rule__UltraSonicSensor__PositionAssignment_3"
    // InternalLegoLang.g:9506:1: rule__UltraSonicSensor__PositionAssignment_3 : ( ruleEInt ) ;
    public final void rule__UltraSonicSensor__PositionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9510:1: ( ( ruleEInt ) )
            // InternalLegoLang.g:9511:2: ( ruleEInt )
            {
            // InternalLegoLang.g:9511:2: ( ruleEInt )
            // InternalLegoLang.g:9512:3: ruleEInt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUltraSonicSensorAccess().getPositionEIntParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUltraSonicSensorAccess().getPositionEIntParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UltraSonicSensor__PositionAssignment_3"


    // $ANTLR start "rule__Car__NameAssignment_1"
    // InternalLegoLang.g:9521:1: rule__Car__NameAssignment_1 : ( ruleEString ) ;
    public final void rule__Car__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9525:1: ( ( ruleEString ) )
            // InternalLegoLang.g:9526:2: ( ruleEString )
            {
            // InternalLegoLang.g:9526:2: ( ruleEString )
            // InternalLegoLang.g:9527:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCarAccess().getNameEStringParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCarAccess().getNameEStringParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__NameAssignment_1"


    // $ANTLR start "rule__Car__SensorAssignment_3"
    // InternalLegoLang.g:9536:1: rule__Car__SensorAssignment_3 : ( ruleSensor ) ;
    public final void rule__Car__SensorAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9540:1: ( ( ruleSensor ) )
            // InternalLegoLang.g:9541:2: ( ruleSensor )
            {
            // InternalLegoLang.g:9541:2: ( ruleSensor )
            // InternalLegoLang.g:9542:3: ruleSensor
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCarAccess().getSensorSensorParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSensor();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCarAccess().getSensorSensorParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__SensorAssignment_3"


    // $ANTLR start "rule__Car__EngineAssignment_4"
    // InternalLegoLang.g:9551:1: rule__Car__EngineAssignment_4 : ( ruleEngine ) ;
    public final void rule__Car__EngineAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9555:1: ( ( ruleEngine ) )
            // InternalLegoLang.g:9556:2: ( ruleEngine )
            {
            // InternalLegoLang.g:9556:2: ( ruleEngine )
            // InternalLegoLang.g:9557:3: ruleEngine
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCarAccess().getEngineEngineParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEngine();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getCarAccess().getEngineEngineParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Car__EngineAssignment_4"


    // $ANTLR start "rule__VitesseOperation__WheelengineAssignment_3"
    // InternalLegoLang.g:9566:1: rule__VitesseOperation__WheelengineAssignment_3 : ( ( ruleFQN ) ) ;
    public final void rule__VitesseOperation__WheelengineAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9570:1: ( ( ( ruleFQN ) ) )
            // InternalLegoLang.g:9571:2: ( ( ruleFQN ) )
            {
            // InternalLegoLang.g:9571:2: ( ( ruleFQN ) )
            // InternalLegoLang.g:9572:3: ( ruleFQN )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVitesseOperationAccess().getWheelengineWheelEngineCrossReference_3_0()); 
            }
            // InternalLegoLang.g:9573:3: ( ruleFQN )
            // InternalLegoLang.g:9574:4: ruleFQN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVitesseOperationAccess().getWheelengineWheelEngineFQNParserRuleCall_3_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleFQN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVitesseOperationAccess().getWheelengineWheelEngineFQNParserRuleCall_3_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVitesseOperationAccess().getWheelengineWheelEngineCrossReference_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__WheelengineAssignment_3"


    // $ANTLR start "rule__VitesseOperation__RightAssignment_6"
    // InternalLegoLang.g:9585:1: rule__VitesseOperation__RightAssignment_6 : ( ruleExpression ) ;
    public final void rule__VitesseOperation__RightAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9589:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:9590:2: ( ruleExpression )
            {
            // InternalLegoLang.g:9590:2: ( ruleExpression )
            // InternalLegoLang.g:9591:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVitesseOperationAccess().getRightExpressionParserRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVitesseOperationAccess().getRightExpressionParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VitesseOperation__RightAssignment_6"


    // $ANTLR start "rule__BreakMotor__EngineAssignment_3"
    // InternalLegoLang.g:9600:1: rule__BreakMotor__EngineAssignment_3 : ( ( ruleFQN ) ) ;
    public final void rule__BreakMotor__EngineAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9604:1: ( ( ( ruleFQN ) ) )
            // InternalLegoLang.g:9605:2: ( ( ruleFQN ) )
            {
            // InternalLegoLang.g:9605:2: ( ( ruleFQN ) )
            // InternalLegoLang.g:9606:3: ( ruleFQN )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakMotorAccess().getEngineEngineCrossReference_3_0()); 
            }
            // InternalLegoLang.g:9607:3: ( ruleFQN )
            // InternalLegoLang.g:9608:4: ruleFQN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBreakMotorAccess().getEngineEngineFQNParserRuleCall_3_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleFQN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakMotorAccess().getEngineEngineFQNParserRuleCall_3_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBreakMotorAccess().getEngineEngineCrossReference_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BreakMotor__EngineAssignment_3"


    // $ANTLR start "rule__PositionOperation__MotorizedarmengineAssignment_3"
    // InternalLegoLang.g:9619:1: rule__PositionOperation__MotorizedarmengineAssignment_3 : ( ( ruleFQN ) ) ;
    public final void rule__PositionOperation__MotorizedarmengineAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9623:1: ( ( ( ruleFQN ) ) )
            // InternalLegoLang.g:9624:2: ( ( ruleFQN ) )
            {
            // InternalLegoLang.g:9624:2: ( ( ruleFQN ) )
            // InternalLegoLang.g:9625:3: ( ruleFQN )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPositionOperationAccess().getMotorizedarmengineMotorizedArmEngineCrossReference_3_0()); 
            }
            // InternalLegoLang.g:9626:3: ( ruleFQN )
            // InternalLegoLang.g:9627:4: ruleFQN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPositionOperationAccess().getMotorizedarmengineMotorizedArmEngineFQNParserRuleCall_3_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleFQN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPositionOperationAccess().getMotorizedarmengineMotorizedArmEngineFQNParserRuleCall_3_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPositionOperationAccess().getMotorizedarmengineMotorizedArmEngineCrossReference_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__MotorizedarmengineAssignment_3"


    // $ANTLR start "rule__PositionOperation__RightAssignment_6"
    // InternalLegoLang.g:9638:1: rule__PositionOperation__RightAssignment_6 : ( ruleExpression ) ;
    public final void rule__PositionOperation__RightAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9642:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:9643:2: ( ruleExpression )
            {
            // InternalLegoLang.g:9643:2: ( ruleExpression )
            // InternalLegoLang.g:9644:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPositionOperationAccess().getRightExpressionParserRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPositionOperationAccess().getRightExpressionParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PositionOperation__RightAssignment_6"


    // $ANTLR start "rule__ForceOperation__PaintballlauncherengineAssignment_3"
    // InternalLegoLang.g:9653:1: rule__ForceOperation__PaintballlauncherengineAssignment_3 : ( ( ruleFQN ) ) ;
    public final void rule__ForceOperation__PaintballlauncherengineAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9657:1: ( ( ( ruleFQN ) ) )
            // InternalLegoLang.g:9658:2: ( ( ruleFQN ) )
            {
            // InternalLegoLang.g:9658:2: ( ( ruleFQN ) )
            // InternalLegoLang.g:9659:3: ( ruleFQN )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForceOperationAccess().getPaintballlauncherenginePaintballLauncherEngineCrossReference_3_0()); 
            }
            // InternalLegoLang.g:9660:3: ( ruleFQN )
            // InternalLegoLang.g:9661:4: ruleFQN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForceOperationAccess().getPaintballlauncherenginePaintballLauncherEngineFQNParserRuleCall_3_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleFQN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForceOperationAccess().getPaintballlauncherenginePaintballLauncherEngineFQNParserRuleCall_3_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getForceOperationAccess().getPaintballlauncherenginePaintballLauncherEngineCrossReference_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__PaintballlauncherengineAssignment_3"


    // $ANTLR start "rule__ForceOperation__RightAssignment_6"
    // InternalLegoLang.g:9672:1: rule__ForceOperation__RightAssignment_6 : ( ruleExpression ) ;
    public final void rule__ForceOperation__RightAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9676:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:9677:2: ( ruleExpression )
            {
            // InternalLegoLang.g:9677:2: ( ruleExpression )
            // InternalLegoLang.g:9678:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getForceOperationAccess().getRightExpressionParserRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getForceOperationAccess().getRightExpressionParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ForceOperation__RightAssignment_6"


    // $ANTLR start "rule__ColorOperation__ColorsensorAssignment_3"
    // InternalLegoLang.g:9687:1: rule__ColorOperation__ColorsensorAssignment_3 : ( ( ruleFQN ) ) ;
    public final void rule__ColorOperation__ColorsensorAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9691:1: ( ( ( ruleFQN ) ) )
            // InternalLegoLang.g:9692:2: ( ( ruleFQN ) )
            {
            // InternalLegoLang.g:9692:2: ( ( ruleFQN ) )
            // InternalLegoLang.g:9693:3: ( ruleFQN )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorOperationAccess().getColorsensorColorSensorCrossReference_3_0()); 
            }
            // InternalLegoLang.g:9694:3: ( ruleFQN )
            // InternalLegoLang.g:9695:4: ruleFQN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getColorOperationAccess().getColorsensorColorSensorFQNParserRuleCall_3_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleFQN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorOperationAccess().getColorsensorColorSensorFQNParserRuleCall_3_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getColorOperationAccess().getColorsensorColorSensorCrossReference_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ColorOperation__ColorsensorAssignment_3"


    // $ANTLR start "rule__IntensityOperation__ColorsensorAssignment_3"
    // InternalLegoLang.g:9706:1: rule__IntensityOperation__ColorsensorAssignment_3 : ( ( ruleFQN ) ) ;
    public final void rule__IntensityOperation__ColorsensorAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9710:1: ( ( ( ruleFQN ) ) )
            // InternalLegoLang.g:9711:2: ( ( ruleFQN ) )
            {
            // InternalLegoLang.g:9711:2: ( ( ruleFQN ) )
            // InternalLegoLang.g:9712:3: ( ruleFQN )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntensityOperationAccess().getColorsensorColorSensorCrossReference_3_0()); 
            }
            // InternalLegoLang.g:9713:3: ( ruleFQN )
            // InternalLegoLang.g:9714:4: ruleFQN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getIntensityOperationAccess().getColorsensorColorSensorFQNParserRuleCall_3_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleFQN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntensityOperationAccess().getColorsensorColorSensorFQNParserRuleCall_3_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getIntensityOperationAccess().getColorsensorColorSensorCrossReference_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__IntensityOperation__ColorsensorAssignment_3"


    // $ANTLR start "rule__RangeOperation__LasersensorAssignment_3"
    // InternalLegoLang.g:9725:1: rule__RangeOperation__LasersensorAssignment_3 : ( ( ruleFQN ) ) ;
    public final void rule__RangeOperation__LasersensorAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9729:1: ( ( ( ruleFQN ) ) )
            // InternalLegoLang.g:9730:2: ( ( ruleFQN ) )
            {
            // InternalLegoLang.g:9730:2: ( ( ruleFQN ) )
            // InternalLegoLang.g:9731:3: ( ruleFQN )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeOperationAccess().getLasersensorLaserSensorCrossReference_3_0()); 
            }
            // InternalLegoLang.g:9732:3: ( ruleFQN )
            // InternalLegoLang.g:9733:4: ruleFQN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getRangeOperationAccess().getLasersensorLaserSensorFQNParserRuleCall_3_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleFQN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeOperationAccess().getLasersensorLaserSensorFQNParserRuleCall_3_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getRangeOperationAccess().getLasersensorLaserSensorCrossReference_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__RangeOperation__LasersensorAssignment_3"


    // $ANTLR start "rule__XGPSOperation__GpssensorAssignment_3"
    // InternalLegoLang.g:9744:1: rule__XGPSOperation__GpssensorAssignment_3 : ( ( ruleFQN ) ) ;
    public final void rule__XGPSOperation__GpssensorAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9748:1: ( ( ( ruleFQN ) ) )
            // InternalLegoLang.g:9749:2: ( ( ruleFQN ) )
            {
            // InternalLegoLang.g:9749:2: ( ( ruleFQN ) )
            // InternalLegoLang.g:9750:3: ( ruleFQN )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXGPSOperationAccess().getGpssensorGPSSensorCrossReference_3_0()); 
            }
            // InternalLegoLang.g:9751:3: ( ruleFQN )
            // InternalLegoLang.g:9752:4: ruleFQN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXGPSOperationAccess().getGpssensorGPSSensorFQNParserRuleCall_3_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleFQN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getXGPSOperationAccess().getGpssensorGPSSensorFQNParserRuleCall_3_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXGPSOperationAccess().getGpssensorGPSSensorCrossReference_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__XGPSOperation__GpssensorAssignment_3"


    // $ANTLR start "rule__YGPSOperation__GpssensorAssignment_3"
    // InternalLegoLang.g:9763:1: rule__YGPSOperation__GpssensorAssignment_3 : ( ( ruleFQN ) ) ;
    public final void rule__YGPSOperation__GpssensorAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9767:1: ( ( ( ruleFQN ) ) )
            // InternalLegoLang.g:9768:2: ( ( ruleFQN ) )
            {
            // InternalLegoLang.g:9768:2: ( ( ruleFQN ) )
            // InternalLegoLang.g:9769:3: ( ruleFQN )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getYGPSOperationAccess().getGpssensorGPSSensorCrossReference_3_0()); 
            }
            // InternalLegoLang.g:9770:3: ( ruleFQN )
            // InternalLegoLang.g:9771:4: ruleFQN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getYGPSOperationAccess().getGpssensorGPSSensorFQNParserRuleCall_3_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleFQN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getYGPSOperationAccess().getGpssensorGPSSensorFQNParserRuleCall_3_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getYGPSOperationAccess().getGpssensorGPSSensorCrossReference_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__YGPSOperation__GpssensorAssignment_3"


    // $ANTLR start "rule__AngleOperation__GyrosensorAssignment_3"
    // InternalLegoLang.g:9782:1: rule__AngleOperation__GyrosensorAssignment_3 : ( ( ruleFQN ) ) ;
    public final void rule__AngleOperation__GyrosensorAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9786:1: ( ( ( ruleFQN ) ) )
            // InternalLegoLang.g:9787:2: ( ( ruleFQN ) )
            {
            // InternalLegoLang.g:9787:2: ( ( ruleFQN ) )
            // InternalLegoLang.g:9788:3: ( ruleFQN )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAngleOperationAccess().getGyrosensorGyroSensorCrossReference_3_0()); 
            }
            // InternalLegoLang.g:9789:3: ( ruleFQN )
            // InternalLegoLang.g:9790:4: ruleFQN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAngleOperationAccess().getGyrosensorGyroSensorFQNParserRuleCall_3_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleFQN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAngleOperationAccess().getGyrosensorGyroSensorFQNParserRuleCall_3_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAngleOperationAccess().getGyrosensorGyroSensorCrossReference_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AngleOperation__GyrosensorAssignment_3"


    // $ANTLR start "rule__DistanceOperation__UltrasonicsensorAssignment_3"
    // InternalLegoLang.g:9801:1: rule__DistanceOperation__UltrasonicsensorAssignment_3 : ( ( ruleFQN ) ) ;
    public final void rule__DistanceOperation__UltrasonicsensorAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9805:1: ( ( ( ruleFQN ) ) )
            // InternalLegoLang.g:9806:2: ( ( ruleFQN ) )
            {
            // InternalLegoLang.g:9806:2: ( ( ruleFQN ) )
            // InternalLegoLang.g:9807:3: ( ruleFQN )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDistanceOperationAccess().getUltrasonicsensorUltraSonicSensorCrossReference_3_0()); 
            }
            // InternalLegoLang.g:9808:3: ( ruleFQN )
            // InternalLegoLang.g:9809:4: ruleFQN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDistanceOperationAccess().getUltrasonicsensorUltraSonicSensorFQNParserRuleCall_3_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleFQN();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDistanceOperationAccess().getUltrasonicsensorUltraSonicSensorFQNParserRuleCall_3_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDistanceOperationAccess().getUltrasonicsensorUltraSonicSensorCrossReference_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DistanceOperation__UltrasonicsensorAssignment_3"


    // $ANTLR start "rule__And__LeftAssignment_2"
    // InternalLegoLang.g:9820:1: rule__And__LeftAssignment_2 : ( ruleExpression ) ;
    public final void rule__And__LeftAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9824:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:9825:2: ( ruleExpression )
            {
            // InternalLegoLang.g:9825:2: ( ruleExpression )
            // InternalLegoLang.g:9826:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getLeftExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getLeftExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__LeftAssignment_2"


    // $ANTLR start "rule__And__RightAssignment_3_1"
    // InternalLegoLang.g:9835:1: rule__And__RightAssignment_3_1 : ( ruleExpression ) ;
    public final void rule__And__RightAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9839:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:9840:2: ( ruleExpression )
            {
            // InternalLegoLang.g:9840:2: ( ruleExpression )
            // InternalLegoLang.g:9841:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndAccess().getRightExpressionParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndAccess().getRightExpressionParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__And__RightAssignment_3_1"


    // $ANTLR start "rule__Or__LeftAssignment_2"
    // InternalLegoLang.g:9850:1: rule__Or__LeftAssignment_2 : ( ruleExpression ) ;
    public final void rule__Or__LeftAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9854:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:9855:2: ( ruleExpression )
            {
            // InternalLegoLang.g:9855:2: ( ruleExpression )
            // InternalLegoLang.g:9856:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getLeftExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getLeftExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__LeftAssignment_2"


    // $ANTLR start "rule__Or__RightAssignment_3_1"
    // InternalLegoLang.g:9865:1: rule__Or__RightAssignment_3_1 : ( ruleExpression ) ;
    public final void rule__Or__RightAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9869:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:9870:2: ( ruleExpression )
            {
            // InternalLegoLang.g:9870:2: ( ruleExpression )
            // InternalLegoLang.g:9871:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrAccess().getRightExpressionParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrAccess().getRightExpressionParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Or__RightAssignment_3_1"


    // $ANTLR start "rule__ConditionEtat__ConditionAssignment_1"
    // InternalLegoLang.g:9880:1: rule__ConditionEtat__ConditionAssignment_1 : ( ruleBooleanExpression ) ;
    public final void rule__ConditionEtat__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9884:1: ( ( ruleBooleanExpression ) )
            // InternalLegoLang.g:9885:2: ( ruleBooleanExpression )
            {
            // InternalLegoLang.g:9885:2: ( ruleBooleanExpression )
            // InternalLegoLang.g:9886:3: ruleBooleanExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionEtatAccess().getConditionBooleanExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBooleanExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionEtatAccess().getConditionBooleanExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__ConditionAssignment_1"


    // $ANTLR start "rule__ConditionEtat__ThenAssignment_3"
    // InternalLegoLang.g:9895:1: rule__ConditionEtat__ThenAssignment_3 : ( ruleStatement ) ;
    public final void rule__ConditionEtat__ThenAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9899:1: ( ( ruleStatement ) )
            // InternalLegoLang.g:9900:2: ( ruleStatement )
            {
            // InternalLegoLang.g:9900:2: ( ruleStatement )
            // InternalLegoLang.g:9901:3: ruleStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionEtatAccess().getThenStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionEtatAccess().getThenStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__ThenAssignment_3"


    // $ANTLR start "rule__ConditionEtat__ElseAssignment_5_1"
    // InternalLegoLang.g:9910:1: rule__ConditionEtat__ElseAssignment_5_1 : ( ruleStatement ) ;
    public final void rule__ConditionEtat__ElseAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9914:1: ( ( ruleStatement ) )
            // InternalLegoLang.g:9915:2: ( ruleStatement )
            {
            // InternalLegoLang.g:9915:2: ( ruleStatement )
            // InternalLegoLang.g:9916:3: ruleStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getConditionEtatAccess().getElseStatementParserRuleCall_5_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getConditionEtatAccess().getElseStatementParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ConditionEtat__ElseAssignment_5_1"


    // $ANTLR start "rule__WhileLoop__LoopConditionAssignment_1"
    // InternalLegoLang.g:9925:1: rule__WhileLoop__LoopConditionAssignment_1 : ( ruleBooleanExpression ) ;
    public final void rule__WhileLoop__LoopConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9929:1: ( ( ruleBooleanExpression ) )
            // InternalLegoLang.g:9930:2: ( ruleBooleanExpression )
            {
            // InternalLegoLang.g:9930:2: ( ruleBooleanExpression )
            // InternalLegoLang.g:9931:3: ruleBooleanExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileLoopAccess().getLoopConditionBooleanExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBooleanExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileLoopAccess().getLoopConditionBooleanExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileLoop__LoopConditionAssignment_1"


    // $ANTLR start "rule__WhileLoop__StatementAssignment_3"
    // InternalLegoLang.g:9940:1: rule__WhileLoop__StatementAssignment_3 : ( ruleStatement ) ;
    public final void rule__WhileLoop__StatementAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9944:1: ( ( ruleStatement ) )
            // InternalLegoLang.g:9945:2: ( ruleStatement )
            {
            // InternalLegoLang.g:9945:2: ( ruleStatement )
            // InternalLegoLang.g:9946:3: ruleStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getWhileLoopAccess().getStatementStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getWhileLoopAccess().getStatementStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__WhileLoop__StatementAssignment_3"


    // $ANTLR start "rule__MethodePrint__ExpressionAssignment_2_0"
    // InternalLegoLang.g:9955:1: rule__MethodePrint__ExpressionAssignment_2_0 : ( ruleExpression ) ;
    public final void rule__MethodePrint__ExpressionAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9959:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:9960:2: ( ruleExpression )
            {
            // InternalLegoLang.g:9960:2: ( ruleExpression )
            // InternalLegoLang.g:9961:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMethodePrintAccess().getExpressionExpressionParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMethodePrintAccess().getExpressionExpressionParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MethodePrint__ExpressionAssignment_2_0"


    // $ANTLR start "rule__VariableRef__VariableAssignment"
    // InternalLegoLang.g:9970:1: rule__VariableRef__VariableAssignment : ( ( ruleEString ) ) ;
    public final void rule__VariableRef__VariableAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9974:1: ( ( ( ruleEString ) ) )
            // InternalLegoLang.g:9975:2: ( ( ruleEString ) )
            {
            // InternalLegoLang.g:9975:2: ( ( ruleEString ) )
            // InternalLegoLang.g:9976:3: ( ruleEString )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariableRefAccess().getVariableVariableCrossReference_0()); 
            }
            // InternalLegoLang.g:9977:3: ( ruleEString )
            // InternalLegoLang.g:9978:4: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVariableRefAccess().getVariableVariableEStringParserRuleCall_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariableRefAccess().getVariableVariableEStringParserRuleCall_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVariableRefAccess().getVariableVariableCrossReference_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VariableRef__VariableAssignment"


    // $ANTLR start "rule__Substraction__LeftAssignment_1"
    // InternalLegoLang.g:9989:1: rule__Substraction__LeftAssignment_1 : ( ruleExpression ) ;
    public final void rule__Substraction__LeftAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:9993:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:9994:2: ( ruleExpression )
            {
            // InternalLegoLang.g:9994:2: ( ruleExpression )
            // InternalLegoLang.g:9995:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubstractionAccess().getLeftExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubstractionAccess().getLeftExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Substraction__LeftAssignment_1"


    // $ANTLR start "rule__Substraction__RightAssignment_3"
    // InternalLegoLang.g:10004:1: rule__Substraction__RightAssignment_3 : ( ruleExpression ) ;
    public final void rule__Substraction__RightAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10008:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10009:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10009:2: ( ruleExpression )
            // InternalLegoLang.g:10010:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubstractionAccess().getRightExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubstractionAccess().getRightExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Substraction__RightAssignment_3"


    // $ANTLR start "rule__Addition__LeftAssignment_1"
    // InternalLegoLang.g:10019:1: rule__Addition__LeftAssignment_1 : ( ruleExpression ) ;
    public final void rule__Addition__LeftAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10023:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10024:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10024:2: ( ruleExpression )
            // InternalLegoLang.g:10025:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditionAccess().getLeftExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditionAccess().getLeftExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__LeftAssignment_1"


    // $ANTLR start "rule__Addition__RightAssignment_3"
    // InternalLegoLang.g:10034:1: rule__Addition__RightAssignment_3 : ( ruleExpression ) ;
    public final void rule__Addition__RightAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10038:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10039:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10039:2: ( ruleExpression )
            // InternalLegoLang.g:10040:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAdditionAccess().getRightExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAdditionAccess().getRightExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Addition__RightAssignment_3"


    // $ANTLR start "rule__Multiplication__LeftAssignment_1"
    // InternalLegoLang.g:10049:1: rule__Multiplication__LeftAssignment_1 : ( ruleExpression ) ;
    public final void rule__Multiplication__LeftAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10053:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10054:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10054:2: ( ruleExpression )
            // InternalLegoLang.g:10055:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicationAccess().getLeftExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicationAccess().getLeftExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__LeftAssignment_1"


    // $ANTLR start "rule__Multiplication__RightAssignment_3"
    // InternalLegoLang.g:10064:1: rule__Multiplication__RightAssignment_3 : ( ruleExpression ) ;
    public final void rule__Multiplication__RightAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10068:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10069:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10069:2: ( ruleExpression )
            // InternalLegoLang.g:10070:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiplicationAccess().getRightExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiplicationAccess().getRightExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Multiplication__RightAssignment_3"


    // $ANTLR start "rule__Division__LeftAssignment_1"
    // InternalLegoLang.g:10079:1: rule__Division__LeftAssignment_1 : ( ruleExpression ) ;
    public final void rule__Division__LeftAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10083:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10084:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10084:2: ( ruleExpression )
            // InternalLegoLang.g:10085:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDivisionAccess().getLeftExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDivisionAccess().getLeftExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Division__LeftAssignment_1"


    // $ANTLR start "rule__Division__RightAssignment_3"
    // InternalLegoLang.g:10094:1: rule__Division__RightAssignment_3 : ( ruleExpression ) ;
    public final void rule__Division__RightAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10098:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10099:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10099:2: ( ruleExpression )
            // InternalLegoLang.g:10100:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDivisionAccess().getRightExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDivisionAccess().getRightExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Division__RightAssignment_3"


    // $ANTLR start "rule__GT__LeftAssignment_1"
    // InternalLegoLang.g:10109:1: rule__GT__LeftAssignment_1 : ( ruleExpression ) ;
    public final void rule__GT__LeftAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10113:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10114:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10114:2: ( ruleExpression )
            // InternalLegoLang.g:10115:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTAccess().getLeftExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTAccess().getLeftExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GT__LeftAssignment_1"


    // $ANTLR start "rule__GT__RightAssignment_3"
    // InternalLegoLang.g:10124:1: rule__GT__RightAssignment_3 : ( ruleExpression ) ;
    public final void rule__GT__RightAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10128:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10129:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10129:2: ( ruleExpression )
            // InternalLegoLang.g:10130:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTAccess().getRightExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTAccess().getRightExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GT__RightAssignment_3"


    // $ANTLR start "rule__LT__LeftAssignment_1"
    // InternalLegoLang.g:10139:1: rule__LT__LeftAssignment_1 : ( ruleExpression ) ;
    public final void rule__LT__LeftAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10143:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10144:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10144:2: ( ruleExpression )
            // InternalLegoLang.g:10145:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTAccess().getLeftExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTAccess().getLeftExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LT__LeftAssignment_1"


    // $ANTLR start "rule__LT__RightAssignment_3"
    // InternalLegoLang.g:10154:1: rule__LT__RightAssignment_3 : ( ruleExpression ) ;
    public final void rule__LT__RightAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10158:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10159:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10159:2: ( ruleExpression )
            // InternalLegoLang.g:10160:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTAccess().getRightExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTAccess().getRightExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LT__RightAssignment_3"


    // $ANTLR start "rule__Equal__LeftAssignment_1"
    // InternalLegoLang.g:10169:1: rule__Equal__LeftAssignment_1 : ( ruleExpression ) ;
    public final void rule__Equal__LeftAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10173:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10174:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10174:2: ( ruleExpression )
            // InternalLegoLang.g:10175:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualAccess().getLeftExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualAccess().getLeftExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equal__LeftAssignment_1"


    // $ANTLR start "rule__Equal__RightAssignment_3"
    // InternalLegoLang.g:10184:1: rule__Equal__RightAssignment_3 : ( ruleExpression ) ;
    public final void rule__Equal__RightAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10188:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10189:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10189:2: ( ruleExpression )
            // InternalLegoLang.g:10190:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualAccess().getRightExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualAccess().getRightExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Equal__RightAssignment_3"


    // $ANTLR start "rule__Different__LeftAssignment_1"
    // InternalLegoLang.g:10199:1: rule__Different__LeftAssignment_1 : ( ruleExpression ) ;
    public final void rule__Different__LeftAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10203:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10204:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10204:2: ( ruleExpression )
            // InternalLegoLang.g:10205:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDifferentAccess().getLeftExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDifferentAccess().getLeftExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Different__LeftAssignment_1"


    // $ANTLR start "rule__Different__RightAssignment_3"
    // InternalLegoLang.g:10214:1: rule__Different__RightAssignment_3 : ( ruleExpression ) ;
    public final void rule__Different__RightAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10218:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10219:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10219:2: ( ruleExpression )
            // InternalLegoLang.g:10220:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDifferentAccess().getRightExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDifferentAccess().getRightExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Different__RightAssignment_3"


    // $ANTLR start "rule__LTorEqual__LeftAssignment_1"
    // InternalLegoLang.g:10229:1: rule__LTorEqual__LeftAssignment_1 : ( ruleExpression ) ;
    public final void rule__LTorEqual__LeftAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10233:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10234:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10234:2: ( ruleExpression )
            // InternalLegoLang.g:10235:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTorEqualAccess().getLeftExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTorEqualAccess().getLeftExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTorEqual__LeftAssignment_1"


    // $ANTLR start "rule__LTorEqual__RightAssignment_3"
    // InternalLegoLang.g:10244:1: rule__LTorEqual__RightAssignment_3 : ( ruleExpression ) ;
    public final void rule__LTorEqual__RightAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10248:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10249:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10249:2: ( ruleExpression )
            // InternalLegoLang.g:10250:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getLTorEqualAccess().getRightExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getLTorEqualAccess().getRightExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__LTorEqual__RightAssignment_3"


    // $ANTLR start "rule__GTorEqual__LeftAssignment_1"
    // InternalLegoLang.g:10259:1: rule__GTorEqual__LeftAssignment_1 : ( ruleExpression ) ;
    public final void rule__GTorEqual__LeftAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10263:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10264:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10264:2: ( ruleExpression )
            // InternalLegoLang.g:10265:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTorEqualAccess().getLeftExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTorEqualAccess().getLeftExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GTorEqual__LeftAssignment_1"


    // $ANTLR start "rule__GTorEqual__RightAssignment_3"
    // InternalLegoLang.g:10274:1: rule__GTorEqual__RightAssignment_3 : ( ruleExpression ) ;
    public final void rule__GTorEqual__RightAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10278:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10279:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10279:2: ( ruleExpression )
            // InternalLegoLang.g:10280:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getGTorEqualAccess().getRightExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getGTorEqualAccess().getRightExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__GTorEqual__RightAssignment_3"


    // $ANTLR start "rule__Assignement__LeftAssignment_2"
    // InternalLegoLang.g:10289:1: rule__Assignement__LeftAssignment_2 : ( ruleExpression ) ;
    public final void rule__Assignement__LeftAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10293:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10294:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10294:2: ( ruleExpression )
            // InternalLegoLang.g:10295:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignementAccess().getLeftExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignementAccess().getLeftExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignement__LeftAssignment_2"


    // $ANTLR start "rule__Assignement__RightAssignment_4"
    // InternalLegoLang.g:10304:1: rule__Assignement__RightAssignment_4 : ( ruleExpression ) ;
    public final void rule__Assignement__RightAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10308:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10309:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10309:2: ( ruleExpression )
            // InternalLegoLang.g:10310:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAssignementAccess().getRightExpressionParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getAssignementAccess().getRightExpressionParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Assignement__RightAssignment_4"


    // $ANTLR start "rule__PlusEqual__LeftAssignment_2"
    // InternalLegoLang.g:10319:1: rule__PlusEqual__LeftAssignment_2 : ( ruleExpression ) ;
    public final void rule__PlusEqual__LeftAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10323:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10324:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10324:2: ( ruleExpression )
            // InternalLegoLang.g:10325:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusEqualAccess().getLeftExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusEqualAccess().getLeftExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusEqual__LeftAssignment_2"


    // $ANTLR start "rule__PlusEqual__RightAssignment_4"
    // InternalLegoLang.g:10334:1: rule__PlusEqual__RightAssignment_4 : ( ruleExpression ) ;
    public final void rule__PlusEqual__RightAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10338:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10339:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10339:2: ( ruleExpression )
            // InternalLegoLang.g:10340:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPlusEqualAccess().getRightExpressionParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getPlusEqualAccess().getRightExpressionParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__PlusEqual__RightAssignment_4"


    // $ANTLR start "rule__MinusEqual__LeftAssignment_2"
    // InternalLegoLang.g:10349:1: rule__MinusEqual__LeftAssignment_2 : ( ruleExpression ) ;
    public final void rule__MinusEqual__LeftAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10353:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10354:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10354:2: ( ruleExpression )
            // InternalLegoLang.g:10355:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMinusEqualAccess().getLeftExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMinusEqualAccess().getLeftExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MinusEqual__LeftAssignment_2"


    // $ANTLR start "rule__MinusEqual__RightAssignment_4"
    // InternalLegoLang.g:10364:1: rule__MinusEqual__RightAssignment_4 : ( ruleExpression ) ;
    public final void rule__MinusEqual__RightAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10368:1: ( ( ruleExpression ) )
            // InternalLegoLang.g:10369:2: ( ruleExpression )
            {
            // InternalLegoLang.g:10369:2: ( ruleExpression )
            // InternalLegoLang.g:10370:3: ruleExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMinusEqualAccess().getRightExpressionParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMinusEqualAccess().getRightExpressionParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MinusEqual__RightAssignment_4"


    // $ANTLR start "rule__UnInteger__IsConstAssignment_1"
    // InternalLegoLang.g:10379:1: rule__UnInteger__IsConstAssignment_1 : ( ( 'const' ) ) ;
    public final void rule__UnInteger__IsConstAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10383:1: ( ( ( 'const' ) ) )
            // InternalLegoLang.g:10384:2: ( ( 'const' ) )
            {
            // InternalLegoLang.g:10384:2: ( ( 'const' ) )
            // InternalLegoLang.g:10385:3: ( 'const' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnIntegerAccess().getIsConstConstKeyword_1_0()); 
            }
            // InternalLegoLang.g:10386:3: ( 'const' )
            // InternalLegoLang.g:10387:4: 'const'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnIntegerAccess().getIsConstConstKeyword_1_0()); 
            }
            match(input,70,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnIntegerAccess().getIsConstConstKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnIntegerAccess().getIsConstConstKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__IsConstAssignment_1"


    // $ANTLR start "rule__UnInteger__NameAssignment_3"
    // InternalLegoLang.g:10398:1: rule__UnInteger__NameAssignment_3 : ( ruleEString ) ;
    public final void rule__UnInteger__NameAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10402:1: ( ( ruleEString ) )
            // InternalLegoLang.g:10403:2: ( ruleEString )
            {
            // InternalLegoLang.g:10403:2: ( ruleEString )
            // InternalLegoLang.g:10404:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnIntegerAccess().getNameEStringParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnIntegerAccess().getNameEStringParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__NameAssignment_3"


    // $ANTLR start "rule__UnInteger__InitialeValueAssignment_4_1"
    // InternalLegoLang.g:10413:1: rule__UnInteger__InitialeValueAssignment_4_1 : ( ruleEInt ) ;
    public final void rule__UnInteger__InitialeValueAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10417:1: ( ( ruleEInt ) )
            // InternalLegoLang.g:10418:2: ( ruleEInt )
            {
            // InternalLegoLang.g:10418:2: ( ruleEInt )
            // InternalLegoLang.g:10419:3: ruleEInt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnIntegerAccess().getInitialeValueEIntParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnIntegerAccess().getInitialeValueEIntParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnInteger__InitialeValueAssignment_4_1"


    // $ANTLR start "rule__UnDouble__IsConstAssignment_1"
    // InternalLegoLang.g:10428:1: rule__UnDouble__IsConstAssignment_1 : ( ( 'const' ) ) ;
    public final void rule__UnDouble__IsConstAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10432:1: ( ( ( 'const' ) ) )
            // InternalLegoLang.g:10433:2: ( ( 'const' ) )
            {
            // InternalLegoLang.g:10433:2: ( ( 'const' ) )
            // InternalLegoLang.g:10434:3: ( 'const' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getIsConstConstKeyword_1_0()); 
            }
            // InternalLegoLang.g:10435:3: ( 'const' )
            // InternalLegoLang.g:10436:4: 'const'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getIsConstConstKeyword_1_0()); 
            }
            match(input,70,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getIsConstConstKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getIsConstConstKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__IsConstAssignment_1"


    // $ANTLR start "rule__UnDouble__NameAssignment_3"
    // InternalLegoLang.g:10447:1: rule__UnDouble__NameAssignment_3 : ( ruleEString ) ;
    public final void rule__UnDouble__NameAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10451:1: ( ( ruleEString ) )
            // InternalLegoLang.g:10452:2: ( ruleEString )
            {
            // InternalLegoLang.g:10452:2: ( ruleEString )
            // InternalLegoLang.g:10453:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getNameEStringParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getNameEStringParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__NameAssignment_3"


    // $ANTLR start "rule__UnDouble__InitialeValue1Assignment_4_1"
    // InternalLegoLang.g:10462:1: rule__UnDouble__InitialeValue1Assignment_4_1 : ( ruleEInt ) ;
    public final void rule__UnDouble__InitialeValue1Assignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10466:1: ( ( ruleEInt ) )
            // InternalLegoLang.g:10467:2: ( ruleEInt )
            {
            // InternalLegoLang.g:10467:2: ( ruleEInt )
            // InternalLegoLang.g:10468:3: ruleEInt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getInitialeValue1EIntParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getInitialeValue1EIntParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__InitialeValue1Assignment_4_1"


    // $ANTLR start "rule__UnDouble__InitialeValue2Assignment_4_3"
    // InternalLegoLang.g:10477:1: rule__UnDouble__InitialeValue2Assignment_4_3 : ( ruleEInt ) ;
    public final void rule__UnDouble__InitialeValue2Assignment_4_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10481:1: ( ( ruleEInt ) )
            // InternalLegoLang.g:10482:2: ( ruleEInt )
            {
            // InternalLegoLang.g:10482:2: ( ruleEInt )
            // InternalLegoLang.g:10483:3: ruleEInt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnDoubleAccess().getInitialeValue2EIntParserRuleCall_4_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnDoubleAccess().getInitialeValue2EIntParserRuleCall_4_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnDouble__InitialeValue2Assignment_4_3"


    // $ANTLR start "rule__UnBoolean__IsConstAssignment_1"
    // InternalLegoLang.g:10492:1: rule__UnBoolean__IsConstAssignment_1 : ( ( 'const' ) ) ;
    public final void rule__UnBoolean__IsConstAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10496:1: ( ( ( 'const' ) ) )
            // InternalLegoLang.g:10497:2: ( ( 'const' ) )
            {
            // InternalLegoLang.g:10497:2: ( ( 'const' ) )
            // InternalLegoLang.g:10498:3: ( 'const' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnBooleanAccess().getIsConstConstKeyword_1_0()); 
            }
            // InternalLegoLang.g:10499:3: ( 'const' )
            // InternalLegoLang.g:10500:4: 'const'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnBooleanAccess().getIsConstConstKeyword_1_0()); 
            }
            match(input,70,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnBooleanAccess().getIsConstConstKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnBooleanAccess().getIsConstConstKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__IsConstAssignment_1"


    // $ANTLR start "rule__UnBoolean__NameAssignment_3"
    // InternalLegoLang.g:10511:1: rule__UnBoolean__NameAssignment_3 : ( ruleEString ) ;
    public final void rule__UnBoolean__NameAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10515:1: ( ( ruleEString ) )
            // InternalLegoLang.g:10516:2: ( ruleEString )
            {
            // InternalLegoLang.g:10516:2: ( ruleEString )
            // InternalLegoLang.g:10517:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnBooleanAccess().getNameEStringParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnBooleanAccess().getNameEStringParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__NameAssignment_3"


    // $ANTLR start "rule__UnBoolean__InitialeValueAssignment_4_1"
    // InternalLegoLang.g:10526:1: rule__UnBoolean__InitialeValueAssignment_4_1 : ( ruleEBoolean ) ;
    public final void rule__UnBoolean__InitialeValueAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10530:1: ( ( ruleEBoolean ) )
            // InternalLegoLang.g:10531:2: ( ruleEBoolean )
            {
            // InternalLegoLang.g:10531:2: ( ruleEBoolean )
            // InternalLegoLang.g:10532:3: ruleEBoolean
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnBooleanAccess().getInitialeValueEBooleanParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnBooleanAccess().getInitialeValueEBooleanParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnBoolean__InitialeValueAssignment_4_1"


    // $ANTLR start "rule__UnString__IsConstAssignment_1"
    // InternalLegoLang.g:10541:1: rule__UnString__IsConstAssignment_1 : ( ( 'const' ) ) ;
    public final void rule__UnString__IsConstAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10545:1: ( ( ( 'const' ) ) )
            // InternalLegoLang.g:10546:2: ( ( 'const' ) )
            {
            // InternalLegoLang.g:10546:2: ( ( 'const' ) )
            // InternalLegoLang.g:10547:3: ( 'const' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnStringAccess().getIsConstConstKeyword_1_0()); 
            }
            // InternalLegoLang.g:10548:3: ( 'const' )
            // InternalLegoLang.g:10549:4: 'const'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnStringAccess().getIsConstConstKeyword_1_0()); 
            }
            match(input,70,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnStringAccess().getIsConstConstKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnStringAccess().getIsConstConstKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__IsConstAssignment_1"


    // $ANTLR start "rule__UnString__NameAssignment_3"
    // InternalLegoLang.g:10560:1: rule__UnString__NameAssignment_3 : ( ruleEString ) ;
    public final void rule__UnString__NameAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10564:1: ( ( ruleEString ) )
            // InternalLegoLang.g:10565:2: ( ruleEString )
            {
            // InternalLegoLang.g:10565:2: ( ruleEString )
            // InternalLegoLang.g:10566:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnStringAccess().getNameEStringParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnStringAccess().getNameEStringParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__NameAssignment_3"


    // $ANTLR start "rule__UnString__InitialeValueAssignment_4_1"
    // InternalLegoLang.g:10575:1: rule__UnString__InitialeValueAssignment_4_1 : ( RULE_STRING ) ;
    public final void rule__UnString__InitialeValueAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10579:1: ( ( RULE_STRING ) )
            // InternalLegoLang.g:10580:2: ( RULE_STRING )
            {
            // InternalLegoLang.g:10580:2: ( RULE_STRING )
            // InternalLegoLang.g:10581:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnStringAccess().getInitialeValueSTRINGTerminalRuleCall_4_1_0()); 
            }
            match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnStringAccess().getInitialeValueSTRINGTerminalRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnString__InitialeValueAssignment_4_1"


    // $ANTLR start "rule__UnColor__IsConstAssignment_1"
    // InternalLegoLang.g:10590:1: rule__UnColor__IsConstAssignment_1 : ( ( 'const' ) ) ;
    public final void rule__UnColor__IsConstAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10594:1: ( ( ( 'const' ) ) )
            // InternalLegoLang.g:10595:2: ( ( 'const' ) )
            {
            // InternalLegoLang.g:10595:2: ( ( 'const' ) )
            // InternalLegoLang.g:10596:3: ( 'const' )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnColorAccess().getIsConstConstKeyword_1_0()); 
            }
            // InternalLegoLang.g:10597:3: ( 'const' )
            // InternalLegoLang.g:10598:4: 'const'
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnColorAccess().getIsConstConstKeyword_1_0()); 
            }
            match(input,70,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnColorAccess().getIsConstConstKeyword_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnColorAccess().getIsConstConstKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__IsConstAssignment_1"


    // $ANTLR start "rule__UnColor__NameAssignment_3"
    // InternalLegoLang.g:10609:1: rule__UnColor__NameAssignment_3 : ( ruleEString ) ;
    public final void rule__UnColor__NameAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10613:1: ( ( ruleEString ) )
            // InternalLegoLang.g:10614:2: ( ruleEString )
            {
            // InternalLegoLang.g:10614:2: ( ruleEString )
            // InternalLegoLang.g:10615:3: ruleEString
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnColorAccess().getNameEStringParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEString();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnColorAccess().getNameEStringParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__NameAssignment_3"


    // $ANTLR start "rule__UnColor__InitialValueAssignment_4_1"
    // InternalLegoLang.g:10624:1: rule__UnColor__InitialValueAssignment_4_1 : ( ruleColors ) ;
    public final void rule__UnColor__InitialValueAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10628:1: ( ( ruleColors ) )
            // InternalLegoLang.g:10629:2: ( ruleColors )
            {
            // InternalLegoLang.g:10629:2: ( ruleColors )
            // InternalLegoLang.g:10630:3: ruleColors
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnColorAccess().getInitialValueColorsEnumRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColors();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnColorAccess().getInitialValueColorsEnumRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnColor__InitialValueAssignment_4_1"


    // $ANTLR start "rule__TheDouble__Value1Assignment_1"
    // InternalLegoLang.g:10639:1: rule__TheDouble__Value1Assignment_1 : ( ruleEInt ) ;
    public final void rule__TheDouble__Value1Assignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10643:1: ( ( ruleEInt ) )
            // InternalLegoLang.g:10644:2: ( ruleEInt )
            {
            // InternalLegoLang.g:10644:2: ( ruleEInt )
            // InternalLegoLang.g:10645:3: ruleEInt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheDoubleAccess().getValue1EIntParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheDoubleAccess().getValue1EIntParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheDouble__Value1Assignment_1"


    // $ANTLR start "rule__TheDouble__Value2Assignment_3"
    // InternalLegoLang.g:10654:1: rule__TheDouble__Value2Assignment_3 : ( ruleEInt ) ;
    public final void rule__TheDouble__Value2Assignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10658:1: ( ( ruleEInt ) )
            // InternalLegoLang.g:10659:2: ( ruleEInt )
            {
            // InternalLegoLang.g:10659:2: ( ruleEInt )
            // InternalLegoLang.g:10660:3: ruleEInt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheDoubleAccess().getValue2EIntParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheDoubleAccess().getValue2EIntParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheDouble__Value2Assignment_3"


    // $ANTLR start "rule__TheInt__ValueAssignment_1"
    // InternalLegoLang.g:10669:1: rule__TheInt__ValueAssignment_1 : ( ruleEInt ) ;
    public final void rule__TheInt__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10673:1: ( ( ruleEInt ) )
            // InternalLegoLang.g:10674:2: ( ruleEInt )
            {
            // InternalLegoLang.g:10674:2: ( ruleEInt )
            // InternalLegoLang.g:10675:3: ruleEInt
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheIntAccess().getValueEIntParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEInt();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheIntAccess().getValueEIntParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheInt__ValueAssignment_1"


    // $ANTLR start "rule__TheBoolean__ValueAssignment_1"
    // InternalLegoLang.g:10684:1: rule__TheBoolean__ValueAssignment_1 : ( ruleEBoolean ) ;
    public final void rule__TheBoolean__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10688:1: ( ( ruleEBoolean ) )
            // InternalLegoLang.g:10689:2: ( ruleEBoolean )
            {
            // InternalLegoLang.g:10689:2: ( ruleEBoolean )
            // InternalLegoLang.g:10690:3: ruleEBoolean
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheBooleanAccess().getValueEBooleanParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEBoolean();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheBooleanAccess().getValueEBooleanParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheBoolean__ValueAssignment_1"


    // $ANTLR start "rule__TheString__ValueAssignment_1"
    // InternalLegoLang.g:10699:1: rule__TheString__ValueAssignment_1 : ( RULE_STRING ) ;
    public final void rule__TheString__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10703:1: ( ( RULE_STRING ) )
            // InternalLegoLang.g:10704:2: ( RULE_STRING )
            {
            // InternalLegoLang.g:10704:2: ( RULE_STRING )
            // InternalLegoLang.g:10705:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheStringAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }
            match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheStringAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheString__ValueAssignment_1"


    // $ANTLR start "rule__TheColor__ValueAssignment_1"
    // InternalLegoLang.g:10714:1: rule__TheColor__ValueAssignment_1 : ( ruleColors ) ;
    public final void rule__TheColor__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalLegoLang.g:10718:1: ( ( ruleColors ) )
            // InternalLegoLang.g:10719:2: ( ruleColors )
            {
            // InternalLegoLang.g:10719:2: ( ruleColors )
            // InternalLegoLang.g:10720:3: ruleColors
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTheColorAccess().getValueColorsEnumRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleColors();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTheColorAccess().getValueColorsEnumRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TheColor__ValueAssignment_1"

    // $ANTLR start synpred9_InternalLegoLang
    public final void synpred9_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1737:2: ( ( ruleBinaryOperation ) )
        // InternalLegoLang.g:1737:2: ( ruleBinaryOperation )
        {
        // InternalLegoLang.g:1737:2: ( ruleBinaryOperation )
        // InternalLegoLang.g:1738:3: ruleBinaryOperation
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getExpressionAccess().getBinaryOperationParserRuleCall_1()); 
        }
        pushFollow(FOLLOW_2);
        ruleBinaryOperation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred9_InternalLegoLang

    // $ANTLR start synpred12_InternalLegoLang
    public final void synpred12_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1755:2: ( ( ruleTheDouble ) )
        // InternalLegoLang.g:1755:2: ( ruleTheDouble )
        {
        // InternalLegoLang.g:1755:2: ( ruleTheDouble )
        // InternalLegoLang.g:1756:3: ruleTheDouble
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getExpressionAccess().getTheDoubleParserRuleCall_4()); 
        }
        pushFollow(FOLLOW_2);
        ruleTheDouble();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred12_InternalLegoLang

    // $ANTLR start synpred13_InternalLegoLang
    public final void synpred13_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1761:2: ( ( ruleTheInt ) )
        // InternalLegoLang.g:1761:2: ( ruleTheInt )
        {
        // InternalLegoLang.g:1761:2: ( ruleTheInt )
        // InternalLegoLang.g:1762:3: ruleTheInt
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getExpressionAccess().getTheIntParserRuleCall_5()); 
        }
        pushFollow(FOLLOW_2);
        ruleTheInt();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred13_InternalLegoLang

    // $ANTLR start synpred15_InternalLegoLang
    public final void synpred15_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1773:2: ( ( ruleEngineOperation ) )
        // InternalLegoLang.g:1773:2: ( ruleEngineOperation )
        {
        // InternalLegoLang.g:1773:2: ( ruleEngineOperation )
        // InternalLegoLang.g:1774:3: ruleEngineOperation
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getExpressionAccess().getEngineOperationParserRuleCall_7()); 
        }
        pushFollow(FOLLOW_2);
        ruleEngineOperation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred15_InternalLegoLang

    // $ANTLR start synpred18_InternalLegoLang
    public final void synpred18_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1806:2: ( ( ruleSubstraction ) )
        // InternalLegoLang.g:1806:2: ( ruleSubstraction )
        {
        // InternalLegoLang.g:1806:2: ( ruleSubstraction )
        // InternalLegoLang.g:1807:3: ruleSubstraction
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getBinaryOperationAccess().getSubstractionParserRuleCall_0()); 
        }
        pushFollow(FOLLOW_2);
        ruleSubstraction();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred18_InternalLegoLang

    // $ANTLR start synpred19_InternalLegoLang
    public final void synpred19_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1812:2: ( ( ruleComparaison ) )
        // InternalLegoLang.g:1812:2: ( ruleComparaison )
        {
        // InternalLegoLang.g:1812:2: ( ruleComparaison )
        // InternalLegoLang.g:1813:3: ruleComparaison
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getBinaryOperationAccess().getComparaisonParserRuleCall_1()); 
        }
        pushFollow(FOLLOW_2);
        ruleComparaison();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred19_InternalLegoLang

    // $ANTLR start synpred21_InternalLegoLang
    public final void synpred21_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1824:2: ( ( ruleDivision ) )
        // InternalLegoLang.g:1824:2: ( ruleDivision )
        {
        // InternalLegoLang.g:1824:2: ( ruleDivision )
        // InternalLegoLang.g:1825:3: ruleDivision
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getBinaryOperationAccess().getDivisionParserRuleCall_3()); 
        }
        pushFollow(FOLLOW_2);
        ruleDivision();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred21_InternalLegoLang

    // $ANTLR start synpred22_InternalLegoLang
    public final void synpred22_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1830:2: ( ( ruleMultiplication ) )
        // InternalLegoLang.g:1830:2: ( ruleMultiplication )
        {
        // InternalLegoLang.g:1830:2: ( ruleMultiplication )
        // InternalLegoLang.g:1831:3: ruleMultiplication
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getBinaryOperationAccess().getMultiplicationParserRuleCall_4()); 
        }
        pushFollow(FOLLOW_2);
        ruleMultiplication();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred22_InternalLegoLang

    // $ANTLR start synpred23_InternalLegoLang
    public final void synpred23_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1836:2: ( ( ruleAddition ) )
        // InternalLegoLang.g:1836:2: ( ruleAddition )
        {
        // InternalLegoLang.g:1836:2: ( ruleAddition )
        // InternalLegoLang.g:1837:3: ruleAddition
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getBinaryOperationAccess().getAdditionParserRuleCall_5()); 
        }
        pushFollow(FOLLOW_2);
        ruleAddition();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred23_InternalLegoLang

    // $ANTLR start synpred24_InternalLegoLang
    public final void synpred24_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1842:2: ( ( ruleMinusEqual ) )
        // InternalLegoLang.g:1842:2: ( ruleMinusEqual )
        {
        // InternalLegoLang.g:1842:2: ( ruleMinusEqual )
        // InternalLegoLang.g:1843:3: ruleMinusEqual
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getBinaryOperationAccess().getMinusEqualParserRuleCall_6()); 
        }
        pushFollow(FOLLOW_2);
        ruleMinusEqual();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred24_InternalLegoLang

    // $ANTLR start synpred29_InternalLegoLang
    public final void synpred29_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1902:2: ( ( ruleGT ) )
        // InternalLegoLang.g:1902:2: ( ruleGT )
        {
        // InternalLegoLang.g:1902:2: ( ruleGT )
        // InternalLegoLang.g:1903:3: ruleGT
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getComparaisonAccess().getGTParserRuleCall_0()); 
        }
        pushFollow(FOLLOW_2);
        ruleGT();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred29_InternalLegoLang

    // $ANTLR start synpred30_InternalLegoLang
    public final void synpred30_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1908:2: ( ( ruleEqual ) )
        // InternalLegoLang.g:1908:2: ( ruleEqual )
        {
        // InternalLegoLang.g:1908:2: ( ruleEqual )
        // InternalLegoLang.g:1909:3: ruleEqual
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getComparaisonAccess().getEqualParserRuleCall_1()); 
        }
        pushFollow(FOLLOW_2);
        ruleEqual();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred30_InternalLegoLang

    // $ANTLR start synpred31_InternalLegoLang
    public final void synpred31_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1914:2: ( ( ruleLT ) )
        // InternalLegoLang.g:1914:2: ( ruleLT )
        {
        // InternalLegoLang.g:1914:2: ( ruleLT )
        // InternalLegoLang.g:1915:3: ruleLT
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getComparaisonAccess().getLTParserRuleCall_2()); 
        }
        pushFollow(FOLLOW_2);
        ruleLT();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred31_InternalLegoLang

    // $ANTLR start synpred32_InternalLegoLang
    public final void synpred32_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1920:2: ( ( ruleDifferent ) )
        // InternalLegoLang.g:1920:2: ( ruleDifferent )
        {
        // InternalLegoLang.g:1920:2: ( ruleDifferent )
        // InternalLegoLang.g:1921:3: ruleDifferent
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getComparaisonAccess().getDifferentParserRuleCall_3()); 
        }
        pushFollow(FOLLOW_2);
        ruleDifferent();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred32_InternalLegoLang

    // $ANTLR start synpred33_InternalLegoLang
    public final void synpred33_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:1926:2: ( ( ruleGTorEqual ) )
        // InternalLegoLang.g:1926:2: ( ruleGTorEqual )
        {
        // InternalLegoLang.g:1926:2: ( ruleGTorEqual )
        // InternalLegoLang.g:1927:3: ruleGTorEqual
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getComparaisonAccess().getGTorEqualParserRuleCall_4()); 
        }
        pushFollow(FOLLOW_2);
        ruleGTorEqual();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred33_InternalLegoLang

    // $ANTLR start synpred48_InternalLegoLang
    public final void synpred48_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:2091:2: ( ( ruleAnd ) )
        // InternalLegoLang.g:2091:2: ( ruleAnd )
        {
        // InternalLegoLang.g:2091:2: ( ruleAnd )
        // InternalLegoLang.g:2092:3: ruleAnd
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getBooleanExpressionAccess().getAndParserRuleCall_0()); 
        }
        pushFollow(FOLLOW_2);
        ruleAnd();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred48_InternalLegoLang

    // $ANTLR start synpred49_InternalLegoLang
    public final void synpred49_InternalLegoLang_fragment() throws RecognitionException {   
        // InternalLegoLang.g:2112:2: ( ( ruleFQN ) )
        // InternalLegoLang.g:2112:2: ( ruleFQN )
        {
        // InternalLegoLang.g:2112:2: ( ruleFQN )
        // InternalLegoLang.g:2113:3: ruleFQN
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getEStringAccess().getFQNParserRuleCall_0()); 
        }
        pushFollow(FOLLOW_2);
        ruleFQN();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred49_InternalLegoLang

    // Delegated rules

    public final boolean synpred21_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred21_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred23_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred23_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred29_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred29_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred31_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred31_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred48_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred18_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred18_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred33_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred33_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred22_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred30_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred30_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalLegoLang() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalLegoLang_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA2 dfa2 = new DFA2(this);
    protected DFA3 dfa3 = new DFA3(this);
    static final String dfa_1s = "\22\uffff";
    static final String dfa_2s = "\1\4\1\uffff\2\0\3\uffff\2\0\11\uffff";
    static final String dfa_3s = "\1\65\1\uffff\2\0\3\uffff\2\0\11\uffff";
    static final String dfa_4s = "\1\uffff\1\1\2\uffff\1\3\1\4\3\uffff\1\7\1\uffff\1\11\1\12\1\2\1\13\1\10\1\5\1\6";
    static final String dfa_5s = "\2\uffff\1\0\1\1\3\uffff\1\2\1\3\11\uffff}>";
    static final String[] dfa_6s = {
            "\1\1\1\10\1\4\4\uffff\2\11\2\5\16\uffff\1\3\1\uffff\1\2\2\uffff\1\13\3\uffff\1\14\16\uffff\1\7",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA2 extends DFA {

        public DFA2(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 2;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "1726:1: rule__Expression__Alternatives : ( ( ruleVariableRef ) | ( ruleBinaryOperation ) | ( ruleTheString ) | ( ruleTheColor ) | ( ruleTheDouble ) | ( ruleTheInt ) | ( ruleTheBoolean ) | ( ruleEngineOperation ) | ( ruleBreakMotor ) | ( ruleSensorOperation ) | ( ruleBooleanExpression ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA2_2 = input.LA(1);

                         
                        int index2_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_InternalLegoLang()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index2_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA2_3 = input.LA(1);

                         
                        int index2_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred9_InternalLegoLang()) ) {s = 13;}

                        else if ( (synpred15_InternalLegoLang()) ) {s = 15;}

                         
                        input.seek(index2_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA2_7 = input.LA(1);

                         
                        int index2_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalLegoLang()) ) {s = 16;}

                        else if ( (synpred13_InternalLegoLang()) ) {s = 17;}

                         
                        input.seek(index2_7);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA2_8 = input.LA(1);

                         
                        int index2_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalLegoLang()) ) {s = 16;}

                        else if ( (synpred13_InternalLegoLang()) ) {s = 17;}

                         
                        input.seek(index2_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 2, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\12\uffff";
    static final String dfa_8s = "\1\35\1\0\10\uffff";
    static final String dfa_9s = "\1\37\1\0\10\uffff";
    static final String dfa_10s = "\2\uffff\1\3\1\1\1\2\1\4\1\5\1\6\1\7\1\10";
    static final String dfa_11s = "\1\uffff\1\0\10\uffff}>";
    static final String[] dfa_12s = {
            "\1\2\1\uffff\1\1",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA3 extends DFA {

        public DFA3(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 3;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "1801:1: rule__BinaryOperation__Alternatives : ( ( ruleSubstraction ) | ( ruleComparaison ) | ( ruleAssignement ) | ( ruleDivision ) | ( ruleMultiplication ) | ( ruleAddition ) | ( ruleMinusEqual ) | ( rulePlusEqual ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA3_1 = input.LA(1);

                         
                        int index3_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred18_InternalLegoLang()) ) {s = 3;}

                        else if ( (synpred19_InternalLegoLang()) ) {s = 4;}

                        else if ( (synpred21_InternalLegoLang()) ) {s = 5;}

                        else if ( (synpred22_InternalLegoLang()) ) {s = 6;}

                        else if ( (synpred23_InternalLegoLang()) ) {s = 7;}

                        else if ( (synpred24_InternalLegoLang()) ) {s = 8;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index3_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 3, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x002D00C4BFEE7870L,0x0000000000000076L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x002D00C4BFE87872L,0x0000000000000076L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0020000000000020L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x002D00C4BFEC7870L,0x0000000000000076L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x000000000F800002L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x00200044A0007870L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000080000000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000100000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000400100000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000800100000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x002D00C4BFE87870L,0x0000000000000076L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x00200044A0007872L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x2000000000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x4000000000000000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x00000000A0000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000042L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000044L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000050L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000001800L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000060L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000008000000000L,0x0000000000000076L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000006000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000008L});

}